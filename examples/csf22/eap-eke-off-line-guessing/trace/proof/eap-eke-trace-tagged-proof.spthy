maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.

theory EAP_EKE_trace_tagged begin

// Function signature and definition of the equational theory E

builtins: diffie-hellman
functions: fst/1, pair/2, sdec/2, senc/2, snd/1, wsdec/2, wsenc/2
equations:
    fst(<x.1, x.2>) = x.1,
    sdec(senc(x.1, x.2), x.2) = x.1,
    snd(<x.1, x.2>) = x.2,
    wsdec(wsenc(x.1, x.2), x.2) = x.1,
    wsenc(wsdec(x.1, x.2), x.2) = x.1



rule (modulo E) GeneratePassword:
   [ Fr( ~pass ) ]
  --[ PhaseLearning( ) ]->
   [
   !ClientPassword( $C, $S, ~pass ), !ServerPassword( $S, $C, ~pass ),
   RevealPass( $C, $S, ~pass )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) RevealPassword:
   [ RevealPass( $C, $S, ~pass ) ]
  --[ RevPass( $C, $S ), RevAgentPass( $C ), RevAgentPass( $S ) ]->
   [ Out( ~pass ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) ClientIdRequest:
   [ !ClientPassword( $C, $S, ~pass ), Fr( ~tid ) ]
  --[ Create( $C, ~tid ), PhaseLearning( ) ]->
   [ StateClientIdRequest( ~tid, $C, $S, ~pass ), Out( <$C, 'ID_C'> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) ServerIdResponse:
   [ !ServerPassword( $S, $C, ~pass ), Fr( ~tid ), In( <$C, 'ID_C'> ) ]
  --[ Create( $S, ~tid ), PhaseLearning( ) ]->
   [ StateServerIdResponse( ~tid, $S, $C, ~pass ), Out( <$S, 'ID_S'> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) ClientCommitRequest:
   [ StateClientIdRequest( tid, C, S, pass ), Fr( ~x_c ), In( <S, 'ID_S'> )
   ]
  --[ PhaseLearning( ) ]->
   [
   StateClientCommitRequest( tid, C, S, pass, ~x_c, 'g'^~x_c ),
   Out( wsenc('g'^~x_c, pass) )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) ServerCommitResponse:
   [
   StateServerIdResponse( tid, S, C, pass ), In( client_commit_request ),
   Fr( ~x_s ), Fr( ~nonce_s )
   ]
  --[
  OutServerCommitResponseNonce( senc(<'1', ~nonce_s>,
                                     wsdec(client_commit_request, pass)^~x_s)
  ),
  PhaseLearning( )
  ]->
   [
   StateServerCommitResponse( tid, S, C, pass, ~x_s, 'g'^~x_s, ~nonce_s,
                              wsdec(client_commit_request, pass)^~x_s,
                              wsdec(client_commit_request, pass)
   ),
   Out( wsenc('g'^~x_s, pass) ),
   Out( senc(<'1', ~nonce_s>, wsdec(client_commit_request, pass)^~x_s) )
   ]

  /*
  rule (modulo AC) ServerCommitResponse:
     [
     StateServerIdResponse( tid, S, C, pass ), In( client_commit_request ),
     Fr( ~x_s ), Fr( ~nonce_s )
     ]
    --[
    OutServerCommitResponseNonce( senc(<'1', ~nonce_s>, z) ),
    PhaseLearning( )
    ]->
     [
     StateServerCommitResponse( tid, S, C, pass, ~x_s, 'g'^~x_s, ~nonce_s, z,
                                z.1
     ),
     Out( wsenc('g'^~x_s, pass) ), Out( senc(<'1', ~nonce_s>, z) )
     ]
    variants (modulo AC)
    1. ~x_s  = ~x_s.26
       client_commit_request
             = client_commit_request.29
       pass  = pass.30
       z     = wsdec(client_commit_request.29, pass.30)^~x_s.26
       z.1   = wsdec(client_commit_request.29, pass.30)
    
    2. ~x_s  = ~x_s.29
       client_commit_request
             = wsenc(z.36^inv(~x_s.29), pass.33)
       pass  = pass.33
       z     = z.36
       z.1   = z.36^inv(~x_s.29)
    
    3. ~x_s  = ~x_s.30
       client_commit_request
             = wsenc(z.38, pass.34)
       pass  = pass.34
       z     = z.38^~x_s.30
       z.1   = z.38
    
    4. ~x_s  = ~x_s.180
       client_commit_request
             = wsenc(x.356^x.357, pass.184)
       pass  = pass.184
       z     = x.356^(~x_s.180*x.357)
       z.1   = x.356^x.357
    
    5. ~x_s  = ~x_s.183
       client_commit_request
             = wsenc(x.362^inv((~x_s.183*x.363)), pass.187)
       pass  = pass.187
       z     = x.362^inv(x.363)
       z.1   = x.362^inv((~x_s.183*x.363))
    
    6. ~x_s  = ~x_s.183
       client_commit_request
             = wsenc(x.362^(x.363*inv(~x_s.183)), pass.187)
       pass  = pass.187
       z     = x.362^x.363
       z.1   = x.362^(x.363*inv(~x_s.183))
    
    7. ~x_s  = ~x_s.184
       client_commit_request
             = wsenc(x.363^(x.364*inv((~x_s.184*x.365))), pass.188)
       pass  = pass.188
       z     = x.363^(x.364*inv(x.365))
       z.1   = x.363^(x.364*inv((~x_s.184*x.365)))
  */

rule (modulo E) ClientConfirmRequest:
   [
   StateClientCommitRequest( tid, C, S, pass, x_c, y_c ), Fr( ~nonce_p ),
   In( scr_0 ), In( senc(<'1', nonce_s>, wsdec(scr_0, pass)^x_c) )
   ]
  --[
  InClientConfirmRequestNonce( nonce_s,
                               senc(<'1', nonce_s>, wsdec(scr_0, pass)^x_c)
  ),
  OutClientConfirmRequestNonce( senc(<'2', nonce_s, ~nonce_p>,
                                     wsdec(scr_0, pass)^x_c)
  ),
  Running( S, C, <'responder', ~nonce_p, nonce_s> ),
  ClientConfirmRequest( tid ),
  ConfirmRequest( tid, C, S, pass, x_c, y_c, ~nonce_p, nonce_s,
                  wsdec(scr_0, pass)^x_c
  ),
  PhaseLearning( )
  ]->
   [
   StateClientConfirmRequest_1( tid, C, S, pass, x_c, y_c, scr_0,
                                wsdec(scr_0, pass), wsdec(scr_0, pass)^x_c, ~nonce_p, nonce_s,
                                senc(<'1', nonce_s>, wsdec(scr_0, pass)^x_c)
   ),
   Out( senc(<'2', nonce_s, ~nonce_p>, wsdec(scr_0, pass)^x_c) )
   ]

  /*
  rule (modulo AC) ClientConfirmRequest:
     [
     StateClientCommitRequest( tid, C, S, pass, x_c, y_c ), Fr( ~nonce_p ),
     In( scr_0 ), In( senc(<'1', nonce_s>, z) )
     ]
    --[
    InClientConfirmRequestNonce( nonce_s, senc(<'1', nonce_s>, z) ),
    OutClientConfirmRequestNonce( senc(<'2', nonce_s, ~nonce_p>, z) ),
    Running( S, C, <'responder', ~nonce_p, nonce_s> ),
    ClientConfirmRequest( tid ),
    ConfirmRequest( tid, C, S, pass, x_c, y_c, ~nonce_p, nonce_s, z ),
    PhaseLearning( )
    ]->
     [
     StateClientConfirmRequest_1( tid, C, S, pass, x_c, y_c, scr_0, z.1, z,
                                  ~nonce_p, nonce_s, senc(<'1', nonce_s>, z)
     ),
     Out( senc(<'2', nonce_s, ~nonce_p>, z) )
     ]
    variants (modulo AC)
     1. pass  = pass.15
        scr_0 = scr_0.16
        x_c   = one
        z     = wsdec(scr_0.16, pass.15)
        z.1   = wsdec(scr_0.16, pass.15)
    
     2. pass  = pass.17
        scr_0 = scr_0.18
        x_c   = x_c.20
        z     = wsdec(scr_0.18, pass.17)^x_c.20
        z.1   = wsdec(scr_0.18, pass.17)
    
     3. pass  = pass.20
        scr_0 = wsenc(z.26, pass.20)
        x_c   = one
        z     = z.26
        z.1   = z.26
    
     4. pass  = pass.20
        scr_0 = wsenc(z.26^inv(x_c.23), pass.20)
        x_c   = x_c.23
        z     = z.26
        z.1   = z.26^inv(x_c.23)
    
     5. pass  = pass.21
        scr_0 = wsenc(z.28, pass.21)
        x_c   = x_c.24
        z     = z.28^x_c.24
        z.1   = z.28
    
     6. pass  = pass.36
        scr_0 = wsenc(z.42^x.66, pass.36)
        x_c   = inv(x.66)
        z     = z.42
        z.1   = z.42^x.66
    
     7. pass  = pass.36
        scr_0 = wsenc(x.65^x.66, pass.36)
        x_c   = x_c.39
        z     = x.65^(x_c.39*x.66)
        z.1   = x.65^x.66
    
     8. pass  = pass.36
        scr_0 = wsenc(x.65^(x.66*inv(x_c.39)), pass.36)
        x_c   = x_c.39
        z     = x.65^x.66
        z.1   = x.65^(x.66*inv(x_c.39))
    
     9. pass  = pass.37
        scr_0 = wsenc(z.43^(x.67*inv(x.68)), pass.37)
        x_c   = (x.68*inv(x.67))
        z     = z.43
        z.1   = z.43^(x.67*inv(x.68))
    
    10. pass  = pass.37
        scr_0 = wsenc(x.66^inv((x_c.40*x.68)), pass.37)
        x_c   = x_c.40
        z     = x.66^inv(x.68)
        z.1   = x.66^inv((x_c.40*x.68))
    
    11. pass  = pass.37
        scr_0 = wsenc(x.66^(x.67*x.68), pass.37)
        x_c   = inv(x.67)
        z     = x.66^x.68
        z.1   = x.66^(x.67*x.68)
    
    12. pass  = pass.38
        scr_0 = wsenc(x.67^x.68, pass.38)
        x_c   = inv((x.68*x.70))
        z     = x.67^inv(x.70)
        z.1   = x.67^x.68
    
    13. pass  = pass.38
        scr_0 = wsenc(x.67^x.68, pass.38)
        x_c   = (x.70*inv(x.68))
        z     = x.67^x.70
        z.1   = x.67^x.68
    
    14. pass  = pass.38
        scr_0 = wsenc(x.67^inv(x.68), pass.38)
        x_c   = inv(x.70)
        z     = x.67^inv((x.68*x.70))
        z.1   = x.67^inv(x.68)
    
    15. pass  = pass.38
        scr_0 = wsenc(x.67^inv(x.68), pass.38)
        x_c   = (x.68*x.70)
        z     = x.67^x.70
        z.1   = x.67^inv(x.68)
    
    16. pass  = pass.38
        scr_0 = wsenc(x.67^(x.68*x.69*inv(x.70)), pass.38)
        x_c   = (x.70*inv(x.68))
        z     = x.67^x.69
        z.1   = x.67^(x.68*x.69*inv(x.70))
    
    17. pass  = pass.38
        scr_0 = wsenc(x.67^(x.68*inv((x_c.41*x.70))), pass.38)
        x_c   = x_c.41
        z     = x.67^(x.68*inv(x.70))
        z.1   = x.67^(x.68*inv((x_c.41*x.70)))
    
    18. pass  = pass.38
        scr_0 = wsenc(x.67^(x.68*inv((x.69*x.70))), pass.38)
        x_c   = (x.69*inv(x.68))
        z     = x.67^inv(x.70)
        z.1   = x.67^(x.68*inv((x.69*x.70)))
    
    19. pass  = pass.39
        scr_0 = wsenc(x.68^x.69, pass.39)
        x_c   = (x.71*inv((x.69*x.72)))
        z     = x.68^(x.71*inv(x.72))
        z.1   = x.68^x.69
    
    20. pass  = pass.39
        scr_0 = wsenc(x.68^inv(x.69), pass.39)
        x_c   = (x.71*inv(x.72))
        z     = x.68^(x.71*inv((x.69*x.72)))
        z.1   = x.68^inv(x.69)
    
    21. pass  = pass.39
        scr_0 = wsenc(x.68^inv((x.69*x.70)), pass.39)
        x_c   = (x.69*x.72)
        z     = x.68^(x.72*inv(x.70))
        z.1   = x.68^inv((x.69*x.70))
    
    22. pass  = pass.39
        scr_0 = wsenc(x.68^inv((x.69*x.70)), pass.39)
        x_c   = (x.69*inv(x.72))
        z     = x.68^inv((x.70*x.72))
        z.1   = x.68^inv((x.69*x.70))
    
    23. pass  = pass.39
        scr_0 = wsenc(x.68^(x.69*x.70), pass.39)
        x_c   = inv((x.69*x.72))
        z     = x.68^(x.70*inv(x.72))
        z.1   = x.68^(x.69*x.70)
    
    24. pass  = pass.39
        scr_0 = wsenc(x.68^(x.69*x.70), pass.39)
        x_c   = (x.72*inv(x.69))
        z     = x.68^(x.70*x.72)
        z.1   = x.68^(x.69*x.70)
    
    25. pass  = pass.39
        scr_0 = wsenc(x.68^(x.69*x.70*inv((x.71*x.72))), pass.39)
        x_c   = (x.71*inv(x.69))
        z     = x.68^(x.70*inv(x.72))
        z.1   = x.68^(x.69*x.70*inv((x.71*x.72)))
    
    26. pass  = pass.39
        scr_0 = wsenc(x.68^(x.69*inv(x.70)), pass.39)
        x_c   = inv(x.72)
        z     = x.68^(x.69*inv((x.70*x.72)))
        z.1   = x.68^(x.69*inv(x.70))
    
    27. pass  = pass.39
        scr_0 = wsenc(x.68^(x.69*inv(x.70)), pass.39)
        x_c   = inv((x.69*x.72))
        z     = x.68^inv((x.70*x.72))
        z.1   = x.68^(x.69*inv(x.70))
    
    28. pass  = pass.39
        scr_0 = wsenc(x.68^(x.69*inv(x.70)), pass.39)
        x_c   = (x.70*x.72)
        z     = x.68^(x.69*x.72)
        z.1   = x.68^(x.69*inv(x.70))
    
    29. pass  = pass.39
        scr_0 = wsenc(x.68^(x.69*inv(x.70)), pass.39)
        x_c   = (x.70*x.72*inv(x.69))
        z     = x.68^x.72
        z.1   = x.68^(x.69*inv(x.70))
    
    30. pass  = pass.39
        scr_0 = wsenc(x.68^(x.69*inv(x.70)), pass.39)
        x_c   = (x.70*inv((x.69*x.72)))
        z     = x.68^inv(x.72)
        z.1   = x.68^(x.69*inv(x.70))
    
    31. pass  = pass.40
        scr_0 = wsenc(x.69^inv((x.70*x.71)), pass.40)
        x_c   = (x.70*x.73*inv(x.74))
        z     = x.69^(x.73*inv((x.71*x.74)))
        z.1   = x.69^inv((x.70*x.71))
    
    32. pass  = pass.40
        scr_0 = wsenc(x.69^(x.70*x.71), pass.40)
        x_c   = (x.73*inv((x.70*x.74)))
        z     = x.69^(x.71*x.73*inv(x.74))
        z.1   = x.69^(x.70*x.71)
    
    33. pass  = pass.40
        scr_0 = wsenc(x.69^(x.70*x.71*inv(x.72)), pass.40)
        x_c   = inv((x.70*x.74))
        z     = x.69^(x.71*inv((x.72*x.74)))
        z.1   = x.69^(x.70*x.71*inv(x.72))
    
    34. pass  = pass.40
        scr_0 = wsenc(x.69^(x.70*x.71*inv(x.72)), pass.40)
        x_c   = (x.72*x.74*inv(x.70))
        z     = x.69^(x.71*x.74)
        z.1   = x.69^(x.70*x.71*inv(x.72))
    
    35. pass  = pass.40
        scr_0 = wsenc(x.69^(x.70*x.71*inv(x.72)), pass.40)
        x_c   = (x.72*inv((x.70*x.74)))
        z     = x.69^(x.71*inv(x.74))
        z.1   = x.69^(x.70*x.71*inv(x.72))
    
    36. pass  = pass.40
        scr_0 = wsenc(x.69^(x.70*inv(x.71)), pass.40)
        x_c   = (x.71*x.73*inv((x.70*x.74)))
        z     = x.69^(x.73*inv(x.74))
        z.1   = x.69^(x.70*inv(x.71))
    
    37. pass  = pass.40
        scr_0 = wsenc(x.69^(x.70*inv(x.71)), pass.40)
        x_c   = (x.73*inv(x.74))
        z     = x.69^(x.70*x.73*inv((x.71*x.74)))
        z.1   = x.69^(x.70*inv(x.71))
    
    38. pass  = pass.40
        scr_0 = wsenc(x.69^(x.70*inv(x.71)), pass.40)
        x_c   = (x.73*inv((x.70*x.74)))
        z     = x.69^(x.73*inv((x.71*x.74)))
        z.1   = x.69^(x.70*inv(x.71))
    
    39. pass  = pass.40
        scr_0 = wsenc(x.69^(x.70*inv((x.71*x.72))), pass.40)
        x_c   = (x.71*x.74)
        z     = x.69^(x.70*x.74*inv(x.72))
        z.1   = x.69^(x.70*inv((x.71*x.72)))
    
    40. pass  = pass.40
        scr_0 = wsenc(x.69^(x.70*inv((x.71*x.72))), pass.40)
        x_c   = (x.71*x.74*inv(x.70))
        z     = x.69^(x.74*inv(x.72))
        z.1   = x.69^(x.70*inv((x.71*x.72)))
    
    41. pass  = pass.40
        scr_0 = wsenc(x.69^(x.70*inv((x.71*x.72))), pass.40)
        x_c   = (x.71*inv(x.74))
        z     = x.69^(x.70*inv((x.72*x.74)))
        z.1   = x.69^(x.70*inv((x.71*x.72)))
    
    42. pass  = pass.40
        scr_0 = wsenc(x.69^(x.70*inv((x.71*x.72))), pass.40)
        x_c   = (x.71*inv((x.70*x.74)))
        z     = x.69^inv((x.72*x.74))
        z.1   = x.69^(x.70*inv((x.71*x.72)))
    
    43. pass  = pass.41
        scr_0 = wsenc(x.70^(x.71*x.72*inv(x.73)), pass.41)
        x_c   = (x.73*x.75*inv((x.71*x.76)))
        z     = x.70^(x.72*x.75*inv(x.76))
        z.1   = x.70^(x.71*x.72*inv(x.73))
    
    44. pass  = pass.41
        scr_0 = wsenc(x.70^(x.71*x.72*inv(x.73)), pass.41)
        x_c   = (x.75*inv((x.71*x.76)))
        z     = x.70^(x.72*x.75*inv((x.73*x.76)))
        z.1   = x.70^(x.71*x.72*inv(x.73))
    
    45. pass  = pass.41
        scr_0 = wsenc(x.70^(x.71*x.72*inv((x.73*x.74))), pass.41)
        x_c   = (x.73*x.76*inv(x.71))
        z     = x.70^(x.72*x.76*inv(x.74))
        z.1   = x.70^(x.71*x.72*inv((x.73*x.74)))
    
    46. pass  = pass.41
        scr_0 = wsenc(x.70^(x.71*x.72*inv((x.73*x.74))), pass.41)
        x_c   = (x.73*inv((x.71*x.76)))
        z     = x.70^(x.72*inv((x.74*x.76)))
        z.1   = x.70^(x.71*x.72*inv((x.73*x.74)))
    
    47. pass  = pass.41
        scr_0 = wsenc(x.70^(x.71*inv((x.72*x.73))), pass.41)
        x_c   = (x.72*x.75*inv(x.76))
        z     = x.70^(x.71*x.75*inv((x.73*x.76)))
        z.1   = x.70^(x.71*inv((x.72*x.73)))
    
    48. pass  = pass.41
        scr_0 = wsenc(x.70^(x.71*inv((x.72*x.73))), pass.41)
        x_c   = (x.72*x.75*inv((x.71*x.76)))
        z     = x.70^(x.75*inv((x.73*x.76)))
        z.1   = x.70^(x.71*inv((x.72*x.73)))
    
    49. pass  = pass.42
        scr_0 = wsenc(x.71^(x.72*x.73*inv((x.74*x.75))), pass.42)
        x_c   = (x.74*x.77*inv((x.72*x.78)))
        z     = x.71^(x.73*x.77*inv((x.75*x.78)))
        z.1   = x.71^(x.72*x.73*inv((x.74*x.75)))
  */

rule (modulo E) ServerConfirmResponse:
   [
   StateServerCommitResponse( tid, S, C, pass, x_s, y_s, nonce_s, key, y_c
   ),
   In( senc(<'2', nonce_s, nonce_p>, key) )
   ]
  --[
  InServerConfirmResponseNonce( nonce_p, senc(<'2', nonce_s, nonce_p>, key)
  ),
  Running( C, S, <'initiator', nonce_p, nonce_s> ),
  Commit( S, C, <'responder', nonce_p, nonce_s> ),
  CommitServer( S, C, 'responder', nonce_p, nonce_s ), Honest( S ),
  Honest( C ), Secret( key ), ServerConfirmResponse( tid ),
  PhaseLearning( )
  ]->
   [ Out( senc(<'3', nonce_p>, key) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) ClientSessionEstablishment:
   [
   StateClientConfirmRequest_1( tid, C, S, pass, x_c, y_c, scr_0, y_s, key,
                                nonce_p, nonce_s, scr_1
   ),
   In( senc(<'3', nonce_p>, key) )
   ]
  --[
  Commit( C, S, <'initiator', nonce_p, nonce_s> ),
  CommitClient( C, S, 'initiator', nonce_p, nonce_s ), Honest( C ),
  Honest( S ), Secret( key ), ClientSessionEstablishment( tid ),
  PhaseLearning( )
  ]->
   [ ]

  /* has exactly the trivial AC variant */

lemma SrcNonces [sources]:
  all-traces
  "(∀ nonce msg #i.
     (InClientConfirmRequestNonce( nonce, msg ) @ #i) ⇒
     ((∃ #j. (!KU( nonce ) @ #j) ∧ (#j < #i)) ∨
      (∃ #j. OutServerCommitResponseNonce( msg ) @ #j))) ∧
   (∀ nonce msg #i.
     (InServerConfirmResponseNonce( nonce, msg ) @ #i) ⇒
     ((∃ #j. (!KU( nonce ) @ #j) ∧ (#j < #i)) ∨
      (∃ #j. OutClientConfirmRequestNonce( msg ) @ #j)))"
/*
guarded formula characterizing all counter-examples:
"((∃ nonce msg #i.
    (InClientConfirmRequestNonce( nonce, msg ) @ #i)
   ∧
    (∀ #j. (!KU( nonce ) @ #j) ⇒ ¬(#j < #i)) ∧
    (∀ #j. (OutServerCommitResponseNonce( msg ) @ #j) ⇒ ⊥)) ∨
  (∃ nonce msg #i.
    (InServerConfirmResponseNonce( nonce, msg ) @ #i)
   ∧
    (∀ #j. (!KU( nonce ) @ #j) ⇒ ¬(#j < #i)) ∧
    (∀ #j. (OutClientConfirmRequestNonce( msg ) @ #j) ⇒ ⊥)))"
*/
induction
  case empty_trace
  by contradiction /* from formulas */
next
  case non_empty_trace
  simplify
  solve( (∃ nonce msg #i.
           (InClientConfirmRequestNonce( nonce, msg ) @ #i)
          ∧
           (∀ #j. (!KU( nonce ) @ #j) ⇒ ¬(#j < #i)) ∧
           (∀ #j. (OutServerCommitResponseNonce( msg ) @ #j) ⇒ ⊥))  ∥
         (∃ nonce msg #i.
           (InServerConfirmResponseNonce( nonce, msg ) @ #i)
          ∧
           (∀ #j. (!KU( nonce ) @ #j) ⇒ ¬(#j < #i)) ∧
           (∀ #j. (OutClientConfirmRequestNonce( msg ) @ #j) ⇒ ⊥)) )
    case case_1
    solve( (last(#i))  ∥
           (∃ #j. (!KU( nonce ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #i))  ∥
           (∃ #j.
             (OutServerCommitResponseNonce( senc(<'1', nonce>, z) ) @ #j)
            ∧
             ¬(last(#j))) )
      case case_1
      solve( StateClientCommitRequest( tid, C, S, pass, x_c, y_c ) ▶₀ #i )
        case ClientCommitRequest
        solve( !KU( senc(<'1', nonce>, z) ) @ #vk.1 )
          case ClientConfirmRequest_case_1
          solve( (∃ #j. (!KU( nonce_s ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
                 (∃ #j.
                   (OutServerCommitResponseNonce( senc(<'1', nonce_s>,
                                                       wsdec(scr_0.1, ~pass.1)^~x_c.1)
                    ) @ #j)
                  ∧
                   ¬(last(#j))) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* impossible chain */
          qed
        next
          case ClientConfirmRequest_case_2
          solve( (∃ #j. (!KU( nonce_s ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
                 (∃ #j.
                   (OutServerCommitResponseNonce( senc(<'1', nonce_s>, z.2^~x_c.1) ) @ #j)
                  ∧
                   ¬(last(#j))) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* impossible chain */
          qed
        next
          case ClientConfirmRequest_case_3
          solve( (∃ #j. (!KU( nonce_s ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
                 (∃ #j.
                   (OutServerCommitResponseNonce( senc(<'1', nonce_s>, z.2) ) @ #j)
                  ∧
                   ¬(last(#j))) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* impossible chain */
          qed
        next
          case ClientConfirmRequest_case_4
          solve( (∃ #j. (!KU( nonce_s ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
                 (∃ #j.
                   (OutServerCommitResponseNonce( senc(<'1', nonce_s>, x^(~x_c.1*x.1))
                    ) @ #j)
                  ∧
                   ¬(last(#j))) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* impossible chain */
          qed
        next
          case ClientConfirmRequest_case_5
          solve( (∃ #j. (!KU( nonce_s ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
                 (∃ #j.
                   (OutServerCommitResponseNonce( senc(<'1', nonce_s>, x^x.1) ) @ #j)
                  ∧
                   ¬(last(#j))) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* impossible chain */
          qed
        next
          case ClientConfirmRequest_case_6
          solve( (∃ #j. (!KU( nonce_s ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
                 (∃ #j.
                   (OutServerCommitResponseNonce( senc(<'1', nonce_s>, x^inv(x.1)) ) @ #j)
                  ∧
                   ¬(last(#j))) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* impossible chain */
          qed
        next
          case ClientConfirmRequest_case_7
          solve( (∃ #j. (!KU( nonce_s ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
                 (∃ #j.
                   (OutServerCommitResponseNonce( senc(<'1', nonce_s>, x^(x.1*inv(x.2)))
                    ) @ #j)
                  ∧
                   ¬(last(#j))) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* impossible chain */
          qed
        next
          case ServerCommitResponse
          by contradiction /* from formulas */
        next
          case ServerConfirmResponse_case_1
          solve( (∃ #j. (!KU( nonce_p.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
                 (∃ #j.
                   (OutClientConfirmRequestNonce( senc(<'2', ~nonce_s, nonce_p.1>, key)
                    ) @ #j)
                  ∧
                   ¬(last(#j))) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* impossible chain */
          qed
        next
          case ServerConfirmResponse_case_2
          solve( (∃ #j. (!KU( nonce_p.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
                 (∃ #j.
                   (OutClientConfirmRequestNonce( senc(<'2', ~nonce_s, nonce_p.1>, y_c^~x_s)
                    ) @ #j)
                  ∧
                   ¬(last(#j))) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* impossible chain */
          qed
        next
          case ServerConfirmResponse_case_3
          solve( (∃ #j. (!KU( nonce_p.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
                 (∃ #j.
                   (OutClientConfirmRequestNonce( senc(<'2', ~nonce_s, nonce_p.1>,
                                                       x^(~x_s*x.1))
                    ) @ #j)
                  ∧
                   ¬(last(#j))) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* impossible chain */
          qed
        next
          case ServerConfirmResponse_case_4
          solve( (∃ #j. (!KU( nonce_p.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
                 (∃ #j.
                   (OutClientConfirmRequestNonce( senc(<'2', ~nonce_s, nonce_p.1>, x^x.1)
                    ) @ #j)
                  ∧
                   ¬(last(#j))) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* impossible chain */
          qed
        next
          case ServerConfirmResponse_case_5
          solve( (∃ #j. (!KU( nonce_p.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
                 (∃ #j.
                   (OutClientConfirmRequestNonce( senc(<'2', ~nonce_s, nonce_p.1>,
                                                       x^inv(x.1))
                    ) @ #j)
                  ∧
                   ¬(last(#j))) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* impossible chain */
          qed
        next
          case ServerConfirmResponse_case_6
          solve( (∃ #j. (!KU( nonce_p.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
                 (∃ #j.
                   (OutClientConfirmRequestNonce( senc(<'2', ~nonce_s, nonce_p.1>,
                                                       x^(x.1*inv(x.2)))
                    ) @ #j)
                  ∧
                   ¬(last(#j))) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* impossible chain */
          qed
        next
          case ServerConfirmResponse_case_7
          solve( (∃ #j. (!KU( nonce_p.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
                 (∃ #j.
                   (OutClientConfirmRequestNonce( senc(<'2', ~nonce_s, nonce_p.1>,
                                                       wsdec(client_commit_request, ~pass.1)^~x_s)
                    ) @ #j)
                  ∧
                   ¬(last(#j))) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* impossible chain */
          qed
        next
          case c_senc
          by contradiction /* from formulas */
        qed
      qed
    next
      case case_2
      by contradiction /* from formulas */
    next
      case case_3
      by contradiction /* from formulas */
    qed
  next
    case case_2
    solve( (last(#i))  ∥
           (∃ #j. (!KU( nonce ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #i))  ∥
           (∃ #j.
             (OutClientConfirmRequestNonce( senc(<'2', nonce_s, nonce>, key) ) @ #j)
            ∧
             ¬(last(#j))) )
      case case_1
      solve( StateServerCommitResponse( tid, S, C, pass, x_s, y_s, nonce_s,
                                        key, y_c
             ) ▶₀ #i )
        case ServerCommitResponse
        solve( !KU( senc(<'2', ~nonce_s, nonce>, key) ) @ #vk )
          case ClientConfirmRequest_case_1
          by contradiction /* from formulas */
        next
          case ClientConfirmRequest_case_2
          solve( (∃ #j. (!KU( nonce_s.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
                 (∃ #j.
                   (OutServerCommitResponseNonce( senc(<'1', nonce_s.1>,
                                                       wsdec(scr_0, ~pass.1)^~x_c)
                    ) @ #j)
                  ∧
                   ¬(last(#j))) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* impossible chain */
          qed
        next
          case ClientConfirmRequest_case_3
          solve( (∃ #j. (!KU( nonce_s.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
                 (∃ #j.
                   (OutServerCommitResponseNonce( senc(<'1', nonce_s.1>, z^~x_c) ) @ #j)
                  ∧
                   ¬(last(#j))) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* impossible chain */
          qed
        next
          case ClientConfirmRequest_case_4
          solve( (∃ #j. (!KU( nonce_s.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
                 (∃ #j.
                   (OutServerCommitResponseNonce( senc(<'1', nonce_s.1>, z) ) @ #j)
                  ∧
                   ¬(last(#j))) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* impossible chain */
          qed
        next
          case ClientConfirmRequest_case_5
          solve( (∃ #j. (!KU( nonce_s.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
                 (∃ #j.
                   (OutServerCommitResponseNonce( senc(<'1', nonce_s.1>, x^(~x_c*x.1))
                    ) @ #j)
                  ∧
                   ¬(last(#j))) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* impossible chain */
          qed
        next
          case ClientConfirmRequest_case_6
          solve( (∃ #j. (!KU( nonce_s.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
                 (∃ #j.
                   (OutServerCommitResponseNonce( senc(<'1', nonce_s.1>, x^x.1) ) @ #j)
                  ∧
                   ¬(last(#j))) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* impossible chain */
          qed
        next
          case ClientConfirmRequest_case_7
          solve( (∃ #j. (!KU( nonce_s.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
                 (∃ #j.
                   (OutServerCommitResponseNonce( senc(<'1', nonce_s.1>, x^inv(x.1)) ) @ #j)
                  ∧
                   ¬(last(#j))) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* impossible chain */
          qed
        next
          case ClientConfirmRequest_case_8
          solve( (∃ #j. (!KU( nonce_s.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
                 (∃ #j.
                   (OutServerCommitResponseNonce( senc(<'1', nonce_s.1>, x^(x.1*inv(x.2)))
                    ) @ #j)
                  ∧
                   ¬(last(#j))) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* impossible chain */
          qed
        next
          case ServerConfirmResponse_case_1
          solve( (∃ #j. (!KU( nonce_p ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
                 (∃ #j.
                   (OutClientConfirmRequestNonce( senc(<'2', ~nonce_s.1, nonce_p>, key.1)
                    ) @ #j)
                  ∧
                   ¬(last(#j))) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* impossible chain */
          qed
        next
          case ServerConfirmResponse_case_2
          solve( (∃ #j. (!KU( nonce_p ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
                 (∃ #j.
                   (OutClientConfirmRequestNonce( senc(<'2', ~nonce_s.1, nonce_p>,
                                                       y_c.1^~x_s.1)
                    ) @ #j)
                  ∧
                   ¬(last(#j))) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* impossible chain */
          qed
        next
          case ServerConfirmResponse_case_3
          solve( (∃ #j. (!KU( nonce_p ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
                 (∃ #j.
                   (OutClientConfirmRequestNonce( senc(<'2', ~nonce_s.1, nonce_p>,
                                                       x^(~x_s.1*x.1))
                    ) @ #j)
                  ∧
                   ¬(last(#j))) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* impossible chain */
          qed
        next
          case ServerConfirmResponse_case_4
          solve( (∃ #j. (!KU( nonce_p ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
                 (∃ #j.
                   (OutClientConfirmRequestNonce( senc(<'2', ~nonce_s.1, nonce_p>, x^x.1)
                    ) @ #j)
                  ∧
                   ¬(last(#j))) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* impossible chain */
          qed
        next
          case ServerConfirmResponse_case_5
          solve( (∃ #j. (!KU( nonce_p ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
                 (∃ #j.
                   (OutClientConfirmRequestNonce( senc(<'2', ~nonce_s.1, nonce_p>,
                                                       x^inv(x.1))
                    ) @ #j)
                  ∧
                   ¬(last(#j))) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* impossible chain */
          qed
        next
          case ServerConfirmResponse_case_6
          solve( (∃ #j. (!KU( nonce_p ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
                 (∃ #j.
                   (OutClientConfirmRequestNonce( senc(<'2', ~nonce_s.1, nonce_p>,
                                                       x^(x.1*inv(x.2)))
                    ) @ #j)
                  ∧
                   ¬(last(#j))) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* impossible chain */
          qed
        next
          case ServerConfirmResponse_case_7
          solve( (∃ #j. (!KU( nonce_p ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
                 (∃ #j.
                   (OutClientConfirmRequestNonce( senc(<'2', ~nonce_s.1, nonce_p>,
                                                       wsdec(client_commit_request.1, ~pass.1)^~x_s.1)
                    ) @ #j)
                  ∧
                   ¬(last(#j))) )
            case case_1
            by contradiction /* cyclic */
          next
            case case_2
            by contradiction /* impossible chain */
          qed
        next
          case c_senc
          by contradiction /* from formulas */
        qed
      qed
    next
      case case_2
      by contradiction /* from formulas */
    next
      case case_3
      by contradiction /* from formulas */
    qed
  qed
qed

lemma Aliveness:
  all-traces
  "∀ A B t #i.
    (Commit( A, B, t ) @ #i) ⇒
    (((∃ tid #j. Create( B, tid ) @ #j) ∨ (∃ #j. RevAgentPass( A ) @ #j)) ∨
     (∃ #j. RevAgentPass( B ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ A B t #i.
  (Commit( A, B, t ) @ #i)
 ∧
  (∀ tid #j. (Create( B, tid ) @ #j) ⇒ ⊥) ∧
  (∀ #j. (RevAgentPass( A ) @ #j) ⇒ ⊥) ∧
  (∀ #j. (RevAgentPass( B ) @ #j) ⇒ ⊥)"
*/
simplify
solve( Commit( A, B, t ) @ #i )
  case ClientSessionEstablishment
  solve( StateClientConfirmRequest_1( tid, A, B, pass, x_c, y_c, scr_0,
                                      y_s, key, nonce_p, nonce_s, scr_1
         ) ▶₀ #i )
    case ClientConfirmRequest
    solve( !KU( senc(<'3', ~nonce_p>, key) ) @ #vk )
      case ServerConfirmResponse
      solve( !KU( senc(<'2', ~nonce_s.1, ~nonce_p>, key) ) @ #vk.6 )
        case ClientConfirmRequest
        solve( splitEqs(1) )
          case split_case_1
          solve( !KU( wsenc(key^inv(~x_c), ~pass) ) @ #vk.2 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_2
          solve( splitEqs(2) )
            case split
            solve( !KU( wsenc(y_s, ~pass) ) @ #vk.2 )
              case ClientCommitRequest
              by contradiction /* non-normal terms */
            next
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.12 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case split_case_3
          solve( splitEqs(2) )
            case split
            solve( !KU( wsenc(wsdec(scr_0, ~pass)^(~x_c*inv(~x_s)), ~pass.1)
                   ) @ #vk.7 )
              case c_wsenc
              solve( !KU( ~pass.1 ) @ #vk.12 )
                case RevealPassword
                solve( !KU( wsdec(scr_0, ~pass)^(~x_c*inv(~x_s)) ) @ #vk.12 )
                  case c_exp
                  by solve( !KU( ~x_c ) @ #vk.15 )
                qed
              qed
            qed
          qed
        next
          case split_case_4
          solve( !KU( wsenc(x^(x.1*inv(~x_c)), ~pass) ) @ #vk.2 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_5
          solve( !KU( wsenc(x^x.1, ~pass) ) @ #vk.2 )
            case ClientCommitRequest
            solve( splitEqs(2) )
              case split
              solve( !KU( wsenc('g'^(~x_c*~x_c.1*inv(~x_s)), ~pass.1) ) @ #vk.7 )
                case c_wsenc
                solve( !KU( ~pass.1 ) @ #vk.12 )
                  case RevealPassword
                  solve( !KU( 'g'^(~x_c*~x_c.1*inv(~x_s)) ) @ #vk.12 )
                    case ClientCommitRequest_case_1
                    solve( !KU( ~pass ) @ #vk.13 )
                      case RevealPassword
                      by contradiction /* from formulas */
                    qed
                  next
                    case ClientCommitRequest_case_2
                    solve( !KU( ~pass ) @ #vk.13 )
                      case RevealPassword
                      by contradiction /* from formulas */
                    qed
                  next
                    case c_exp
                    by solve( !KU( ~x_c ) @ #vk.15 )
                  qed
                qed
              qed
            qed
          next
            case ServerCommitResponse
            by contradiction /* from formulas */
          next
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_6
          solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass) ) @ #vk.2 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_7
          solve( splitEqs(2) )
            case split_case_1
            solve( !KU( wsenc(x^(~x_s*inv((~x_c*x.1))), ~pass) ) @ #vk.2 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.12 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_2
            solve( !KU( wsenc(x^(x.1*inv((~x_c*x.2))), ~pass) ) @ #vk.2 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.12 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_3
            solve( !KU( wsenc(x^(~x_s*x.1*inv((~x_c*x.2))), ~pass) ) @ #vk.2 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.12 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case c_senc
        solve( !KU( ~nonce_s.1 ) @ #vk.15 )
          case ClientConfirmRequest_case_1
          solve( !KU( ~nonce_p ) @ #vk.17 )
            case ClientConfirmRequest
            solve( splitEqs(1) )
              case split_case_1
              solve( splitEqs(2) )
                case split
                solve( !KU( wsdec(scr_0, ~pass)^~x_c ) @ #vk.15 )
                  case c_exp
                  by solve( !KU( ~x_c ) @ #vk.18 )
                qed
              qed
            next
              case split_case_2
              solve( splitEqs(2) )
                case split
                solve( !KU( senc(<'1', nonce_s>, wsdec(scr_0, ~pass.1)^~x_c.1)
                       ) @ #vk.7 )
                  case ServerCommitResponse
                  solve( splitEqs(7) )
                    case split
                    solve( !KU( wsdec(scr_0, ~pass.1)^~x_c.1 ) @ #vk.17 )
                      case c_exp
                      by solve( !KU( ~x_c.1 ) @ #vk.25 )
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( wsdec(scr_0, ~pass.1)^~x_c.1 ) @ #vk.16 )
                    case c_exp
                    by solve( !KU( ~x_c.1 ) @ #vk.25 )
                  qed
                qed
              qed
            qed
          next
            case ServerConfirmResponse
            by contradiction /* cyclic */
          qed
        next
          case ClientConfirmRequest_case_2
          solve( !KU( ~nonce_p ) @ #vk.17 )
            case ClientConfirmRequest
            solve( splitEqs(1) )
              case split_case_1
              solve( splitEqs(2) )
                case split
                solve( !KU( wsenc(y_s, ~pass) ) @ #vk.6 )
                  case ClientCommitRequest
                  by contradiction /* non-normal terms */
                next
                  case c_wsenc
                  solve( !KU( ~pass ) @ #vk.18 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case split_case_2
              solve( splitEqs(2) )
                case split
                solve( !KU( senc(<'1', nonce_s>, z^~x_c.1) ) @ #vk.7 )
                  case ServerCommitResponse
                  solve( splitEqs(7) )
                    case split
                    solve( !KU( wsenc(z, ~pass.2) ) @ #vk.19 )
                      case ClientCommitRequest
                      by contradiction /* non-normal terms */
                    next
                      case c_wsenc
                      solve( !KU( ~pass.2 ) @ #vk.25 )
                        case RevealPassword
                        solve( !KU( z^~x_c.1 ) @ #vk.19 )
                          case ClientCommitRequest
                          solve( !KU( wsenc('g'^(~x_c.1*inv(~x_c)), ~pass) ) @ #vk.10 )
                            case c_wsenc
                            solve( !KU( ~pass ) @ #vk.27 )
                              case RevealPassword
                              by contradiction /* from formulas */
                            qed
                          qed
                        next
                          case c_exp
                          by solve( !KU( ~x_c.1 ) @ #vk.26 )
                        qed
                      qed
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( wsenc(z, ~pass.2) ) @ #vk.18 )
                    case ClientCommitRequest
                    by contradiction /* non-normal terms */
                  next
                    case c_wsenc
                    solve( !KU( ~pass.2 ) @ #vk.25 )
                      case RevealPassword
                      solve( !KU( z^~x_c.1 ) @ #vk.18 )
                        case ClientCommitRequest
                        solve( !KU( wsenc('g'^(~x_c.1*inv(~x_c)), ~pass) ) @ #vk.10 )
                          case c_wsenc
                          solve( !KU( ~pass ) @ #vk.27 )
                            case RevealPassword
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case c_exp
                        by solve( !KU( ~x_c.1 ) @ #vk.26 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case ServerConfirmResponse
            by contradiction /* cyclic */
          qed
        next
          case ClientConfirmRequest_case_3
          solve( !KU( ~nonce_p ) @ #vk.17 )
            case ClientConfirmRequest
            solve( !KU( wsenc(key^inv(~x_c.1), ~pass.2) ) @ #vk.18 )
              case c_wsenc
              solve( !KU( ~pass.2 ) @ #vk.22 )
                case RevealPassword
                solve( !KU( wsenc(key^inv(~x_s), ~pass.2) ) @ #vk.14 )
                  case c_wsenc
                  solve( !KU( ~pass.2 ) @ #vk.24 )
                    case RevealPassword
                    solve( !KU( wsenc(key^inv(~x_c), ~pass) ) @ #vk.10 )
                      case c_wsenc
                      solve( !KU( ~pass ) @ #vk.26 )
                        case RevealPassword
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case ServerConfirmResponse
            by contradiction /* cyclic */
          qed
        next
          case ClientConfirmRequest_case_4
          solve( !KU( ~nonce_p ) @ #vk.17 )
            case ClientConfirmRequest
            solve( !KU( x^(~x_c.1*x.2) ) @ #vk.16 )
              case ClientCommitRequest_case_1
              solve( !KU( ~pass.3 ) @ #vk.23 )
                case RevealPassword
                by solve( !KU( ~x_c.1 ) @ #vk.24 )
              qed
            next
              case ClientCommitRequest_case_2
              solve( !KU( ~pass.2 ) @ #vk.21 )
                case RevealPassword
                solve( !KU( senc(<'1', nonce_s>, 'g'^(~x_c.1*x.1)) ) @ #vk.9 )
                  case ServerCommitResponse
                  solve( !KU( wsenc('g'^x.1, ~pass.1) ) @ #vk.20 )
                    case ClientCommitRequest
                    by solve( !KU( ~x_c.2 ) @ #vk.23 )
                  next
                    case ServerCommitResponse
                    by solve( !KU( ~x_s ) @ #vk.24 )
                  next
                    case c_wsenc
                    solve( !KU( wsenc('g'^x.2, ~pass.2) ) @ #vk.15 )
                      case ClientCommitRequest
                      solve( !KU( ~x.1 ) @ #vk.24 )
                        case ClientConfirmRequest_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_8
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case RevealPassword
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerCommitResponse
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case fresh
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      qed
                    next
                      case ServerCommitResponse
                      solve( !KU( ~x.1 ) @ #vk.23 )
                        case ClientConfirmRequest_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_8
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case RevealPassword
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerCommitResponse
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case fresh
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      qed
                    next
                      case c_wsenc
                      solve( !KU( ~pass.2 ) @ #vk.28 )
                        case RevealPassword
                        solve( !KU( wsenc('g'^x, ~pass) ) @ #vk.12 )
                          case ClientCommitRequest
                          solve( !KU( ~x ) @ #vk.24 )
                            case ClientConfirmRequest_case_1
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_2
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_3
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_4
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_5
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_6
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_7
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_8
                            by solve( splitEqs(1) )
                          next
                            case RevealPassword
                            by solve( splitEqs(1) )
                          next
                            case ServerCommitResponse
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_1
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_2
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_3
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_4
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_5
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_6
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_7
                            by solve( splitEqs(1) )
                          next
                            case fresh
                            by solve( splitEqs(1) )
                          qed
                        next
                          case ServerCommitResponse
                          by contradiction /* from formulas */
                        next
                          case c_wsenc
                          solve( !KU( ~pass ) @ #vk.30 )
                            case RevealPassword
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( wsenc('g'^x.1, ~pass.1) ) @ #vk.19 )
                    case ClientCommitRequest
                    by solve( !KU( ~x_c.2 ) @ #vk.22 )
                  next
                    case ServerCommitResponse
                    by solve( !KU( ~x_s ) @ #vk.23 )
                  next
                    case c_wsenc
                    solve( !KU( wsenc('g'^x.2, ~pass.2) ) @ #vk.15 )
                      case ClientCommitRequest
                      solve( !KU( ~x.1 ) @ #vk.23 )
                        case ClientConfirmRequest_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_8
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case RevealPassword
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerCommitResponse
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case fresh
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      qed
                    next
                      case ServerCommitResponse
                      solve( !KU( ~x.1 ) @ #vk.22 )
                        case ClientConfirmRequest_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_8
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case RevealPassword
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerCommitResponse
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case fresh
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      qed
                    next
                      case c_wsenc
                      solve( !KU( ~pass.2 ) @ #vk.28 )
                        case RevealPassword
                        solve( !KU( wsenc('g'^x, ~pass) ) @ #vk.12 )
                          case ClientCommitRequest
                          solve( !KU( ~x ) @ #vk.23 )
                            case ClientConfirmRequest_case_1
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_2
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_3
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_4
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_5
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_6
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_7
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_8
                            by solve( splitEqs(1) )
                          next
                            case RevealPassword
                            by solve( splitEqs(1) )
                          next
                            case ServerCommitResponse
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_1
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_2
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_3
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_4
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_5
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_6
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_7
                            by solve( splitEqs(1) )
                          next
                            case fresh
                            by solve( splitEqs(1) )
                          qed
                        next
                          case ServerCommitResponse
                          by contradiction /* from formulas */
                        next
                          case c_wsenc
                          solve( !KU( ~pass ) @ #vk.30 )
                            case RevealPassword
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case ClientCommitRequest_case_3
              solve( !KU( ~pass.3 ) @ #vk.23 )
                case RevealPassword
                by solve( !KU( ~x_c.1 ) @ #vk.25 )
              qed
            next
              case ServerCommitResponse_case_1
              solve( !KU( ~pass.3 ) @ #vk.23 )
                case RevealPassword
                by solve( !KU( ~x_c.1 ) @ #vk.24 )
              qed
            next
              case ServerCommitResponse_case_2
              solve( !KU( ~pass.3 ) @ #vk.23 )
                case RevealPassword
                by solve( !KU( ~x_c.1 ) @ #vk.26 )
              qed
            next
              case c_exp
              by solve( !KU( ~x_c.1 ) @ #vk.23 )
            qed
          next
            case ServerConfirmResponse_case_1
            solve( splitEqs(5) )
              case split_case_1
              by contradiction /* cyclic */
            next
              case split_case_2
              by contradiction /* cyclic */
            qed
          next
            case ServerConfirmResponse_case_2
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_3
            solve( splitEqs(4) )
              case split_case_1
              by contradiction /* cyclic */
            next
              case split_case_2
              solve( splitEqs(1) )
                case split_case_1
                by contradiction /* cyclic */
              next
                case split_case_2
                by contradiction /* cyclic */
              qed
            next
              case split_case_3
              solve( splitEqs(6) )
                case split_case_1
                by contradiction /* cyclic */
              next
                case split_case_2
                by contradiction /* cyclic */
              next
                case split_case_3
                by contradiction /* cyclic */
              qed
            qed
          qed
        next
          case ClientConfirmRequest_case_5
          solve( !KU( ~nonce_p ) @ #vk.17 )
            case ClientConfirmRequest
            solve( !KU( wsenc(x^(x.1*inv(~x_c.1)), ~pass.2) ) @ #vk.18 )
              case c_wsenc
              solve( !KU( ~pass.2 ) @ #vk.22 )
                case RevealPassword
                solve( !KU( x^(x.1*inv(~x_c.1)) ) @ #vk.22 )
                  case ClientCommitRequest_case_1
                  solve( !KU( ~pass.3 ) @ #vk.25 )
                    case RevealPassword
                    by solve( !KU( ~x_c.1 ) @ #vk.27 )
                  qed
                next
                  case ClientCommitRequest_case_2
                  solve( !KU( ~pass.3 ) @ #vk.25 )
                    case RevealPassword
                    by solve( !KU( ~x_c.2 ) @ #vk.29 )
                  qed
                next
                  case ServerCommitResponse_case_1
                  solve( !KU( ~pass.3 ) @ #vk.25 )
                    case RevealPassword
                    by solve( !KU( ~x_c.1 ) @ #vk.28 )
                  qed
                next
                  case ServerCommitResponse_case_2
                  solve( !KU( ~pass.3 ) @ #vk.25 )
                    case RevealPassword
                    by solve( !KU( ~x_c.1 ) @ #vk.30 )
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_c.1 ) @ #vk.27 )
                qed
              qed
            qed
          next
            case ServerConfirmResponse_case_1
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_2
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_3
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_4
            by contradiction /* cyclic */
          qed
        next
          case ClientConfirmRequest_case_6
          solve( !KU( ~nonce_p ) @ #vk.17 )
            case ClientConfirmRequest
            solve( !KU( wsenc(x^inv((~x_c.1*x.1)), ~pass.2) ) @ #vk.18 )
              case c_wsenc
              solve( !KU( ~pass.2 ) @ #vk.22 )
                case RevealPassword
                solve( !KU( wsenc(x^inv((~x_s*x.1)), ~pass.2) ) @ #vk.14 )
                  case c_wsenc
                  solve( !KU( ~pass.2 ) @ #vk.24 )
                    case RevealPassword
                    solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass) ) @ #vk.10 )
                      case c_wsenc
                      solve( !KU( ~pass ) @ #vk.26 )
                        case RevealPassword
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case ServerConfirmResponse
            by contradiction /* cyclic */
          qed
        next
          case ClientConfirmRequest_case_7
          solve( !KU( ~nonce_p ) @ #vk.17 )
            case ClientConfirmRequest
            solve( splitEqs(1) )
              case split_case_1
              solve( splitEqs(2) )
                case split
                solve( !KU( x^(~x_c*inv(x.1)) ) @ #vk.16 )
                  case ClientCommitRequest
                  solve( !KU( ~pass ) @ #vk.21 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_c ) @ #vk.23 )
                qed
              qed
            next
              case split_case_2
              solve( splitEqs(2) )
                case split_case_1
                solve( !KU( x^(~x_s*inv(x.1)) ) @ #vk.16 )
                  case ServerCommitResponse
                  solve( !KU( ~pass.1 ) @ #vk.21 )
                    case RevealPassword
                    solve( !KU( senc(<'1', nonce_s>, 'g'^(~x_s*inv(x))) ) @ #vk.9 )
                      case ServerCommitResponse
                      solve( splitEqs(8) )
                        case split_case_1
                        solve( !KU( wsenc('g'^(~x_s*inv((x*~x_c.1))), ~pass.2) ) @ #vk.19 )
                          case c_wsenc
                          solve( !KU( ~pass.2 ) @ #vk.24 )
                            case RevealPassword
                            solve( !KU( 'g'^(~x_s*inv((x*~x_c.1))) ) @ #vk.24 )
                              case ServerCommitResponse
                              by solve( !KU( ~x_c.1 ) @ #vk.27 )
                            next
                              case c_exp
                              by solve( !KU( ~x_s ) @ #vk.28 )
                            qed
                          qed
                        qed
                      next
                        case split_case_2
                        solve( !KU( wsenc('g'^(~x_s*inv((x*~x_c.1))), ~pass.2) ) @ #vk.20 )
                          case c_wsenc
                          solve( !KU( ~pass.2 ) @ #vk.28 )
                            case RevealPassword
                            solve( !KU( 'g'^(~x_s*inv((x*~x_c.1))) ) @ #vk.28 )
                              case ServerCommitResponse
                              by solve( !KU( ~x_c.1 ) @ #vk.31 )
                            next
                              case c_exp
                              by solve( !KU( ~x_s ) @ #vk.32 )
                            qed
                          qed
                        qed
                      qed
                    next
                      case c_senc
                      solve( !KU( wsenc('g'^(~x_s*inv((x*~x_c.1))), ~pass.2) ) @ #vk.19 )
                        case c_wsenc
                        solve( !KU( ~pass.2 ) @ #vk.28 )
                          case RevealPassword
                          solve( !KU( 'g'^(~x_s*inv((x*~x_c.1))) ) @ #vk.28 )
                            case ServerCommitResponse
                            by solve( !KU( ~x_c.1 ) @ #vk.31 )
                          next
                            case c_exp
                            by solve( !KU( ~x_s ) @ #vk.32 )
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_s ) @ #vk.23 )
                qed
              next
                case split_case_2
                solve( !KU( wsenc(x^(x.1*inv((~x_c.1*x.2))), ~pass.2) ) @ #vk.18 )
                  case c_wsenc
                  solve( !KU( ~pass.2 ) @ #vk.22 )
                    case RevealPassword
                    solve( !KU( x^(x.1*inv((~x_c.1*x.2))) ) @ #vk.22 )
                      case ClientCommitRequest_case_1
                      solve( !KU( ~pass.3 ) @ #vk.25 )
                        case RevealPassword
                        by solve( !KU( ~x_c.1 ) @ #vk.28 )
                      qed
                    next
                      case ClientCommitRequest_case_2
                      solve( !KU( ~pass.3 ) @ #vk.25 )
                        case RevealPassword
                        by solve( !KU( ~x_c.2 ) @ #vk.30 )
                      qed
                    next
                      case ServerCommitResponse_case_1
                      solve( !KU( ~pass.3 ) @ #vk.25 )
                        case RevealPassword
                        by solve( !KU( ~x_c.1 ) @ #vk.29 )
                      qed
                    next
                      case ServerCommitResponse_case_2
                      solve( !KU( ~pass.3 ) @ #vk.25 )
                        case RevealPassword
                        by solve( !KU( ~x_c.1 ) @ #vk.31 )
                      qed
                    next
                      case c_exp
                      by solve( !KU( ~x_c.1 ) @ #vk.28 )
                    qed
                  qed
                qed
              next
                case split_case_3
                solve( !KU( x^(~x_s*x.1*inv(x.2)) ) @ #vk.16 )
                  case ClientCommitRequest_case_1
                  solve( !KU( ~pass.3 ) @ #vk.23 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.25 )
                  qed
                next
                  case ClientCommitRequest_case_2
                  solve( !KU( ~pass.3 ) @ #vk.23 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.25 )
                  qed
                next
                  case ServerCommitResponse_case_1
                  solve( !KU( ~pass.3 ) @ #vk.23 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.26 )
                  qed
                next
                  case ServerCommitResponse_case_2
                  solve( !KU( ~pass.3 ) @ #vk.23 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.26 )
                  qed
                next
                  case ServerCommitResponse_case_3
                  solve( !KU( ~pass.1 ) @ #vk.21 )
                    case RevealPassword
                    solve( !KU( senc(<'1', nonce_s>, 'g'^(~x_s*x*inv(x.1))) ) @ #vk.9 )
                      case ServerCommitResponse
                      solve( !KU( wsenc('g'^(~x_s*x*inv((~x_c.1*x.1))), ~pass.2) ) @ #vk.20 )
                        case c_wsenc
                        solve( !KU( ~pass.2 ) @ #vk.30 )
                          case RevealPassword
                          solve( !KU( 'g'^(~x_s*x*inv((~x_c.1*x.1))) ) @ #vk.30 )
                            case ClientCommitRequest_case_1
                            solve( !KU( ~pass.4 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.37 )
                            qed
                          next
                            case ClientCommitRequest_case_2
                            solve( !KU( ~pass.4 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.37 )
                            qed
                          next
                            case ServerCommitResponse_case_1
                            solve( !KU( ~pass.4 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.38 )
                            qed
                          next
                            case ServerCommitResponse_case_2
                            solve( !KU( ~pass.4 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.38 )
                            qed
                          next
                            case ServerCommitResponse_case_3
                            by solve( !KU( ~x_c.1 ) @ #vk.34 )
                          next
                            case c_exp
                            by solve( !KU( ~x_s ) @ #vk.34 )
                          qed
                        qed
                      qed
                    next
                      case c_senc
                      solve( !KU( wsenc('g'^(~x_s*x*inv((~x_c.1*x.1))), ~pass.2) ) @ #vk.19 )
                        case c_wsenc
                        solve( !KU( ~pass.2 ) @ #vk.30 )
                          case RevealPassword
                          solve( !KU( 'g'^(~x_s*x*inv((~x_c.1*x.1))) ) @ #vk.30 )
                            case ClientCommitRequest_case_1
                            solve( !KU( ~pass.3 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.37 )
                            qed
                          next
                            case ClientCommitRequest_case_2
                            solve( !KU( ~pass.3 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.37 )
                            qed
                          next
                            case ServerCommitResponse_case_1
                            solve( !KU( ~pass.3 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.38 )
                            qed
                          next
                            case ServerCommitResponse_case_2
                            solve( !KU( ~pass.3 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.38 )
                            qed
                          next
                            case ServerCommitResponse_case_3
                            by solve( !KU( ~x_c.1 ) @ #vk.34 )
                          next
                            case c_exp
                            by solve( !KU( ~x_s ) @ #vk.34 )
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_s ) @ #vk.23 )
                qed
              qed
            next
              case split_case_3
              solve( !KU( x^(~x_c*x.1*inv(x.2)) ) @ #vk.16 )
                case ClientCommitRequest_case_1
                solve( !KU( ~pass.3 ) @ #vk.23 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.25 )
                qed
              next
                case ClientCommitRequest_case_2
                solve( !KU( ~pass.3 ) @ #vk.23 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.25 )
                qed
              next
                case ClientCommitRequest_case_3
                solve( !KU( ~pass ) @ #vk.21 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              next
                case ServerCommitResponse_case_1
                solve( !KU( ~pass.3 ) @ #vk.23 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.26 )
                qed
              next
                case ServerCommitResponse_case_2
                solve( !KU( ~pass.3 ) @ #vk.23 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.26 )
                qed
              next
                case c_exp
                by solve( !KU( ~x_c ) @ #vk.23 )
              qed
            qed
          next
            case ServerConfirmResponse_case_1
            solve( splitEqs(1) )
              case split_case_1
              solve( splitEqs(2) )
                case split_case_1
                by contradiction /* cyclic */
              next
                case split_case_2
                by solve( splitEqs(4) )
              next
                case split_case_3
                solve( splitEqs(6) )
                  case split_case_1
                  by contradiction /* cyclic */
                next
                  case split_case_2
                  by contradiction /* cyclic */
                next
                  case split_case_3
                  by contradiction /* cyclic */
                qed
              qed
            next
              case split_case_2
              solve( splitEqs(6) )
                case split_case_1
                by contradiction /* cyclic */
              next
                case split_case_2
                by contradiction /* cyclic */
              qed
            qed
          next
            case ServerConfirmResponse_case_2
            by contradiction /* cyclic */
          qed
        next
          case ServerCommitResponse
          solve( !KU( ~nonce_p ) @ #vk.16 )
            case ClientConfirmRequest
            solve( splitEqs(1) )
              case split_case_1
              solve( !KU( wsenc(key^inv(~x_c), ~pass) ) @ #vk.6 )
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.18 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_2
              solve( splitEqs(2) )
                case split
                solve( !KU( senc(<'1', nonce_s>, y_s^~x_c) ) @ #vk.7 )
                  case ServerCommitResponse
                  solve( splitEqs(7) )
                    case split
                    solve( !KU( wsenc(y_s, ~pass) ) @ #vk.7 )
                      case ClientCommitRequest
                      by contradiction /* non-normal terms */
                    next
                      case c_wsenc
                      solve( !KU( ~pass ) @ #vk.21 )
                        case RevealPassword
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( wsenc(y_s, ~pass) ) @ #vk.7 )
                    case ClientCommitRequest
                    by contradiction /* non-normal terms */
                  next
                    case c_wsenc
                    solve( !KU( ~pass ) @ #vk.21 )
                      case RevealPassword
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case split_case_3
              solve( splitEqs(2) )
                case split
                solve( !KU( senc(<'1', nonce_s>, wsdec(scr_0, ~pass)^~x_c) ) @ #vk.7 )
                  case ServerCommitResponse
                  solve( splitEqs(7) )
                    case split
                    solve( !KU( wsdec(scr_0, ~pass)^~x_c ) @ #vk.16 )
                      case c_exp
                      by solve( !KU( ~x_c ) @ #vk.21 )
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( wsdec(scr_0, ~pass)^~x_c ) @ #vk.15 )
                    case c_exp
                    by solve( !KU( ~x_c ) @ #vk.21 )
                  qed
                qed
              qed
            next
              case split_case_4
              solve( !KU( wsenc(x^(x.1*inv(~x_c)), ~pass) ) @ #vk.6 )
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.18 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_5
              solve( !KU( x^(~x_c*x.1) ) @ #vk.15 )
                case ClientCommitRequest_case_1
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.20 )
                qed
              next
                case ClientCommitRequest_case_2
                solve( !KU( ~pass ) @ #vk.17 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              next
                case ClientCommitRequest_case_3
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.21 )
                qed
              next
                case ServerCommitResponse_case_1
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.20 )
                qed
              next
                case ServerCommitResponse_case_2
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.22 )
                qed
              next
                case c_exp
                by solve( !KU( ~x_c ) @ #vk.19 )
              qed
            next
              case split_case_6
              solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass) ) @ #vk.6 )
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.18 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_7
              solve( splitEqs(2) )
                case split_case_1
                solve( !KU( x^(~x_s*inv(x.1)) ) @ #vk.15 )
                  case ServerCommitResponse
                  solve( !KU( ~pass.1 ) @ #vk.17 )
                    case RevealPassword
                    solve( !KU( senc(<'1', nonce_s>, 'g'^(~x_s*inv(x))) ) @ #vk.9 )
                      case ServerCommitResponse
                      solve( splitEqs(8) )
                        case split_case_1
                        solve( !KU( wsenc('g'^(~x_s*inv((~x_c*x))), ~pass) ) @ #vk.9 )
                          case c_wsenc
                          solve( !KU( ~pass ) @ #vk.21 )
                            case RevealPassword
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case split_case_2
                        solve( !KU( wsenc('g'^(~x_s*inv((~x_c*x))), ~pass) ) @ #vk.9 )
                          case c_wsenc
                          solve( !KU( ~pass ) @ #vk.24 )
                            case RevealPassword
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    next
                      case c_senc
                      solve( !KU( wsenc('g'^(~x_s*inv((~x_c*x))), ~pass) ) @ #vk.9 )
                        case c_wsenc
                        solve( !KU( ~pass ) @ #vk.24 )
                          case RevealPassword
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_s ) @ #vk.19 )
                qed
              next
                case split_case_2
                solve( !KU( wsenc(x^(x.1*inv((~x_c*x.2))), ~pass) ) @ #vk.6 )
                  case c_wsenc
                  solve( !KU( ~pass ) @ #vk.18 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case split_case_3
                solve( !KU( x^(~x_s*x.1*inv(x.2)) ) @ #vk.15 )
                  case ClientCommitRequest_case_1
                  solve( !KU( ~pass.2 ) @ #vk.19 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.21 )
                  qed
                next
                  case ClientCommitRequest_case_2
                  solve( !KU( ~pass.2 ) @ #vk.19 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.21 )
                  qed
                next
                  case ServerCommitResponse_case_1
                  solve( !KU( ~pass.2 ) @ #vk.19 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.22 )
                  qed
                next
                  case ServerCommitResponse_case_2
                  solve( !KU( ~pass.2 ) @ #vk.19 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.22 )
                  qed
                next
                  case ServerCommitResponse_case_3
                  solve( !KU( ~pass.1 ) @ #vk.17 )
                    case RevealPassword
                    solve( !KU( senc(<'1', nonce_s>, 'g'^(~x_s*x*inv(x.1))) ) @ #vk.9 )
                      case ServerCommitResponse
                      solve( !KU( wsenc('g'^(~x_s*x*inv((~x_c*x.1))), ~pass) ) @ #vk.9 )
                        case c_wsenc
                        solve( !KU( ~pass ) @ #vk.26 )
                          case RevealPassword
                          by contradiction /* from formulas */
                        qed
                      qed
                    next
                      case c_senc
                      solve( !KU( wsenc('g'^(~x_s*x*inv((~x_c*x.1))), ~pass) ) @ #vk.9 )
                        case c_wsenc
                        solve( !KU( ~pass ) @ #vk.26 )
                          case RevealPassword
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_s ) @ #vk.19 )
                qed
              qed
            qed
          next
            case ServerConfirmResponse_case_1
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_2
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_3
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_4
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_5
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_6
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_7
            by contradiction /* cyclic */
          qed
        qed
      qed
    next
      case c_senc
      solve( !KU( ~nonce_p ) @ #vk.9 )
        case ClientConfirmRequest
        solve( splitEqs(1) )
          case split_case_1
          solve( !KU( wsenc(key^inv(~x_c), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_2
          solve( !KU( senc(<'1', nonce_s>, y_s^~x_c) ) @ #vk.4 )
            case ServerCommitResponse
            solve( splitEqs(4) )
              case split
              solve( !KU( wsenc(y_s, ~pass) ) @ #vk.4 )
                case ClientCommitRequest
                by contradiction /* non-normal terms */
              next
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.15 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case c_senc
            solve( !KU( wsenc(y_s, ~pass) ) @ #vk.4 )
              case ClientCommitRequest
              by contradiction /* non-normal terms */
            next
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.14 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case split_case_3
          solve( !KU( senc(<'1', nonce_s>, wsdec(scr_0, ~pass)^~x_c) ) @ #vk.4 )
            case ServerCommitResponse
            solve( splitEqs(4) )
              case split
              solve( !KU( wsdec(scr_0, ~pass)^~x_c ) @ #vk.8 )
                case c_exp
                by solve( !KU( ~x_c ) @ #vk.15 )
              qed
            qed
          next
            case c_senc
            solve( !KU( wsdec(scr_0, ~pass)^~x_c ) @ #vk.8 )
              case c_exp
              by solve( !KU( ~x_c ) @ #vk.14 )
            qed
          qed
        next
          case split_case_4
          solve( !KU( wsenc(x^(x.1*inv(~x_c)), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_5
          solve( !KU( x^(~x_c*x.1) ) @ #vk.8 )
            case ClientCommitRequest_case_1
            solve( !KU( ~pass.1 ) @ #vk.12 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.13 )
            qed
          next
            case ClientCommitRequest_case_2
            solve( !KU( ~pass ) @ #vk.10 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case ClientCommitRequest_case_3
            solve( !KU( ~pass.1 ) @ #vk.12 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.14 )
            qed
          next
            case ServerCommitResponse_case_1
            solve( !KU( ~pass.1 ) @ #vk.11 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.12 )
            qed
          next
            case ServerCommitResponse_case_2
            solve( !KU( ~pass.1 ) @ #vk.11 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.16 )
            qed
          next
            case c_exp
            by solve( !KU( ~x_c ) @ #vk.12 )
          qed
        next
          case split_case_6
          solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_7
          solve( !KU( wsenc(x^(x.1*inv((~x_c*x.2))), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case ServerConfirmResponse_case_1
        solve( !KU( wsenc(key^inv(~x_s), ~pass.1) ) @ #vk.11 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.16 )
            case RevealPassword
            solve( !KU( wsenc(key^inv(~x_c), ~pass) ) @ #vk.5 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.18 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case ServerConfirmResponse_case_2
        solve( splitEqs(1) )
          case split
          solve( !KU( y_c^~x_s ) @ #vk.8 )
            case ServerCommitResponse
            solve( !KU( ~pass.1 ) @ #vk.15 )
              case RevealPassword
              solve( !KU( wsenc('g', ~pass.1) ) @ #vk.12 )
                case c_wsenc
                solve( !KU( wsenc('g'^(~x_s*inv(~x_c)), ~pass) ) @ #vk.6 )
                  case c_wsenc
                  solve( !KU( ~pass ) @ #vk.18 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          next
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.16 )
          qed
        qed
      next
        case ServerConfirmResponse_case_3
        solve( !KU( x^(~x_s*x.2) ) @ #vk.8 )
          case ClientCommitRequest_case_1
          solve( !KU( ~pass.2 ) @ #vk.17 )
            case RevealPassword
            by solve( !KU( ~x_s ) @ #vk.18 )
          qed
        next
          case ClientCommitRequest_case_2
          solve( !KU( ~pass.2 ) @ #vk.17 )
            case RevealPassword
            by solve( !KU( ~x_s ) @ #vk.19 )
          qed
        next
          case ServerCommitResponse_case_1
          solve( !KU( ~pass.2 ) @ #vk.17 )
            case RevealPassword
            by solve( !KU( ~x_s ) @ #vk.18 )
          qed
        next
          case ServerCommitResponse_case_2
          solve( !KU( ~pass.1 ) @ #vk.15 )
            case RevealPassword
            solve( !KU( wsenc('g'^x.1, ~pass.1) ) @ #vk.12 )
              case ClientCommitRequest
              by solve( !KU( ~x_c.1 ) @ #vk.17 )
            next
              case ServerCommitResponse
              by solve( !KU( ~x_s.1 ) @ #vk.16 )
            next
              case c_wsenc
              solve( !KU( wsenc('g'^x, ~pass) ) @ #vk.6 )
                case ClientCommitRequest
                solve( !KU( ~x ) @ #vk.16 )
                  case ClientConfirmRequest_case_1
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_2
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_3
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_4
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_5
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_6
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_7
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_8
                  by solve( splitEqs(1) )
                next
                  case RevealPassword
                  by solve( splitEqs(1) )
                next
                  case ServerCommitResponse
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_1
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_2
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_3
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_4
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_5
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_6
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_7
                  by solve( splitEqs(1) )
                next
                  case fresh
                  by solve( splitEqs(1) )
                qed
              next
                case ServerCommitResponse
                by contradiction /* from formulas */
              next
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.19 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case ServerCommitResponse_case_3
          solve( !KU( ~pass.2 ) @ #vk.17 )
            case RevealPassword
            by solve( !KU( ~x_s ) @ #vk.20 )
          qed
        next
          case c_exp
          by solve( !KU( ~x_s ) @ #vk.17 )
        qed
      next
        case ServerConfirmResponse_case_4
        solve( !KU( wsenc(x^(x.1*inv(~x_s)), ~pass.1) ) @ #vk.11 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.16 )
            case RevealPassword
            solve( !KU( x^(x.1*inv(~x_s)) ) @ #vk.16 )
              case ClientCommitRequest_case_1
              solve( !KU( ~pass.2 ) @ #vk.19 )
                case RevealPassword
                by solve( !KU( ~x_s ) @ #vk.21 )
              qed
            next
              case ClientCommitRequest_case_2
              solve( !KU( ~pass.2 ) @ #vk.19 )
                case RevealPassword
                by solve( !KU( ~x_s ) @ #vk.23 )
              qed
            next
              case ServerCommitResponse_case_1
              solve( !KU( ~pass.2 ) @ #vk.19 )
                case RevealPassword
                by solve( !KU( ~x_s ) @ #vk.22 )
              qed
            next
              case ServerCommitResponse_case_2
              solve( !KU( ~pass.2 ) @ #vk.19 )
                case RevealPassword
                by solve( !KU( ~x_s.1 ) @ #vk.24 )
              qed
            next
              case c_exp
              by solve( !KU( ~x_s ) @ #vk.21 )
            qed
          qed
        qed
      next
        case ServerConfirmResponse_case_5
        solve( !KU( wsenc(x^inv((~x_s*x.1)), ~pass.1) ) @ #vk.11 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.16 )
            case RevealPassword
            solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass) ) @ #vk.5 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.18 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case ServerConfirmResponse_case_6
        solve( splitEqs(1) )
          case split_case_1
          solve( !KU( x^(~x_c*inv(x.1)) ) @ #vk.8 )
            case ClientCommitRequest
            solve( !KU( ~pass ) @ #vk.15 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case c_exp
            by solve( !KU( ~x_c ) @ #vk.17 )
          qed
        next
          case split_case_2
          solve( !KU( wsenc(x^(x.1*inv((~x_s*x.2))), ~pass.1) ) @ #vk.11 )
            case c_wsenc
            solve( !KU( ~pass.1 ) @ #vk.16 )
              case RevealPassword
              solve( !KU( x^(x.1*inv((~x_s*x.2))) ) @ #vk.16 )
                case ClientCommitRequest_case_1
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_s ) @ #vk.22 )
                qed
              next
                case ClientCommitRequest_case_2
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_s ) @ #vk.24 )
                qed
              next
                case ServerCommitResponse_case_1
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_s ) @ #vk.23 )
                qed
              next
                case ServerCommitResponse_case_2
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_s.1 ) @ #vk.25 )
                qed
              next
                case c_exp
                by solve( !KU( ~x_s ) @ #vk.22 )
              qed
            qed
          qed
        next
          case split_case_3
          solve( !KU( x^(~x_c*x.1*inv(x.2)) ) @ #vk.8 )
            case ClientCommitRequest_case_1
            solve( !KU( ~pass.2 ) @ #vk.17 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.19 )
            qed
          next
            case ClientCommitRequest_case_2
            solve( !KU( ~pass.2 ) @ #vk.17 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.19 )
            qed
          next
            case ClientCommitRequest_case_3
            solve( !KU( ~pass ) @ #vk.15 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case ServerCommitResponse_case_1
            solve( !KU( ~pass.2 ) @ #vk.17 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.20 )
            qed
          next
            case ServerCommitResponse_case_2
            solve( !KU( ~pass.2 ) @ #vk.17 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.20 )
            qed
          next
            case c_exp
            by solve( !KU( ~x_c ) @ #vk.17 )
          qed
        qed
      next
        case ServerConfirmResponse_case_7
        solve( splitEqs(1) )
          case split
          solve( !KU( wsdec(client_commit_request, ~pass.1)^~x_s ) @ #vk.8 )
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.16 )
          qed
        qed
      qed
    qed
  qed
next
  case ServerConfirmResponse
  solve( StateServerCommitResponse( tid, A, B, pass, x_s, y_s, nonce_s,
                                    key, y_c
         ) ▶₀ #i )
    case ServerCommitResponse
    solve( !KU( senc(<'2', ~nonce_s, nonce_p>, key) ) @ #vk )
      case ClientConfirmRequest
      solve( splitEqs(1) )
        case split_case_1
        solve( splitEqs(2) )
          case split
          solve( !KU( wsenc(wsdec(client_commit_request, ~pass)^(~x_s*inv(~x_c)),
                            ~pass.1)
                 ) @ #vk.5 )
            case c_wsenc
            solve( !KU( ~pass.1 ) @ #vk.11 )
              case RevealPassword
              solve( !KU( wsdec(client_commit_request, ~pass)^(~x_s*inv(~x_c))
                     ) @ #vk.11 )
                case c_exp
                by solve( !KU( ~x_s ) @ #vk.14 )
              qed
            qed
          qed
        qed
      next
        case split_case_2
        solve( splitEqs(2) )
          case split
          solve( !KU( wsenc(y_c, ~pass) ) @ #vk.1 )
            case ClientCommitRequest
            by contradiction /* non-normal terms */
          next
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case split_case_3
        solve( !KU( wsenc(key^inv(~x_s), ~pass) ) @ #vk.1 )
          case c_wsenc
          solve( !KU( ~pass ) @ #vk.11 )
            case RevealPassword
            by contradiction /* from formulas */
          qed
        qed
      next
        case split_case_4
        solve( !KU( wsenc(x^x.1, ~pass) ) @ #vk.1 )
          case ClientCommitRequest
          by contradiction /* from formulas */
        next
          case ServerCommitResponse
          solve( splitEqs(2) )
            case split
            solve( !KU( wsenc('g'^(~x_s*~x_s.1*inv(~x_c)), ~pass.1) ) @ #vk.5 )
              case c_wsenc
              solve( !KU( ~pass.1 ) @ #vk.12 )
                case RevealPassword
                solve( !KU( 'g'^(~x_s*~x_s.1*inv(~x_c)) ) @ #vk.12 )
                  case ServerCommitResponse_case_1
                  solve( !KU( ~pass ) @ #vk.13 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                next
                  case ServerCommitResponse_case_2
                  solve( !KU( ~pass ) @ #vk.13 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_s ) @ #vk.15 )
                qed
              qed
            qed
          qed
        next
          case c_wsenc
          solve( !KU( ~pass ) @ #vk.11 )
            case RevealPassword
            by contradiction /* from formulas */
          qed
        qed
      next
        case split_case_5
        solve( !KU( wsenc(x^inv((~x_s*x.1)), ~pass) ) @ #vk.1 )
          case c_wsenc
          solve( !KU( ~pass ) @ #vk.11 )
            case RevealPassword
            by contradiction /* from formulas */
          qed
        qed
      next
        case split_case_6
        solve( !KU( wsenc(x^(x.1*inv(~x_s)), ~pass) ) @ #vk.1 )
          case c_wsenc
          solve( !KU( ~pass ) @ #vk.11 )
            case RevealPassword
            by contradiction /* from formulas */
          qed
        qed
      next
        case split_case_7
        solve( splitEqs(2) )
          case split_case_1
          solve( !KU( wsenc(x^(~x_c*inv((~x_s*x.1))), ~pass) ) @ #vk.1 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_2
          solve( !KU( wsenc(x^(x.1*inv((~x_s*x.2))), ~pass) ) @ #vk.1 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_3
          solve( !KU( wsenc(x^(~x_c*x.1*inv((~x_s*x.2))), ~pass) ) @ #vk.1 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    next
      case c_senc
      solve( !KU( ~nonce_s ) @ #vk.9 )
        case ClientConfirmRequest_case_1
        solve( splitEqs(1) )
          case split
          solve( !KU( wsdec(scr_0, ~pass.1)^~x_c ) @ #vk.8 )
            case c_exp
            by solve( !KU( ~x_c ) @ #vk.17 )
          qed
        qed
      next
        case ClientConfirmRequest_case_2
        solve( splitEqs(1) )
          case split
          solve( !KU( wsenc(z, ~pass.1) ) @ #vk.11 )
            case ClientCommitRequest
            by contradiction /* non-normal terms */
          next
            case c_wsenc
            solve( !KU( ~pass.1 ) @ #vk.17 )
              case RevealPassword
              solve( !KU( z^~x_c ) @ #vk.10 )
                case ClientCommitRequest
                solve( !KU( wsenc('g'^(~x_c*inv(~x_s)), ~pass) ) @ #vk.7 )
                  case c_wsenc
                  solve( !KU( ~pass ) @ #vk.19 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case c_exp
                by solve( !KU( ~x_c ) @ #vk.18 )
              qed
            qed
          qed
        qed
      next
        case ClientConfirmRequest_case_3
        solve( !KU( wsenc(key^inv(~x_c), ~pass.1) ) @ #vk.11 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.17 )
            case RevealPassword
            solve( !KU( wsenc(key^inv(~x_s), ~pass) ) @ #vk.6 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.19 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case ClientConfirmRequest_case_4
        solve( !KU( x^(~x_c*x.1) ) @ #vk.7 )
          case ClientCommitRequest_case_1
          solve( !KU( ~pass.2 ) @ #vk.18 )
            case RevealPassword
            by solve( !KU( ~x_c ) @ #vk.19 )
          qed
        next
          case ClientCommitRequest_case_2
          solve( !KU( ~pass.1 ) @ #vk.16 )
            case RevealPassword
            solve( !KU( wsenc('g'^x, ~pass.1) ) @ #vk.12 )
              case ClientCommitRequest
              by solve( !KU( ~x_c.1 ) @ #vk.17 )
            next
              case ServerCommitResponse
              by solve( !KU( ~x_s.1 ) @ #vk.18 )
            next
              case c_wsenc
              solve( !KU( wsenc('g'^x.1, ~pass) ) @ #vk.7 )
                case ClientCommitRequest
                by contradiction /* from formulas */
              next
                case ServerCommitResponse
                solve( !KU( ~x ) @ #vk.17 )
                  case ClientConfirmRequest_case_1
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_2
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_3
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_4
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_5
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_6
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_7
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_8
                  by solve( splitEqs(1) )
                next
                  case RevealPassword
                  by solve( splitEqs(1) )
                next
                  case ServerCommitResponse
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_1
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_2
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_3
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_4
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_5
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_6
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_7
                  by solve( splitEqs(1) )
                next
                  case fresh
                  by solve( splitEqs(1) )
                qed
              next
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.20 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case ClientCommitRequest_case_3
          solve( !KU( ~pass.2 ) @ #vk.18 )
            case RevealPassword
            by solve( !KU( ~x_c ) @ #vk.20 )
          qed
        next
          case ServerCommitResponse_case_1
          solve( !KU( ~pass.2 ) @ #vk.18 )
            case RevealPassword
            by solve( !KU( ~x_c ) @ #vk.19 )
          qed
        next
          case ServerCommitResponse_case_2
          solve( !KU( ~pass.2 ) @ #vk.18 )
            case RevealPassword
            by solve( !KU( ~x_c ) @ #vk.21 )
          qed
        next
          case c_exp
          by solve( !KU( ~x_c ) @ #vk.18 )
        qed
      next
        case ClientConfirmRequest_case_5
        solve( !KU( wsenc(x^(x.1*inv(~x_c)), ~pass.1) ) @ #vk.11 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.17 )
            case RevealPassword
            solve( !KU( x^(x.1*inv(~x_c)) ) @ #vk.17 )
              case ClientCommitRequest_case_1
              solve( !KU( ~pass.2 ) @ #vk.20 )
                case RevealPassword
                by solve( !KU( ~x_c ) @ #vk.22 )
              qed
            next
              case ClientCommitRequest_case_2
              solve( !KU( ~pass.2 ) @ #vk.20 )
                case RevealPassword
                by solve( !KU( ~x_c.1 ) @ #vk.24 )
              qed
            next
              case ServerCommitResponse_case_1
              solve( !KU( ~pass.2 ) @ #vk.20 )
                case RevealPassword
                by solve( !KU( ~x_c ) @ #vk.23 )
              qed
            next
              case ServerCommitResponse_case_2
              solve( !KU( ~pass.2 ) @ #vk.20 )
                case RevealPassword
                by solve( !KU( ~x_c ) @ #vk.25 )
              qed
            next
              case c_exp
              by solve( !KU( ~x_c ) @ #vk.22 )
            qed
          qed
        qed
      next
        case ClientConfirmRequest_case_6
        solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass.1) ) @ #vk.11 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.17 )
            case RevealPassword
            solve( !KU( wsenc(x^inv((~x_s*x.1)), ~pass) ) @ #vk.6 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.19 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case ClientConfirmRequest_case_7
        solve( splitEqs(1) )
          case split_case_1
          solve( !KU( x^(~x_s*inv(x.1)) ) @ #vk.8 )
            case ServerCommitResponse
            solve( !KU( ~pass ) @ #vk.16 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.18 )
          qed
        next
          case split_case_2
          solve( !KU( wsenc(x^(x.1*inv((~x_c*x.2))), ~pass.1) ) @ #vk.11 )
            case c_wsenc
            solve( !KU( ~pass.1 ) @ #vk.17 )
              case RevealPassword
              solve( !KU( x^(x.1*inv((~x_c*x.2))) ) @ #vk.17 )
                case ClientCommitRequest_case_1
                solve( !KU( ~pass.2 ) @ #vk.20 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.23 )
                qed
              next
                case ClientCommitRequest_case_2
                solve( !KU( ~pass.2 ) @ #vk.20 )
                  case RevealPassword
                  by solve( !KU( ~x_c.1 ) @ #vk.25 )
                qed
              next
                case ServerCommitResponse_case_1
                solve( !KU( ~pass.2 ) @ #vk.20 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.24 )
                qed
              next
                case ServerCommitResponse_case_2
                solve( !KU( ~pass.2 ) @ #vk.20 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.26 )
                qed
              next
                case c_exp
                by solve( !KU( ~x_c ) @ #vk.23 )
              qed
            qed
          qed
        next
          case split_case_3
          solve( !KU( x^(~x_s*x.1*inv(x.2)) ) @ #vk.8 )
            case ClientCommitRequest_case_1
            solve( !KU( ~pass.2 ) @ #vk.18 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.20 )
            qed
          next
            case ClientCommitRequest_case_2
            solve( !KU( ~pass.2 ) @ #vk.18 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.20 )
            qed
          next
            case ServerCommitResponse_case_1
            solve( !KU( ~pass.2 ) @ #vk.18 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.21 )
            qed
          next
            case ServerCommitResponse_case_2
            solve( !KU( ~pass.2 ) @ #vk.18 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.21 )
            qed
          next
            case ServerCommitResponse_case_3
            solve( !KU( ~pass ) @ #vk.16 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.18 )
          qed
        qed
      next
        case ServerCommitResponse
        solve( splitEqs(1) )
          case split_case_1
          solve( !KU( wsdec(client_commit_request, ~pass)^~x_s ) @ #vk.8 )
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.12 )
          qed
        next
          case split_case_2
          solve( !KU( wsenc(y_c, ~pass) ) @ #vk.3 )
            case ClientCommitRequest
            by contradiction /* non-normal terms */
          next
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_3
          solve( !KU( wsenc(key^inv(~x_s), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_4
          solve( !KU( x^(~x_s*x.1) ) @ #vk.8 )
            case ClientCommitRequest_case_1
            solve( !KU( ~pass.1 ) @ #vk.14 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.15 )
            qed
          next
            case ClientCommitRequest_case_2
            solve( !KU( ~pass.1 ) @ #vk.14 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.16 )
            qed
          next
            case ServerCommitResponse_case_1
            solve( !KU( ~pass.1 ) @ #vk.13 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.14 )
            qed
          next
            case ServerCommitResponse_case_2
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case ServerCommitResponse_case_3
            solve( !KU( ~pass.1 ) @ #vk.13 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.16 )
            qed
          next
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.13 )
          qed
        next
          case split_case_5
          solve( !KU( wsenc(x^inv((~x_s*x.1)), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_6
          solve( !KU( wsenc(x^(x.1*inv(~x_s)), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_7
          solve( !KU( wsenc(x^(x.1*inv((~x_s*x.2))), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma WeakAgreement:
  all-traces
  "∀ A B t #i.
    (Commit( A, B, t ) @ #i) ⇒
    (((∃ t2 #j. Running( A, B, t2 ) @ #j) ∨ (∃ #j. RevAgentPass( A ) @ #j)) ∨
     (∃ #j. RevAgentPass( B ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ A B t #i.
  (Commit( A, B, t ) @ #i)
 ∧
  (∀ t2 #j. (Running( A, B, t2 ) @ #j) ⇒ ⊥) ∧
  (∀ #j. (RevAgentPass( A ) @ #j) ⇒ ⊥) ∧
  (∀ #j. (RevAgentPass( B ) @ #j) ⇒ ⊥)"
*/
simplify
solve( Commit( A, B, t ) @ #i )
  case ClientSessionEstablishment
  solve( StateClientConfirmRequest_1( tid, A, B, pass, x_c, y_c, scr_0,
                                      y_s, key, nonce_p, nonce_s, scr_1
         ) ▶₀ #i )
    case ClientConfirmRequest
    solve( !KU( senc(<'3', ~nonce_p>, key) ) @ #vk )
      case ServerConfirmResponse
      solve( !KU( senc(<'2', ~nonce_s.1, ~nonce_p>, key) ) @ #vk.6 )
        case ClientConfirmRequest
        solve( splitEqs(1) )
          case split_case_1
          solve( !KU( wsenc(key^inv(~x_c), ~pass) ) @ #vk.2 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_2
          solve( splitEqs(2) )
            case split
            solve( !KU( wsenc(y_s, ~pass) ) @ #vk.2 )
              case ClientCommitRequest
              by contradiction /* non-normal terms */
            next
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.12 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case split_case_3
          solve( splitEqs(2) )
            case split
            solve( !KU( wsenc(wsdec(scr_0, ~pass)^(~x_c*inv(~x_s)), ~pass.1)
                   ) @ #vk.7 )
              case c_wsenc
              solve( !KU( ~pass.1 ) @ #vk.12 )
                case RevealPassword
                solve( !KU( wsdec(scr_0, ~pass)^(~x_c*inv(~x_s)) ) @ #vk.12 )
                  case c_exp
                  by solve( !KU( ~x_c ) @ #vk.15 )
                qed
              qed
            qed
          qed
        next
          case split_case_4
          solve( !KU( wsenc(x^(x.1*inv(~x_c)), ~pass) ) @ #vk.2 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_5
          solve( !KU( wsenc(x^x.1, ~pass) ) @ #vk.2 )
            case ClientCommitRequest
            solve( splitEqs(2) )
              case split
              solve( !KU( wsenc('g'^(~x_c*~x_c.1*inv(~x_s)), ~pass.1) ) @ #vk.7 )
                case c_wsenc
                solve( !KU( ~pass.1 ) @ #vk.12 )
                  case RevealPassword
                  solve( !KU( 'g'^(~x_c*~x_c.1*inv(~x_s)) ) @ #vk.12 )
                    case ClientCommitRequest_case_1
                    solve( !KU( ~pass ) @ #vk.13 )
                      case RevealPassword
                      by contradiction /* from formulas */
                    qed
                  next
                    case ClientCommitRequest_case_2
                    solve( !KU( ~pass ) @ #vk.13 )
                      case RevealPassword
                      by contradiction /* from formulas */
                    qed
                  next
                    case c_exp
                    by solve( !KU( ~x_c ) @ #vk.15 )
                  qed
                qed
              qed
            qed
          next
            case ServerCommitResponse
            solve( splitEqs(2) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( wsenc('g'^(~x_c*~x_s*inv(~x_s.1)), ~pass.1) ) @ #vk.7 )
                case c_wsenc
                solve( !KU( ~pass.1 ) @ #vk.15 )
                  case RevealPassword
                  solve( !KU( 'g'^(~x_c*~x_s*inv(~x_s.1)) ) @ #vk.15 )
                    case ClientCommitRequest
                    solve( !KU( ~pass ) @ #vk.16 )
                      case RevealPassword
                      by contradiction /* from formulas */
                    qed
                  next
                    case ServerCommitResponse
                    solve( !KU( ~pass ) @ #vk.16 )
                      case RevealPassword
                      by contradiction /* from formulas */
                    qed
                  next
                    case c_exp
                    by solve( !KU( ~x_c ) @ #vk.18 )
                  qed
                qed
              qed
            qed
          next
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_6
          solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass) ) @ #vk.2 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_7
          solve( splitEqs(2) )
            case split_case_1
            solve( !KU( wsenc(x^(~x_s*inv((~x_c*x.1))), ~pass) ) @ #vk.2 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.12 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_2
            solve( !KU( wsenc(x^(x.1*inv((~x_c*x.2))), ~pass) ) @ #vk.2 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.12 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_3
            solve( !KU( wsenc(x^(~x_s*x.1*inv((~x_c*x.2))), ~pass) ) @ #vk.2 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.12 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case c_senc
        solve( !KU( ~nonce_s.1 ) @ #vk.15 )
          case ClientConfirmRequest_case_1
          solve( !KU( ~nonce_p ) @ #vk.17 )
            case ClientConfirmRequest
            solve( splitEqs(1) )
              case split_case_1
              solve( splitEqs(2) )
                case split
                solve( !KU( wsdec(scr_0, ~pass)^~x_c ) @ #vk.15 )
                  case c_exp
                  by solve( !KU( ~x_c ) @ #vk.18 )
                qed
              qed
            next
              case split_case_2
              solve( splitEqs(2) )
                case split
                solve( !KU( senc(<'1', nonce_s>, wsdec(scr_0, ~pass.1)^~x_c.1)
                       ) @ #vk.7 )
                  case ServerCommitResponse
                  solve( splitEqs(7) )
                    case split
                    solve( !KU( wsdec(scr_0, ~pass.1)^~x_c.1 ) @ #vk.17 )
                      case c_exp
                      by solve( !KU( ~x_c.1 ) @ #vk.25 )
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( wsdec(scr_0, ~pass.1)^~x_c.1 ) @ #vk.16 )
                    case c_exp
                    by solve( !KU( ~x_c.1 ) @ #vk.25 )
                  qed
                qed
              qed
            qed
          next
            case ServerConfirmResponse
            by contradiction /* cyclic */
          qed
        next
          case ClientConfirmRequest_case_2
          solve( !KU( ~nonce_p ) @ #vk.17 )
            case ClientConfirmRequest
            solve( splitEqs(1) )
              case split_case_1
              solve( splitEqs(2) )
                case split
                solve( !KU( wsenc(y_s, ~pass) ) @ #vk.6 )
                  case ClientCommitRequest
                  by contradiction /* non-normal terms */
                next
                  case c_wsenc
                  solve( !KU( ~pass ) @ #vk.18 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case split_case_2
              solve( splitEqs(2) )
                case split
                solve( !KU( senc(<'1', nonce_s>, z^~x_c.1) ) @ #vk.7 )
                  case ServerCommitResponse
                  solve( splitEqs(7) )
                    case split
                    solve( !KU( wsenc(z, ~pass.2) ) @ #vk.19 )
                      case ClientCommitRequest
                      by contradiction /* non-normal terms */
                    next
                      case c_wsenc
                      solve( !KU( ~pass.2 ) @ #vk.25 )
                        case RevealPassword
                        solve( !KU( z^~x_c.1 ) @ #vk.19 )
                          case ClientCommitRequest
                          solve( !KU( wsenc('g'^(~x_c.1*inv(~x_c)), ~pass) ) @ #vk.10 )
                            case c_wsenc
                            solve( !KU( ~pass ) @ #vk.27 )
                              case RevealPassword
                              by contradiction /* from formulas */
                            qed
                          qed
                        next
                          case c_exp
                          by solve( !KU( ~x_c.1 ) @ #vk.26 )
                        qed
                      qed
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( wsenc(z, ~pass.2) ) @ #vk.18 )
                    case ClientCommitRequest
                    by contradiction /* non-normal terms */
                  next
                    case c_wsenc
                    solve( !KU( ~pass.2 ) @ #vk.25 )
                      case RevealPassword
                      solve( !KU( z^~x_c.1 ) @ #vk.18 )
                        case ClientCommitRequest
                        solve( !KU( wsenc('g'^(~x_c.1*inv(~x_c)), ~pass) ) @ #vk.10 )
                          case c_wsenc
                          solve( !KU( ~pass ) @ #vk.27 )
                            case RevealPassword
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case c_exp
                        by solve( !KU( ~x_c.1 ) @ #vk.26 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case ServerConfirmResponse
            by contradiction /* cyclic */
          qed
        next
          case ClientConfirmRequest_case_3
          solve( !KU( ~nonce_p ) @ #vk.17 )
            case ClientConfirmRequest
            solve( !KU( wsenc(key^inv(~x_c.1), ~pass.2) ) @ #vk.18 )
              case c_wsenc
              solve( !KU( ~pass.2 ) @ #vk.22 )
                case RevealPassword
                solve( !KU( wsenc(key^inv(~x_s), ~pass.2) ) @ #vk.14 )
                  case c_wsenc
                  solve( !KU( ~pass.2 ) @ #vk.24 )
                    case RevealPassword
                    solve( !KU( wsenc(key^inv(~x_c), ~pass) ) @ #vk.10 )
                      case c_wsenc
                      solve( !KU( ~pass ) @ #vk.26 )
                        case RevealPassword
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case ServerConfirmResponse
            by contradiction /* cyclic */
          qed
        next
          case ClientConfirmRequest_case_4
          solve( !KU( ~nonce_p ) @ #vk.17 )
            case ClientConfirmRequest
            solve( !KU( x^(~x_c.1*x.2) ) @ #vk.16 )
              case ClientCommitRequest_case_1
              solve( !KU( ~pass.3 ) @ #vk.23 )
                case RevealPassword
                by solve( !KU( ~x_c.1 ) @ #vk.24 )
              qed
            next
              case ClientCommitRequest_case_2
              solve( !KU( ~pass.2 ) @ #vk.21 )
                case RevealPassword
                solve( !KU( senc(<'1', nonce_s>, 'g'^(~x_c.1*x.1)) ) @ #vk.9 )
                  case ServerCommitResponse
                  solve( !KU( wsenc('g'^x.1, ~pass.1) ) @ #vk.20 )
                    case ClientCommitRequest
                    by solve( !KU( ~x_c.2 ) @ #vk.23 )
                  next
                    case ServerCommitResponse
                    by solve( !KU( ~x_s ) @ #vk.24 )
                  next
                    case c_wsenc
                    solve( !KU( wsenc('g'^x.2, ~pass.2) ) @ #vk.15 )
                      case ClientCommitRequest
                      solve( !KU( ~x.1 ) @ #vk.24 )
                        case ClientConfirmRequest_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_8
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case RevealPassword
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerCommitResponse
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case fresh
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      qed
                    next
                      case ServerCommitResponse
                      solve( !KU( ~x.1 ) @ #vk.23 )
                        case ClientConfirmRequest_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_8
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case RevealPassword
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerCommitResponse
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case fresh
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      qed
                    next
                      case c_wsenc
                      solve( !KU( ~pass.2 ) @ #vk.28 )
                        case RevealPassword
                        solve( !KU( wsenc('g'^x, ~pass) ) @ #vk.12 )
                          case ClientCommitRequest
                          solve( !KU( ~x ) @ #vk.24 )
                            case ClientConfirmRequest_case_1
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_2
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_3
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_4
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_5
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_6
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_7
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_8
                            by solve( splitEqs(1) )
                          next
                            case RevealPassword
                            by solve( splitEqs(1) )
                          next
                            case ServerCommitResponse
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_1
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_2
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_3
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_4
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_5
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_6
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_7
                            by solve( splitEqs(1) )
                          next
                            case fresh
                            by solve( splitEqs(1) )
                          qed
                        next
                          case ServerCommitResponse
                          solve( !KU( ~x ) @ #vk.25 )
                            case ClientConfirmRequest_case_1
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_2
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_3
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_4
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_5
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_6
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_7
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_8
                            by solve( splitEqs(1) )
                          next
                            case RevealPassword
                            by solve( splitEqs(1) )
                          next
                            case ServerCommitResponse
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_1
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_2
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_3
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_4
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_5
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_6
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_7
                            by solve( splitEqs(1) )
                          next
                            case fresh
                            by solve( splitEqs(1) )
                          qed
                        next
                          case c_wsenc
                          solve( !KU( ~pass ) @ #vk.30 )
                            case RevealPassword
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( wsenc('g'^x.1, ~pass.1) ) @ #vk.19 )
                    case ClientCommitRequest
                    by solve( !KU( ~x_c.2 ) @ #vk.22 )
                  next
                    case ServerCommitResponse
                    by solve( !KU( ~x_s ) @ #vk.23 )
                  next
                    case c_wsenc
                    solve( !KU( wsenc('g'^x.2, ~pass.2) ) @ #vk.15 )
                      case ClientCommitRequest
                      solve( !KU( ~x.1 ) @ #vk.23 )
                        case ClientConfirmRequest_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_8
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case RevealPassword
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerCommitResponse
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case fresh
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      qed
                    next
                      case ServerCommitResponse
                      solve( !KU( ~x.1 ) @ #vk.22 )
                        case ClientConfirmRequest_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_8
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case RevealPassword
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerCommitResponse
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case fresh
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      qed
                    next
                      case c_wsenc
                      solve( !KU( ~pass.2 ) @ #vk.28 )
                        case RevealPassword
                        solve( !KU( wsenc('g'^x, ~pass) ) @ #vk.12 )
                          case ClientCommitRequest
                          solve( !KU( ~x ) @ #vk.23 )
                            case ClientConfirmRequest_case_1
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_2
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_3
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_4
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_5
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_6
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_7
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_8
                            by solve( splitEqs(1) )
                          next
                            case RevealPassword
                            by solve( splitEqs(1) )
                          next
                            case ServerCommitResponse
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_1
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_2
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_3
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_4
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_5
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_6
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_7
                            by solve( splitEqs(1) )
                          next
                            case fresh
                            by solve( splitEqs(1) )
                          qed
                        next
                          case ServerCommitResponse
                          solve( !KU( ~x ) @ #vk.24 )
                            case ClientConfirmRequest_case_1
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_2
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_3
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_4
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_5
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_6
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_7
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_8
                            by solve( splitEqs(1) )
                          next
                            case RevealPassword
                            by solve( splitEqs(1) )
                          next
                            case ServerCommitResponse
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_1
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_2
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_3
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_4
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_5
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_6
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_7
                            by solve( splitEqs(1) )
                          next
                            case fresh
                            by solve( splitEqs(1) )
                          qed
                        next
                          case c_wsenc
                          solve( !KU( ~pass ) @ #vk.30 )
                            case RevealPassword
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case ClientCommitRequest_case_3
              solve( !KU( ~pass.3 ) @ #vk.23 )
                case RevealPassword
                by solve( !KU( ~x_c.1 ) @ #vk.25 )
              qed
            next
              case ServerCommitResponse_case_1
              solve( !KU( ~pass.3 ) @ #vk.23 )
                case RevealPassword
                by solve( !KU( ~x_c.1 ) @ #vk.24 )
              qed
            next
              case ServerCommitResponse_case_2
              solve( !KU( ~pass.3 ) @ #vk.23 )
                case RevealPassword
                by solve( !KU( ~x_c.1 ) @ #vk.26 )
              qed
            next
              case c_exp
              by solve( !KU( ~x_c.1 ) @ #vk.23 )
            qed
          next
            case ServerConfirmResponse_case_1
            solve( splitEqs(5) )
              case split_case_1
              by contradiction /* cyclic */
            next
              case split_case_2
              by contradiction /* cyclic */
            qed
          next
            case ServerConfirmResponse_case_2
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_3
            solve( splitEqs(4) )
              case split_case_1
              by contradiction /* cyclic */
            next
              case split_case_2
              solve( splitEqs(1) )
                case split_case_1
                by contradiction /* cyclic */
              next
                case split_case_2
                by contradiction /* cyclic */
              qed
            next
              case split_case_3
              solve( splitEqs(6) )
                case split_case_1
                by contradiction /* cyclic */
              next
                case split_case_2
                by contradiction /* cyclic */
              next
                case split_case_3
                by contradiction /* cyclic */
              qed
            qed
          qed
        next
          case ClientConfirmRequest_case_5
          solve( !KU( ~nonce_p ) @ #vk.17 )
            case ClientConfirmRequest
            solve( !KU( wsenc(x^(x.1*inv(~x_c.1)), ~pass.2) ) @ #vk.18 )
              case c_wsenc
              solve( !KU( ~pass.2 ) @ #vk.22 )
                case RevealPassword
                solve( !KU( x^(x.1*inv(~x_c.1)) ) @ #vk.22 )
                  case ClientCommitRequest_case_1
                  solve( !KU( ~pass.3 ) @ #vk.25 )
                    case RevealPassword
                    by solve( !KU( ~x_c.1 ) @ #vk.27 )
                  qed
                next
                  case ClientCommitRequest_case_2
                  solve( !KU( ~pass.3 ) @ #vk.25 )
                    case RevealPassword
                    by solve( !KU( ~x_c.2 ) @ #vk.29 )
                  qed
                next
                  case ServerCommitResponse_case_1
                  solve( !KU( ~pass.3 ) @ #vk.25 )
                    case RevealPassword
                    by solve( !KU( ~x_c.1 ) @ #vk.28 )
                  qed
                next
                  case ServerCommitResponse_case_2
                  solve( !KU( ~pass.3 ) @ #vk.25 )
                    case RevealPassword
                    by solve( !KU( ~x_c.1 ) @ #vk.30 )
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_c.1 ) @ #vk.27 )
                qed
              qed
            qed
          next
            case ServerConfirmResponse_case_1
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_2
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_3
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_4
            by contradiction /* cyclic */
          qed
        next
          case ClientConfirmRequest_case_6
          solve( !KU( ~nonce_p ) @ #vk.17 )
            case ClientConfirmRequest
            solve( !KU( wsenc(x^inv((~x_c.1*x.1)), ~pass.2) ) @ #vk.18 )
              case c_wsenc
              solve( !KU( ~pass.2 ) @ #vk.22 )
                case RevealPassword
                solve( !KU( wsenc(x^inv((~x_s*x.1)), ~pass.2) ) @ #vk.14 )
                  case c_wsenc
                  solve( !KU( ~pass.2 ) @ #vk.24 )
                    case RevealPassword
                    solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass) ) @ #vk.10 )
                      case c_wsenc
                      solve( !KU( ~pass ) @ #vk.26 )
                        case RevealPassword
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case ServerConfirmResponse
            by contradiction /* cyclic */
          qed
        next
          case ClientConfirmRequest_case_7
          solve( !KU( ~nonce_p ) @ #vk.17 )
            case ClientConfirmRequest
            solve( splitEqs(1) )
              case split_case_1
              solve( splitEqs(2) )
                case split
                solve( !KU( x^(~x_c*inv(x.1)) ) @ #vk.16 )
                  case ClientCommitRequest
                  solve( !KU( ~pass ) @ #vk.21 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_c ) @ #vk.23 )
                qed
              qed
            next
              case split_case_2
              solve( splitEqs(2) )
                case split_case_1
                solve( !KU( x^(~x_s*inv(x.1)) ) @ #vk.16 )
                  case ServerCommitResponse
                  solve( !KU( ~pass.1 ) @ #vk.21 )
                    case RevealPassword
                    solve( !KU( senc(<'1', nonce_s>, 'g'^(~x_s*inv(x))) ) @ #vk.9 )
                      case ServerCommitResponse
                      solve( splitEqs(8) )
                        case split_case_1
                        solve( !KU( wsenc('g'^(~x_s*inv((x*~x_c.1))), ~pass.2) ) @ #vk.19 )
                          case c_wsenc
                          solve( !KU( ~pass.2 ) @ #vk.24 )
                            case RevealPassword
                            solve( !KU( 'g'^(~x_s*inv((x*~x_c.1))) ) @ #vk.24 )
                              case ServerCommitResponse
                              by solve( !KU( ~x_c.1 ) @ #vk.27 )
                            next
                              case c_exp
                              by solve( !KU( ~x_s ) @ #vk.28 )
                            qed
                          qed
                        qed
                      next
                        case split_case_2
                        solve( !KU( wsenc('g'^(~x_s*inv((x*~x_c.1))), ~pass.2) ) @ #vk.20 )
                          case c_wsenc
                          solve( !KU( ~pass.2 ) @ #vk.28 )
                            case RevealPassword
                            solve( !KU( 'g'^(~x_s*inv((x*~x_c.1))) ) @ #vk.28 )
                              case ServerCommitResponse
                              by solve( !KU( ~x_c.1 ) @ #vk.31 )
                            next
                              case c_exp
                              by solve( !KU( ~x_s ) @ #vk.32 )
                            qed
                          qed
                        qed
                      qed
                    next
                      case c_senc
                      solve( !KU( wsenc('g'^(~x_s*inv((x*~x_c.1))), ~pass.2) ) @ #vk.19 )
                        case c_wsenc
                        solve( !KU( ~pass.2 ) @ #vk.28 )
                          case RevealPassword
                          solve( !KU( 'g'^(~x_s*inv((x*~x_c.1))) ) @ #vk.28 )
                            case ServerCommitResponse
                            by solve( !KU( ~x_c.1 ) @ #vk.31 )
                          next
                            case c_exp
                            by solve( !KU( ~x_s ) @ #vk.32 )
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_s ) @ #vk.23 )
                qed
              next
                case split_case_2
                solve( !KU( wsenc(x^(x.1*inv((~x_c.1*x.2))), ~pass.2) ) @ #vk.18 )
                  case c_wsenc
                  solve( !KU( ~pass.2 ) @ #vk.22 )
                    case RevealPassword
                    solve( !KU( x^(x.1*inv((~x_c.1*x.2))) ) @ #vk.22 )
                      case ClientCommitRequest_case_1
                      solve( !KU( ~pass.3 ) @ #vk.25 )
                        case RevealPassword
                        by solve( !KU( ~x_c.1 ) @ #vk.28 )
                      qed
                    next
                      case ClientCommitRequest_case_2
                      solve( !KU( ~pass.3 ) @ #vk.25 )
                        case RevealPassword
                        by solve( !KU( ~x_c.2 ) @ #vk.30 )
                      qed
                    next
                      case ServerCommitResponse_case_1
                      solve( !KU( ~pass.3 ) @ #vk.25 )
                        case RevealPassword
                        by solve( !KU( ~x_c.1 ) @ #vk.29 )
                      qed
                    next
                      case ServerCommitResponse_case_2
                      solve( !KU( ~pass.3 ) @ #vk.25 )
                        case RevealPassword
                        by solve( !KU( ~x_c.1 ) @ #vk.31 )
                      qed
                    next
                      case c_exp
                      by solve( !KU( ~x_c.1 ) @ #vk.28 )
                    qed
                  qed
                qed
              next
                case split_case_3
                solve( !KU( x^(~x_s*x.1*inv(x.2)) ) @ #vk.16 )
                  case ClientCommitRequest_case_1
                  solve( !KU( ~pass.3 ) @ #vk.23 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.25 )
                  qed
                next
                  case ClientCommitRequest_case_2
                  solve( !KU( ~pass.3 ) @ #vk.23 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.25 )
                  qed
                next
                  case ServerCommitResponse_case_1
                  solve( !KU( ~pass.3 ) @ #vk.23 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.26 )
                  qed
                next
                  case ServerCommitResponse_case_2
                  solve( !KU( ~pass.3 ) @ #vk.23 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.26 )
                  qed
                next
                  case ServerCommitResponse_case_3
                  solve( !KU( ~pass.1 ) @ #vk.21 )
                    case RevealPassword
                    solve( !KU( senc(<'1', nonce_s>, 'g'^(~x_s*x*inv(x.1))) ) @ #vk.9 )
                      case ServerCommitResponse
                      solve( !KU( wsenc('g'^(~x_s*x*inv((~x_c.1*x.1))), ~pass.2) ) @ #vk.20 )
                        case c_wsenc
                        solve( !KU( ~pass.2 ) @ #vk.30 )
                          case RevealPassword
                          solve( !KU( 'g'^(~x_s*x*inv((~x_c.1*x.1))) ) @ #vk.30 )
                            case ClientCommitRequest_case_1
                            solve( !KU( ~pass.4 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.37 )
                            qed
                          next
                            case ClientCommitRequest_case_2
                            solve( !KU( ~pass.4 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.37 )
                            qed
                          next
                            case ServerCommitResponse_case_1
                            solve( !KU( ~pass.4 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.38 )
                            qed
                          next
                            case ServerCommitResponse_case_2
                            solve( !KU( ~pass.4 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.38 )
                            qed
                          next
                            case ServerCommitResponse_case_3
                            by solve( !KU( ~x_c.1 ) @ #vk.34 )
                          next
                            case c_exp
                            by solve( !KU( ~x_s ) @ #vk.34 )
                          qed
                        qed
                      qed
                    next
                      case c_senc
                      solve( !KU( wsenc('g'^(~x_s*x*inv((~x_c.1*x.1))), ~pass.2) ) @ #vk.19 )
                        case c_wsenc
                        solve( !KU( ~pass.2 ) @ #vk.30 )
                          case RevealPassword
                          solve( !KU( 'g'^(~x_s*x*inv((~x_c.1*x.1))) ) @ #vk.30 )
                            case ClientCommitRequest_case_1
                            solve( !KU( ~pass.3 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.37 )
                            qed
                          next
                            case ClientCommitRequest_case_2
                            solve( !KU( ~pass.3 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.37 )
                            qed
                          next
                            case ServerCommitResponse_case_1
                            solve( !KU( ~pass.3 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.38 )
                            qed
                          next
                            case ServerCommitResponse_case_2
                            solve( !KU( ~pass.3 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.38 )
                            qed
                          next
                            case ServerCommitResponse_case_3
                            by solve( !KU( ~x_c.1 ) @ #vk.34 )
                          next
                            case c_exp
                            by solve( !KU( ~x_s ) @ #vk.34 )
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_s ) @ #vk.23 )
                qed
              qed
            next
              case split_case_3
              solve( !KU( x^(~x_c*x.1*inv(x.2)) ) @ #vk.16 )
                case ClientCommitRequest_case_1
                solve( !KU( ~pass.3 ) @ #vk.23 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.25 )
                qed
              next
                case ClientCommitRequest_case_2
                solve( !KU( ~pass.3 ) @ #vk.23 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.25 )
                qed
              next
                case ClientCommitRequest_case_3
                solve( !KU( ~pass ) @ #vk.21 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              next
                case ServerCommitResponse_case_1
                solve( !KU( ~pass.3 ) @ #vk.23 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.26 )
                qed
              next
                case ServerCommitResponse_case_2
                solve( !KU( ~pass.3 ) @ #vk.23 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.26 )
                qed
              next
                case c_exp
                by solve( !KU( ~x_c ) @ #vk.23 )
              qed
            qed
          next
            case ServerConfirmResponse_case_1
            solve( splitEqs(1) )
              case split_case_1
              solve( splitEqs(2) )
                case split_case_1
                by contradiction /* cyclic */
              next
                case split_case_2
                by solve( splitEqs(4) )
              next
                case split_case_3
                solve( splitEqs(6) )
                  case split_case_1
                  by contradiction /* cyclic */
                next
                  case split_case_2
                  by contradiction /* cyclic */
                next
                  case split_case_3
                  by contradiction /* cyclic */
                qed
              qed
            next
              case split_case_2
              solve( splitEqs(6) )
                case split_case_1
                by contradiction /* cyclic */
              next
                case split_case_2
                by contradiction /* cyclic */
              qed
            qed
          next
            case ServerConfirmResponse_case_2
            by contradiction /* cyclic */
          qed
        next
          case ServerCommitResponse
          solve( !KU( ~nonce_p ) @ #vk.16 )
            case ClientConfirmRequest
            solve( splitEqs(1) )
              case split_case_1
              solve( !KU( wsenc(key^inv(~x_c), ~pass) ) @ #vk.6 )
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.18 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_2
              solve( splitEqs(2) )
                case split
                solve( !KU( senc(<'1', nonce_s>, y_s^~x_c) ) @ #vk.7 )
                  case ServerCommitResponse
                  solve( splitEqs(7) )
                    case split
                    solve( !KU( wsenc(y_s, ~pass) ) @ #vk.7 )
                      case ClientCommitRequest
                      by contradiction /* non-normal terms */
                    next
                      case c_wsenc
                      solve( !KU( ~pass ) @ #vk.21 )
                        case RevealPassword
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( wsenc(y_s, ~pass) ) @ #vk.7 )
                    case ClientCommitRequest
                    by contradiction /* non-normal terms */
                  next
                    case c_wsenc
                    solve( !KU( ~pass ) @ #vk.21 )
                      case RevealPassword
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case split_case_3
              solve( splitEqs(2) )
                case split
                solve( !KU( senc(<'1', nonce_s>, wsdec(scr_0, ~pass)^~x_c) ) @ #vk.7 )
                  case ServerCommitResponse
                  solve( splitEqs(7) )
                    case split
                    solve( !KU( wsdec(scr_0, ~pass)^~x_c ) @ #vk.16 )
                      case c_exp
                      by solve( !KU( ~x_c ) @ #vk.21 )
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( wsdec(scr_0, ~pass)^~x_c ) @ #vk.15 )
                    case c_exp
                    by solve( !KU( ~x_c ) @ #vk.21 )
                  qed
                qed
              qed
            next
              case split_case_4
              solve( !KU( wsenc(x^(x.1*inv(~x_c)), ~pass) ) @ #vk.6 )
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.18 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_5
              solve( !KU( x^(~x_c*x.1) ) @ #vk.15 )
                case ClientCommitRequest_case_1
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.20 )
                qed
              next
                case ClientCommitRequest_case_2
                solve( !KU( ~pass ) @ #vk.17 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              next
                case ClientCommitRequest_case_3
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.21 )
                qed
              next
                case ServerCommitResponse_case_1
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.20 )
                qed
              next
                case ServerCommitResponse_case_2
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.22 )
                qed
              next
                case c_exp
                by solve( !KU( ~x_c ) @ #vk.19 )
              qed
            next
              case split_case_6
              solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass) ) @ #vk.6 )
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.18 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_7
              solve( splitEqs(2) )
                case split_case_1
                solve( !KU( x^(~x_s*inv(x.1)) ) @ #vk.15 )
                  case ServerCommitResponse
                  solve( !KU( ~pass.1 ) @ #vk.17 )
                    case RevealPassword
                    solve( !KU( senc(<'1', nonce_s>, 'g'^(~x_s*inv(x))) ) @ #vk.9 )
                      case ServerCommitResponse
                      solve( splitEqs(8) )
                        case split_case_1
                        solve( !KU( wsenc('g'^(~x_s*inv((~x_c*x))), ~pass) ) @ #vk.9 )
                          case c_wsenc
                          solve( !KU( ~pass ) @ #vk.21 )
                            case RevealPassword
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case split_case_2
                        solve( !KU( wsenc('g'^(~x_s*inv((~x_c*x))), ~pass) ) @ #vk.9 )
                          case c_wsenc
                          solve( !KU( ~pass ) @ #vk.24 )
                            case RevealPassword
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    next
                      case c_senc
                      solve( !KU( wsenc('g'^(~x_s*inv((~x_c*x))), ~pass) ) @ #vk.9 )
                        case c_wsenc
                        solve( !KU( ~pass ) @ #vk.24 )
                          case RevealPassword
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_s ) @ #vk.19 )
                qed
              next
                case split_case_2
                solve( !KU( wsenc(x^(x.1*inv((~x_c*x.2))), ~pass) ) @ #vk.6 )
                  case c_wsenc
                  solve( !KU( ~pass ) @ #vk.18 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case split_case_3
                solve( !KU( x^(~x_s*x.1*inv(x.2)) ) @ #vk.15 )
                  case ClientCommitRequest_case_1
                  solve( !KU( ~pass.2 ) @ #vk.19 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.21 )
                  qed
                next
                  case ClientCommitRequest_case_2
                  solve( !KU( ~pass.2 ) @ #vk.19 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.21 )
                  qed
                next
                  case ServerCommitResponse_case_1
                  solve( !KU( ~pass.2 ) @ #vk.19 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.22 )
                  qed
                next
                  case ServerCommitResponse_case_2
                  solve( !KU( ~pass.2 ) @ #vk.19 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.22 )
                  qed
                next
                  case ServerCommitResponse_case_3
                  solve( !KU( ~pass.1 ) @ #vk.17 )
                    case RevealPassword
                    solve( !KU( senc(<'1', nonce_s>, 'g'^(~x_s*x*inv(x.1))) ) @ #vk.9 )
                      case ServerCommitResponse
                      solve( !KU( wsenc('g'^(~x_s*x*inv((~x_c*x.1))), ~pass) ) @ #vk.9 )
                        case c_wsenc
                        solve( !KU( ~pass ) @ #vk.26 )
                          case RevealPassword
                          by contradiction /* from formulas */
                        qed
                      qed
                    next
                      case c_senc
                      solve( !KU( wsenc('g'^(~x_s*x*inv((~x_c*x.1))), ~pass) ) @ #vk.9 )
                        case c_wsenc
                        solve( !KU( ~pass ) @ #vk.26 )
                          case RevealPassword
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_s ) @ #vk.19 )
                qed
              qed
            qed
          next
            case ServerConfirmResponse_case_1
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_2
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_3
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_4
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_5
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_6
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_7
            by contradiction /* cyclic */
          qed
        qed
      qed
    next
      case c_senc
      solve( !KU( ~nonce_p ) @ #vk.9 )
        case ClientConfirmRequest
        solve( splitEqs(1) )
          case split_case_1
          solve( !KU( wsenc(key^inv(~x_c), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_2
          solve( !KU( senc(<'1', nonce_s>, y_s^~x_c) ) @ #vk.4 )
            case ServerCommitResponse
            solve( splitEqs(4) )
              case split
              solve( !KU( wsenc(y_s, ~pass) ) @ #vk.4 )
                case ClientCommitRequest
                by contradiction /* non-normal terms */
              next
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.15 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case c_senc
            solve( !KU( wsenc(y_s, ~pass) ) @ #vk.4 )
              case ClientCommitRequest
              by contradiction /* non-normal terms */
            next
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.14 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case split_case_3
          solve( !KU( senc(<'1', nonce_s>, wsdec(scr_0, ~pass)^~x_c) ) @ #vk.4 )
            case ServerCommitResponse
            solve( splitEqs(4) )
              case split
              solve( !KU( wsdec(scr_0, ~pass)^~x_c ) @ #vk.8 )
                case c_exp
                by solve( !KU( ~x_c ) @ #vk.15 )
              qed
            qed
          next
            case c_senc
            solve( !KU( wsdec(scr_0, ~pass)^~x_c ) @ #vk.8 )
              case c_exp
              by solve( !KU( ~x_c ) @ #vk.14 )
            qed
          qed
        next
          case split_case_4
          solve( !KU( wsenc(x^(x.1*inv(~x_c)), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_5
          solve( !KU( x^(~x_c*x.1) ) @ #vk.8 )
            case ClientCommitRequest_case_1
            solve( !KU( ~pass.1 ) @ #vk.12 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.13 )
            qed
          next
            case ClientCommitRequest_case_2
            solve( !KU( ~pass ) @ #vk.10 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case ClientCommitRequest_case_3
            solve( !KU( ~pass.1 ) @ #vk.12 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.14 )
            qed
          next
            case ServerCommitResponse_case_1
            solve( !KU( ~pass.1 ) @ #vk.11 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.12 )
            qed
          next
            case ServerCommitResponse_case_2
            solve( !KU( ~pass.1 ) @ #vk.11 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.16 )
            qed
          next
            case c_exp
            by solve( !KU( ~x_c ) @ #vk.12 )
          qed
        next
          case split_case_6
          solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_7
          solve( !KU( wsenc(x^(x.1*inv((~x_c*x.2))), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case ServerConfirmResponse_case_1
        solve( !KU( wsenc(key^inv(~x_s), ~pass.1) ) @ #vk.11 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.16 )
            case RevealPassword
            solve( !KU( wsenc(key^inv(~x_c), ~pass) ) @ #vk.5 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.18 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case ServerConfirmResponse_case_2
        solve( splitEqs(1) )
          case split
          solve( !KU( y_c^~x_s ) @ #vk.8 )
            case ServerCommitResponse
            solve( !KU( ~pass.1 ) @ #vk.15 )
              case RevealPassword
              solve( !KU( wsenc('g', ~pass.1) ) @ #vk.12 )
                case c_wsenc
                solve( !KU( wsenc('g'^(~x_s*inv(~x_c)), ~pass) ) @ #vk.6 )
                  case c_wsenc
                  solve( !KU( ~pass ) @ #vk.18 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          next
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.16 )
          qed
        qed
      next
        case ServerConfirmResponse_case_3
        solve( !KU( x^(~x_s*x.2) ) @ #vk.8 )
          case ClientCommitRequest_case_1
          solve( !KU( ~pass.2 ) @ #vk.17 )
            case RevealPassword
            by solve( !KU( ~x_s ) @ #vk.18 )
          qed
        next
          case ClientCommitRequest_case_2
          solve( !KU( ~pass.2 ) @ #vk.17 )
            case RevealPassword
            by solve( !KU( ~x_s ) @ #vk.19 )
          qed
        next
          case ServerCommitResponse_case_1
          solve( !KU( ~pass.2 ) @ #vk.17 )
            case RevealPassword
            by solve( !KU( ~x_s ) @ #vk.18 )
          qed
        next
          case ServerCommitResponse_case_2
          solve( !KU( ~pass.1 ) @ #vk.15 )
            case RevealPassword
            solve( !KU( wsenc('g'^x.1, ~pass.1) ) @ #vk.12 )
              case ClientCommitRequest
              by solve( !KU( ~x_c.1 ) @ #vk.17 )
            next
              case ServerCommitResponse
              by solve( !KU( ~x_s.1 ) @ #vk.16 )
            next
              case c_wsenc
              solve( !KU( wsenc('g'^x, ~pass) ) @ #vk.6 )
                case ClientCommitRequest
                solve( !KU( ~x ) @ #vk.16 )
                  case ClientConfirmRequest_case_1
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_2
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_3
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_4
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_5
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_6
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_7
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_8
                  by solve( splitEqs(1) )
                next
                  case RevealPassword
                  by solve( splitEqs(1) )
                next
                  case ServerCommitResponse
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_1
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_2
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_3
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_4
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_5
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_6
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_7
                  by solve( splitEqs(1) )
                next
                  case fresh
                  by solve( splitEqs(1) )
                qed
              next
                case ServerCommitResponse
                solve( !KU( ~x ) @ #vk.17 )
                  case ClientConfirmRequest_case_1
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_2
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_3
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_4
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_5
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_6
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_7
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_8
                  by solve( splitEqs(1) )
                next
                  case RevealPassword
                  by solve( splitEqs(1) )
                next
                  case ServerCommitResponse
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_1
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_2
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_3
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_4
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_5
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_6
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_7
                  by solve( splitEqs(1) )
                next
                  case fresh
                  by solve( splitEqs(1) )
                qed
              next
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.19 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case ServerCommitResponse_case_3
          solve( !KU( ~pass.2 ) @ #vk.17 )
            case RevealPassword
            by solve( !KU( ~x_s ) @ #vk.20 )
          qed
        next
          case c_exp
          by solve( !KU( ~x_s ) @ #vk.17 )
        qed
      next
        case ServerConfirmResponse_case_4
        solve( !KU( wsenc(x^(x.1*inv(~x_s)), ~pass.1) ) @ #vk.11 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.16 )
            case RevealPassword
            solve( !KU( x^(x.1*inv(~x_s)) ) @ #vk.16 )
              case ClientCommitRequest_case_1
              solve( !KU( ~pass.2 ) @ #vk.19 )
                case RevealPassword
                by solve( !KU( ~x_s ) @ #vk.21 )
              qed
            next
              case ClientCommitRequest_case_2
              solve( !KU( ~pass.2 ) @ #vk.19 )
                case RevealPassword
                by solve( !KU( ~x_s ) @ #vk.23 )
              qed
            next
              case ServerCommitResponse_case_1
              solve( !KU( ~pass.2 ) @ #vk.19 )
                case RevealPassword
                by solve( !KU( ~x_s ) @ #vk.22 )
              qed
            next
              case ServerCommitResponse_case_2
              solve( !KU( ~pass.2 ) @ #vk.19 )
                case RevealPassword
                by solve( !KU( ~x_s.1 ) @ #vk.24 )
              qed
            next
              case c_exp
              by solve( !KU( ~x_s ) @ #vk.21 )
            qed
          qed
        qed
      next
        case ServerConfirmResponse_case_5
        solve( !KU( wsenc(x^inv((~x_s*x.1)), ~pass.1) ) @ #vk.11 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.16 )
            case RevealPassword
            solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass) ) @ #vk.5 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.18 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case ServerConfirmResponse_case_6
        solve( splitEqs(1) )
          case split_case_1
          solve( !KU( x^(~x_c*inv(x.1)) ) @ #vk.8 )
            case ClientCommitRequest
            solve( !KU( ~pass ) @ #vk.15 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case c_exp
            by solve( !KU( ~x_c ) @ #vk.17 )
          qed
        next
          case split_case_2
          solve( !KU( wsenc(x^(x.1*inv((~x_s*x.2))), ~pass.1) ) @ #vk.11 )
            case c_wsenc
            solve( !KU( ~pass.1 ) @ #vk.16 )
              case RevealPassword
              solve( !KU( x^(x.1*inv((~x_s*x.2))) ) @ #vk.16 )
                case ClientCommitRequest_case_1
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_s ) @ #vk.22 )
                qed
              next
                case ClientCommitRequest_case_2
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_s ) @ #vk.24 )
                qed
              next
                case ServerCommitResponse_case_1
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_s ) @ #vk.23 )
                qed
              next
                case ServerCommitResponse_case_2
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_s.1 ) @ #vk.25 )
                qed
              next
                case c_exp
                by solve( !KU( ~x_s ) @ #vk.22 )
              qed
            qed
          qed
        next
          case split_case_3
          solve( !KU( x^(~x_c*x.1*inv(x.2)) ) @ #vk.8 )
            case ClientCommitRequest_case_1
            solve( !KU( ~pass.2 ) @ #vk.17 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.19 )
            qed
          next
            case ClientCommitRequest_case_2
            solve( !KU( ~pass.2 ) @ #vk.17 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.19 )
            qed
          next
            case ClientCommitRequest_case_3
            solve( !KU( ~pass ) @ #vk.15 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case ServerCommitResponse_case_1
            solve( !KU( ~pass.2 ) @ #vk.17 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.20 )
            qed
          next
            case ServerCommitResponse_case_2
            solve( !KU( ~pass.2 ) @ #vk.17 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.20 )
            qed
          next
            case c_exp
            by solve( !KU( ~x_c ) @ #vk.17 )
          qed
        qed
      next
        case ServerConfirmResponse_case_7
        solve( splitEqs(1) )
          case split
          solve( !KU( wsdec(client_commit_request, ~pass.1)^~x_s ) @ #vk.8 )
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.16 )
          qed
        qed
      qed
    qed
  qed
next
  case ServerConfirmResponse
  solve( StateServerCommitResponse( tid, A, B, pass, x_s, y_s, nonce_s,
                                    key, y_c
         ) ▶₀ #i )
    case ServerCommitResponse
    solve( !KU( senc(<'2', ~nonce_s, nonce_p>, key) ) @ #vk )
      case ClientConfirmRequest
      solve( splitEqs(1) )
        case split_case_1
        solve( splitEqs(2) )
          case split
          solve( !KU( wsenc(wsdec(client_commit_request, ~pass)^(~x_s*inv(~x_c)),
                            ~pass.1)
                 ) @ #vk.5 )
            case c_wsenc
            solve( !KU( ~pass.1 ) @ #vk.11 )
              case RevealPassword
              solve( !KU( wsdec(client_commit_request, ~pass)^(~x_s*inv(~x_c))
                     ) @ #vk.11 )
                case c_exp
                by solve( !KU( ~x_s ) @ #vk.14 )
              qed
            qed
          qed
        qed
      next
        case split_case_2
        solve( splitEqs(2) )
          case split
          solve( !KU( wsenc(y_c, ~pass) ) @ #vk.1 )
            case ClientCommitRequest
            by contradiction /* non-normal terms */
          next
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case split_case_3
        solve( !KU( wsenc(key^inv(~x_s), ~pass) ) @ #vk.1 )
          case c_wsenc
          solve( !KU( ~pass ) @ #vk.11 )
            case RevealPassword
            by contradiction /* from formulas */
          qed
        qed
      next
        case split_case_4
        solve( !KU( wsenc(x^x.1, ~pass) ) @ #vk.1 )
          case ClientCommitRequest
          solve( splitEqs(2) )
            case split_case_1
            by contradiction /* from formulas */
          next
            case split_case_2
            solve( !KU( wsenc('g'^(~x_c*~x_s*inv(~x_c.1)), ~pass.1) ) @ #vk.5 )
              case c_wsenc
              solve( !KU( ~pass.1 ) @ #vk.13 )
                case RevealPassword
                solve( !KU( 'g'^(~x_c*~x_s*inv(~x_c.1)) ) @ #vk.13 )
                  case ClientCommitRequest
                  solve( !KU( ~pass ) @ #vk.14 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                next
                  case ServerCommitResponse
                  solve( !KU( ~pass ) @ #vk.14 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_c ) @ #vk.16 )
                qed
              qed
            qed
          qed
        next
          case ServerCommitResponse
          solve( splitEqs(2) )
            case split
            solve( !KU( wsenc('g'^(~x_s*~x_s.1*inv(~x_c)), ~pass.1) ) @ #vk.5 )
              case c_wsenc
              solve( !KU( ~pass.1 ) @ #vk.12 )
                case RevealPassword
                solve( !KU( 'g'^(~x_s*~x_s.1*inv(~x_c)) ) @ #vk.12 )
                  case ServerCommitResponse_case_1
                  solve( !KU( ~pass ) @ #vk.13 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                next
                  case ServerCommitResponse_case_2
                  solve( !KU( ~pass ) @ #vk.13 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_s ) @ #vk.15 )
                qed
              qed
            qed
          qed
        next
          case c_wsenc
          solve( !KU( ~pass ) @ #vk.11 )
            case RevealPassword
            by contradiction /* from formulas */
          qed
        qed
      next
        case split_case_5
        solve( !KU( wsenc(x^inv((~x_s*x.1)), ~pass) ) @ #vk.1 )
          case c_wsenc
          solve( !KU( ~pass ) @ #vk.11 )
            case RevealPassword
            by contradiction /* from formulas */
          qed
        qed
      next
        case split_case_6
        solve( !KU( wsenc(x^(x.1*inv(~x_s)), ~pass) ) @ #vk.1 )
          case c_wsenc
          solve( !KU( ~pass ) @ #vk.11 )
            case RevealPassword
            by contradiction /* from formulas */
          qed
        qed
      next
        case split_case_7
        solve( splitEqs(2) )
          case split_case_1
          solve( !KU( wsenc(x^(~x_c*inv((~x_s*x.1))), ~pass) ) @ #vk.1 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_2
          solve( !KU( wsenc(x^(x.1*inv((~x_s*x.2))), ~pass) ) @ #vk.1 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_3
          solve( !KU( wsenc(x^(~x_c*x.1*inv((~x_s*x.2))), ~pass) ) @ #vk.1 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    next
      case c_senc
      solve( !KU( ~nonce_s ) @ #vk.9 )
        case ClientConfirmRequest_case_1
        solve( splitEqs(1) )
          case split
          solve( !KU( wsdec(scr_0, ~pass.1)^~x_c ) @ #vk.8 )
            case c_exp
            by solve( !KU( ~x_c ) @ #vk.17 )
          qed
        qed
      next
        case ClientConfirmRequest_case_2
        solve( splitEqs(1) )
          case split
          solve( !KU( wsenc(z, ~pass.1) ) @ #vk.11 )
            case ClientCommitRequest
            by contradiction /* non-normal terms */
          next
            case c_wsenc
            solve( !KU( ~pass.1 ) @ #vk.17 )
              case RevealPassword
              solve( !KU( z^~x_c ) @ #vk.10 )
                case ClientCommitRequest
                solve( !KU( wsenc('g'^(~x_c*inv(~x_s)), ~pass) ) @ #vk.7 )
                  case c_wsenc
                  solve( !KU( ~pass ) @ #vk.19 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case c_exp
                by solve( !KU( ~x_c ) @ #vk.18 )
              qed
            qed
          qed
        qed
      next
        case ClientConfirmRequest_case_3
        solve( !KU( wsenc(key^inv(~x_c), ~pass.1) ) @ #vk.11 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.17 )
            case RevealPassword
            solve( !KU( wsenc(key^inv(~x_s), ~pass) ) @ #vk.6 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.19 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case ClientConfirmRequest_case_4
        solve( !KU( x^(~x_c*x.1) ) @ #vk.7 )
          case ClientCommitRequest_case_1
          solve( !KU( ~pass.2 ) @ #vk.18 )
            case RevealPassword
            by solve( !KU( ~x_c ) @ #vk.19 )
          qed
        next
          case ClientCommitRequest_case_2
          solve( !KU( ~pass.1 ) @ #vk.16 )
            case RevealPassword
            solve( !KU( wsenc('g'^x, ~pass.1) ) @ #vk.12 )
              case ClientCommitRequest
              by solve( !KU( ~x_c.1 ) @ #vk.17 )
            next
              case ServerCommitResponse
              by solve( !KU( ~x_s.1 ) @ #vk.18 )
            next
              case c_wsenc
              solve( !KU( wsenc('g'^x.1, ~pass) ) @ #vk.7 )
                case ClientCommitRequest
                solve( !KU( ~x ) @ #vk.18 )
                  case ClientConfirmRequest_case_1
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_2
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_3
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_4
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_5
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_6
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_7
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_8
                  by solve( splitEqs(1) )
                next
                  case RevealPassword
                  by solve( splitEqs(1) )
                next
                  case ServerCommitResponse
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_1
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_2
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_3
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_4
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_5
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_6
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_7
                  by solve( splitEqs(1) )
                next
                  case fresh
                  by solve( splitEqs(1) )
                qed
              next
                case ServerCommitResponse
                solve( !KU( ~x ) @ #vk.17 )
                  case ClientConfirmRequest_case_1
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_2
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_3
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_4
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_5
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_6
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_7
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_8
                  by solve( splitEqs(1) )
                next
                  case RevealPassword
                  by solve( splitEqs(1) )
                next
                  case ServerCommitResponse
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_1
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_2
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_3
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_4
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_5
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_6
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_7
                  by solve( splitEqs(1) )
                next
                  case fresh
                  by solve( splitEqs(1) )
                qed
              next
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.20 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case ClientCommitRequest_case_3
          solve( !KU( ~pass.2 ) @ #vk.18 )
            case RevealPassword
            by solve( !KU( ~x_c ) @ #vk.20 )
          qed
        next
          case ServerCommitResponse_case_1
          solve( !KU( ~pass.2 ) @ #vk.18 )
            case RevealPassword
            by solve( !KU( ~x_c ) @ #vk.19 )
          qed
        next
          case ServerCommitResponse_case_2
          solve( !KU( ~pass.2 ) @ #vk.18 )
            case RevealPassword
            by solve( !KU( ~x_c ) @ #vk.21 )
          qed
        next
          case c_exp
          by solve( !KU( ~x_c ) @ #vk.18 )
        qed
      next
        case ClientConfirmRequest_case_5
        solve( !KU( wsenc(x^(x.1*inv(~x_c)), ~pass.1) ) @ #vk.11 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.17 )
            case RevealPassword
            solve( !KU( x^(x.1*inv(~x_c)) ) @ #vk.17 )
              case ClientCommitRequest_case_1
              solve( !KU( ~pass.2 ) @ #vk.20 )
                case RevealPassword
                by solve( !KU( ~x_c ) @ #vk.22 )
              qed
            next
              case ClientCommitRequest_case_2
              solve( !KU( ~pass.2 ) @ #vk.20 )
                case RevealPassword
                by solve( !KU( ~x_c.1 ) @ #vk.24 )
              qed
            next
              case ServerCommitResponse_case_1
              solve( !KU( ~pass.2 ) @ #vk.20 )
                case RevealPassword
                by solve( !KU( ~x_c ) @ #vk.23 )
              qed
            next
              case ServerCommitResponse_case_2
              solve( !KU( ~pass.2 ) @ #vk.20 )
                case RevealPassword
                by solve( !KU( ~x_c ) @ #vk.25 )
              qed
            next
              case c_exp
              by solve( !KU( ~x_c ) @ #vk.22 )
            qed
          qed
        qed
      next
        case ClientConfirmRequest_case_6
        solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass.1) ) @ #vk.11 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.17 )
            case RevealPassword
            solve( !KU( wsenc(x^inv((~x_s*x.1)), ~pass) ) @ #vk.6 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.19 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case ClientConfirmRequest_case_7
        solve( splitEqs(1) )
          case split_case_1
          solve( !KU( x^(~x_s*inv(x.1)) ) @ #vk.8 )
            case ServerCommitResponse
            solve( !KU( ~pass ) @ #vk.16 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.18 )
          qed
        next
          case split_case_2
          solve( !KU( wsenc(x^(x.1*inv((~x_c*x.2))), ~pass.1) ) @ #vk.11 )
            case c_wsenc
            solve( !KU( ~pass.1 ) @ #vk.17 )
              case RevealPassword
              solve( !KU( x^(x.1*inv((~x_c*x.2))) ) @ #vk.17 )
                case ClientCommitRequest_case_1
                solve( !KU( ~pass.2 ) @ #vk.20 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.23 )
                qed
              next
                case ClientCommitRequest_case_2
                solve( !KU( ~pass.2 ) @ #vk.20 )
                  case RevealPassword
                  by solve( !KU( ~x_c.1 ) @ #vk.25 )
                qed
              next
                case ServerCommitResponse_case_1
                solve( !KU( ~pass.2 ) @ #vk.20 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.24 )
                qed
              next
                case ServerCommitResponse_case_2
                solve( !KU( ~pass.2 ) @ #vk.20 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.26 )
                qed
              next
                case c_exp
                by solve( !KU( ~x_c ) @ #vk.23 )
              qed
            qed
          qed
        next
          case split_case_3
          solve( !KU( x^(~x_s*x.1*inv(x.2)) ) @ #vk.8 )
            case ClientCommitRequest_case_1
            solve( !KU( ~pass.2 ) @ #vk.18 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.20 )
            qed
          next
            case ClientCommitRequest_case_2
            solve( !KU( ~pass.2 ) @ #vk.18 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.20 )
            qed
          next
            case ServerCommitResponse_case_1
            solve( !KU( ~pass.2 ) @ #vk.18 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.21 )
            qed
          next
            case ServerCommitResponse_case_2
            solve( !KU( ~pass.2 ) @ #vk.18 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.21 )
            qed
          next
            case ServerCommitResponse_case_3
            solve( !KU( ~pass ) @ #vk.16 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.18 )
          qed
        qed
      next
        case ServerCommitResponse
        solve( splitEqs(1) )
          case split_case_1
          solve( !KU( wsdec(client_commit_request, ~pass)^~x_s ) @ #vk.8 )
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.12 )
          qed
        next
          case split_case_2
          solve( !KU( wsenc(y_c, ~pass) ) @ #vk.3 )
            case ClientCommitRequest
            by contradiction /* non-normal terms */
          next
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_3
          solve( !KU( wsenc(key^inv(~x_s), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_4
          solve( !KU( x^(~x_s*x.1) ) @ #vk.8 )
            case ClientCommitRequest_case_1
            solve( !KU( ~pass.1 ) @ #vk.14 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.15 )
            qed
          next
            case ClientCommitRequest_case_2
            solve( !KU( ~pass.1 ) @ #vk.14 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.16 )
            qed
          next
            case ServerCommitResponse_case_1
            solve( !KU( ~pass.1 ) @ #vk.13 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.14 )
            qed
          next
            case ServerCommitResponse_case_2
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case ServerCommitResponse_case_3
            solve( !KU( ~pass.1 ) @ #vk.13 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.16 )
            qed
          next
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.13 )
          qed
        next
          case split_case_5
          solve( !KU( wsenc(x^inv((~x_s*x.1)), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_6
          solve( !KU( wsenc(x^(x.1*inv(~x_s)), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_7
          solve( !KU( wsenc(x^(x.1*inv((~x_s*x.2))), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma NonInjectiveAgreement:
  all-traces
  "∀ A B t #i.
    (Commit( A, B, t ) @ #i) ⇒
    (((∃ #j. Running( A, B, t ) @ #j) ∨ (∃ #j. RevAgentPass( A ) @ #j)) ∨
     (∃ #j. RevAgentPass( B ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ A B t #i.
  (Commit( A, B, t ) @ #i)
 ∧
  (∀ #j. (Running( A, B, t ) @ #j) ⇒ ⊥) ∧
  (∀ #j. (RevAgentPass( A ) @ #j) ⇒ ⊥) ∧
  (∀ #j. (RevAgentPass( B ) @ #j) ⇒ ⊥)"
*/
simplify
solve( Commit( A, B, t ) @ #i )
  case ClientSessionEstablishment
  solve( StateClientConfirmRequest_1( tid, A, B, pass, x_c, y_c, scr_0,
                                      y_s, key, nonce_p, nonce_s, scr_1
         ) ▶₀ #i )
    case ClientConfirmRequest
    solve( !KU( senc(<'3', ~nonce_p>, key) ) @ #vk )
      case ServerConfirmResponse
      solve( !KU( senc(<'2', ~nonce_s.1, ~nonce_p>, key) ) @ #vk.6 )
        case ClientConfirmRequest
        solve( splitEqs(1) )
          case split_case_1
          solve( !KU( wsenc(key^inv(~x_c), ~pass) ) @ #vk.2 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_2
          solve( splitEqs(2) )
            case split
            solve( !KU( wsenc(y_s, ~pass) ) @ #vk.2 )
              case ClientCommitRequest
              by contradiction /* non-normal terms */
            next
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.12 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case split_case_3
          solve( splitEqs(2) )
            case split
            solve( !KU( wsenc(wsdec(scr_0, ~pass)^(~x_c*inv(~x_s)), ~pass.1)
                   ) @ #vk.7 )
              case c_wsenc
              solve( !KU( ~pass.1 ) @ #vk.12 )
                case RevealPassword
                solve( !KU( wsdec(scr_0, ~pass)^(~x_c*inv(~x_s)) ) @ #vk.12 )
                  case c_exp
                  by solve( !KU( ~x_c ) @ #vk.15 )
                qed
              qed
            qed
          qed
        next
          case split_case_4
          solve( !KU( wsenc(x^(x.1*inv(~x_c)), ~pass) ) @ #vk.2 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_5
          solve( !KU( wsenc(x^x.1, ~pass) ) @ #vk.2 )
            case ClientCommitRequest
            solve( splitEqs(2) )
              case split
              solve( !KU( wsenc('g'^(~x_c*~x_c.1*inv(~x_s)), ~pass.1) ) @ #vk.7 )
                case c_wsenc
                solve( !KU( ~pass.1 ) @ #vk.12 )
                  case RevealPassword
                  solve( !KU( 'g'^(~x_c*~x_c.1*inv(~x_s)) ) @ #vk.12 )
                    case ClientCommitRequest_case_1
                    solve( !KU( ~pass ) @ #vk.13 )
                      case RevealPassword
                      by contradiction /* from formulas */
                    qed
                  next
                    case ClientCommitRequest_case_2
                    solve( !KU( ~pass ) @ #vk.13 )
                      case RevealPassword
                      by contradiction /* from formulas */
                    qed
                  next
                    case c_exp
                    by solve( !KU( ~x_c ) @ #vk.15 )
                  qed
                qed
              qed
            qed
          next
            case ServerCommitResponse
            solve( splitEqs(2) )
              case split_case_1
              by contradiction /* from formulas */
            next
              case split_case_2
              solve( !KU( wsenc('g'^(~x_c*~x_s*inv(~x_s.1)), ~pass.1) ) @ #vk.7 )
                case c_wsenc
                solve( !KU( ~pass.1 ) @ #vk.15 )
                  case RevealPassword
                  solve( !KU( 'g'^(~x_c*~x_s*inv(~x_s.1)) ) @ #vk.15 )
                    case ClientCommitRequest
                    solve( !KU( ~pass ) @ #vk.16 )
                      case RevealPassword
                      by contradiction /* from formulas */
                    qed
                  next
                    case ServerCommitResponse
                    solve( !KU( ~pass ) @ #vk.16 )
                      case RevealPassword
                      by contradiction /* from formulas */
                    qed
                  next
                    case c_exp
                    by solve( !KU( ~x_c ) @ #vk.18 )
                  qed
                qed
              qed
            qed
          next
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_6
          solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass) ) @ #vk.2 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_7
          solve( splitEqs(2) )
            case split_case_1
            solve( !KU( wsenc(x^(~x_s*inv((~x_c*x.1))), ~pass) ) @ #vk.2 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.12 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_2
            solve( !KU( wsenc(x^(x.1*inv((~x_c*x.2))), ~pass) ) @ #vk.2 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.12 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_3
            solve( !KU( wsenc(x^(~x_s*x.1*inv((~x_c*x.2))), ~pass) ) @ #vk.2 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.12 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case c_senc
        solve( !KU( ~nonce_s.1 ) @ #vk.15 )
          case ClientConfirmRequest_case_1
          solve( !KU( ~nonce_p ) @ #vk.17 )
            case ClientConfirmRequest
            solve( splitEqs(1) )
              case split_case_1
              solve( splitEqs(2) )
                case split
                solve( !KU( wsdec(scr_0, ~pass)^~x_c ) @ #vk.15 )
                  case c_exp
                  by solve( !KU( ~x_c ) @ #vk.18 )
                qed
              qed
            next
              case split_case_2
              solve( splitEqs(2) )
                case split
                solve( !KU( senc(<'1', nonce_s>, wsdec(scr_0, ~pass.1)^~x_c.1)
                       ) @ #vk.7 )
                  case ServerCommitResponse
                  solve( splitEqs(7) )
                    case split
                    solve( !KU( wsdec(scr_0, ~pass.1)^~x_c.1 ) @ #vk.17 )
                      case c_exp
                      by solve( !KU( ~x_c.1 ) @ #vk.25 )
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( wsdec(scr_0, ~pass.1)^~x_c.1 ) @ #vk.16 )
                    case c_exp
                    by solve( !KU( ~x_c.1 ) @ #vk.25 )
                  qed
                qed
              qed
            qed
          next
            case ServerConfirmResponse
            by contradiction /* cyclic */
          qed
        next
          case ClientConfirmRequest_case_2
          solve( !KU( ~nonce_p ) @ #vk.17 )
            case ClientConfirmRequest
            solve( splitEqs(1) )
              case split_case_1
              solve( splitEqs(2) )
                case split
                solve( !KU( wsenc(y_s, ~pass) ) @ #vk.6 )
                  case ClientCommitRequest
                  by contradiction /* non-normal terms */
                next
                  case c_wsenc
                  solve( !KU( ~pass ) @ #vk.18 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case split_case_2
              solve( splitEqs(2) )
                case split
                solve( !KU( senc(<'1', nonce_s>, z^~x_c.1) ) @ #vk.7 )
                  case ServerCommitResponse
                  solve( splitEqs(7) )
                    case split
                    solve( !KU( wsenc(z, ~pass.2) ) @ #vk.19 )
                      case ClientCommitRequest
                      by contradiction /* non-normal terms */
                    next
                      case c_wsenc
                      solve( !KU( ~pass.2 ) @ #vk.25 )
                        case RevealPassword
                        solve( !KU( z^~x_c.1 ) @ #vk.19 )
                          case ClientCommitRequest
                          solve( !KU( wsenc('g'^(~x_c.1*inv(~x_c)), ~pass) ) @ #vk.10 )
                            case c_wsenc
                            solve( !KU( ~pass ) @ #vk.27 )
                              case RevealPassword
                              by contradiction /* from formulas */
                            qed
                          qed
                        next
                          case c_exp
                          by solve( !KU( ~x_c.1 ) @ #vk.26 )
                        qed
                      qed
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( wsenc(z, ~pass.2) ) @ #vk.18 )
                    case ClientCommitRequest
                    by contradiction /* non-normal terms */
                  next
                    case c_wsenc
                    solve( !KU( ~pass.2 ) @ #vk.25 )
                      case RevealPassword
                      solve( !KU( z^~x_c.1 ) @ #vk.18 )
                        case ClientCommitRequest
                        solve( !KU( wsenc('g'^(~x_c.1*inv(~x_c)), ~pass) ) @ #vk.10 )
                          case c_wsenc
                          solve( !KU( ~pass ) @ #vk.27 )
                            case RevealPassword
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case c_exp
                        by solve( !KU( ~x_c.1 ) @ #vk.26 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case ServerConfirmResponse
            by contradiction /* cyclic */
          qed
        next
          case ClientConfirmRequest_case_3
          solve( !KU( ~nonce_p ) @ #vk.17 )
            case ClientConfirmRequest
            solve( !KU( wsenc(key^inv(~x_c.1), ~pass.2) ) @ #vk.18 )
              case c_wsenc
              solve( !KU( ~pass.2 ) @ #vk.22 )
                case RevealPassword
                solve( !KU( wsenc(key^inv(~x_s), ~pass.2) ) @ #vk.14 )
                  case c_wsenc
                  solve( !KU( ~pass.2 ) @ #vk.24 )
                    case RevealPassword
                    solve( !KU( wsenc(key^inv(~x_c), ~pass) ) @ #vk.10 )
                      case c_wsenc
                      solve( !KU( ~pass ) @ #vk.26 )
                        case RevealPassword
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case ServerConfirmResponse
            by contradiction /* cyclic */
          qed
        next
          case ClientConfirmRequest_case_4
          solve( !KU( ~nonce_p ) @ #vk.17 )
            case ClientConfirmRequest
            solve( !KU( x^(~x_c.1*x.2) ) @ #vk.16 )
              case ClientCommitRequest_case_1
              solve( !KU( ~pass.3 ) @ #vk.23 )
                case RevealPassword
                by solve( !KU( ~x_c.1 ) @ #vk.24 )
              qed
            next
              case ClientCommitRequest_case_2
              solve( !KU( ~pass.2 ) @ #vk.21 )
                case RevealPassword
                solve( !KU( senc(<'1', nonce_s>, 'g'^(~x_c.1*x.1)) ) @ #vk.9 )
                  case ServerCommitResponse
                  solve( !KU( wsenc('g'^x.1, ~pass.1) ) @ #vk.20 )
                    case ClientCommitRequest
                    by solve( !KU( ~x_c.2 ) @ #vk.23 )
                  next
                    case ServerCommitResponse
                    by solve( !KU( ~x_s ) @ #vk.24 )
                  next
                    case c_wsenc
                    solve( !KU( wsenc('g'^x.2, ~pass.2) ) @ #vk.15 )
                      case ClientCommitRequest
                      solve( !KU( ~x.1 ) @ #vk.24 )
                        case ClientConfirmRequest_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_8
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case RevealPassword
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerCommitResponse
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case fresh
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      qed
                    next
                      case ServerCommitResponse
                      solve( !KU( ~x.1 ) @ #vk.23 )
                        case ClientConfirmRequest_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_8
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case RevealPassword
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerCommitResponse
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case fresh
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      qed
                    next
                      case c_wsenc
                      solve( !KU( ~pass.2 ) @ #vk.28 )
                        case RevealPassword
                        solve( !KU( wsenc('g'^x, ~pass) ) @ #vk.12 )
                          case ClientCommitRequest
                          solve( !KU( ~x ) @ #vk.24 )
                            case ClientConfirmRequest_case_1
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_2
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_3
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_4
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_5
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_6
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_7
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_8
                            by solve( splitEqs(1) )
                          next
                            case RevealPassword
                            by solve( splitEqs(1) )
                          next
                            case ServerCommitResponse
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_1
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_2
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_3
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_4
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_5
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_6
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_7
                            by solve( splitEqs(1) )
                          next
                            case fresh
                            by solve( splitEqs(1) )
                          qed
                        next
                          case ServerCommitResponse
                          solve( !KU( ~x ) @ #vk.25 )
                            case ClientConfirmRequest_case_1
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_2
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_3
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_4
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_5
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_6
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_7
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_8
                            by solve( splitEqs(1) )
                          next
                            case RevealPassword
                            by solve( splitEqs(1) )
                          next
                            case ServerCommitResponse
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_1
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_2
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_3
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_4
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_5
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_6
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_7
                            by solve( splitEqs(1) )
                          next
                            case fresh
                            by solve( splitEqs(1) )
                          qed
                        next
                          case c_wsenc
                          solve( !KU( ~pass ) @ #vk.30 )
                            case RevealPassword
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( wsenc('g'^x.1, ~pass.1) ) @ #vk.19 )
                    case ClientCommitRequest
                    by solve( !KU( ~x_c.2 ) @ #vk.22 )
                  next
                    case ServerCommitResponse
                    by solve( !KU( ~x_s ) @ #vk.23 )
                  next
                    case c_wsenc
                    solve( !KU( wsenc('g'^x.2, ~pass.2) ) @ #vk.15 )
                      case ClientCommitRequest
                      solve( !KU( ~x.1 ) @ #vk.23 )
                        case ClientConfirmRequest_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_8
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case RevealPassword
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerCommitResponse
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case fresh
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      qed
                    next
                      case ServerCommitResponse
                      solve( !KU( ~x.1 ) @ #vk.22 )
                        case ClientConfirmRequest_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_8
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case RevealPassword
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerCommitResponse
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case fresh
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      qed
                    next
                      case c_wsenc
                      solve( !KU( ~pass.2 ) @ #vk.28 )
                        case RevealPassword
                        solve( !KU( wsenc('g'^x, ~pass) ) @ #vk.12 )
                          case ClientCommitRequest
                          solve( !KU( ~x ) @ #vk.23 )
                            case ClientConfirmRequest_case_1
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_2
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_3
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_4
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_5
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_6
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_7
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_8
                            by solve( splitEqs(1) )
                          next
                            case RevealPassword
                            by solve( splitEqs(1) )
                          next
                            case ServerCommitResponse
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_1
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_2
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_3
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_4
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_5
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_6
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_7
                            by solve( splitEqs(1) )
                          next
                            case fresh
                            by solve( splitEqs(1) )
                          qed
                        next
                          case ServerCommitResponse
                          solve( !KU( ~x ) @ #vk.24 )
                            case ClientConfirmRequest_case_1
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_2
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_3
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_4
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_5
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_6
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_7
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_8
                            by solve( splitEqs(1) )
                          next
                            case RevealPassword
                            by solve( splitEqs(1) )
                          next
                            case ServerCommitResponse
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_1
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_2
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_3
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_4
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_5
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_6
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_7
                            by solve( splitEqs(1) )
                          next
                            case fresh
                            by solve( splitEqs(1) )
                          qed
                        next
                          case c_wsenc
                          solve( !KU( ~pass ) @ #vk.30 )
                            case RevealPassword
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case ClientCommitRequest_case_3
              solve( !KU( ~pass.3 ) @ #vk.23 )
                case RevealPassword
                by solve( !KU( ~x_c.1 ) @ #vk.25 )
              qed
            next
              case ServerCommitResponse_case_1
              solve( !KU( ~pass.3 ) @ #vk.23 )
                case RevealPassword
                by solve( !KU( ~x_c.1 ) @ #vk.24 )
              qed
            next
              case ServerCommitResponse_case_2
              solve( !KU( ~pass.3 ) @ #vk.23 )
                case RevealPassword
                by solve( !KU( ~x_c.1 ) @ #vk.26 )
              qed
            next
              case c_exp
              by solve( !KU( ~x_c.1 ) @ #vk.23 )
            qed
          next
            case ServerConfirmResponse_case_1
            solve( splitEqs(5) )
              case split_case_1
              by contradiction /* cyclic */
            next
              case split_case_2
              by contradiction /* cyclic */
            qed
          next
            case ServerConfirmResponse_case_2
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_3
            solve( splitEqs(4) )
              case split_case_1
              by contradiction /* cyclic */
            next
              case split_case_2
              solve( splitEqs(1) )
                case split_case_1
                by contradiction /* cyclic */
              next
                case split_case_2
                by contradiction /* cyclic */
              qed
            next
              case split_case_3
              solve( splitEqs(6) )
                case split_case_1
                by contradiction /* cyclic */
              next
                case split_case_2
                by contradiction /* cyclic */
              next
                case split_case_3
                by contradiction /* cyclic */
              qed
            qed
          qed
        next
          case ClientConfirmRequest_case_5
          solve( !KU( ~nonce_p ) @ #vk.17 )
            case ClientConfirmRequest
            solve( !KU( wsenc(x^(x.1*inv(~x_c.1)), ~pass.2) ) @ #vk.18 )
              case c_wsenc
              solve( !KU( ~pass.2 ) @ #vk.22 )
                case RevealPassword
                solve( !KU( x^(x.1*inv(~x_c.1)) ) @ #vk.22 )
                  case ClientCommitRequest_case_1
                  solve( !KU( ~pass.3 ) @ #vk.25 )
                    case RevealPassword
                    by solve( !KU( ~x_c.1 ) @ #vk.27 )
                  qed
                next
                  case ClientCommitRequest_case_2
                  solve( !KU( ~pass.3 ) @ #vk.25 )
                    case RevealPassword
                    by solve( !KU( ~x_c.2 ) @ #vk.29 )
                  qed
                next
                  case ServerCommitResponse_case_1
                  solve( !KU( ~pass.3 ) @ #vk.25 )
                    case RevealPassword
                    by solve( !KU( ~x_c.1 ) @ #vk.28 )
                  qed
                next
                  case ServerCommitResponse_case_2
                  solve( !KU( ~pass.3 ) @ #vk.25 )
                    case RevealPassword
                    by solve( !KU( ~x_c.1 ) @ #vk.30 )
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_c.1 ) @ #vk.27 )
                qed
              qed
            qed
          next
            case ServerConfirmResponse_case_1
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_2
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_3
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_4
            by contradiction /* cyclic */
          qed
        next
          case ClientConfirmRequest_case_6
          solve( !KU( ~nonce_p ) @ #vk.17 )
            case ClientConfirmRequest
            solve( !KU( wsenc(x^inv((~x_c.1*x.1)), ~pass.2) ) @ #vk.18 )
              case c_wsenc
              solve( !KU( ~pass.2 ) @ #vk.22 )
                case RevealPassword
                solve( !KU( wsenc(x^inv((~x_s*x.1)), ~pass.2) ) @ #vk.14 )
                  case c_wsenc
                  solve( !KU( ~pass.2 ) @ #vk.24 )
                    case RevealPassword
                    solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass) ) @ #vk.10 )
                      case c_wsenc
                      solve( !KU( ~pass ) @ #vk.26 )
                        case RevealPassword
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case ServerConfirmResponse
            by contradiction /* cyclic */
          qed
        next
          case ClientConfirmRequest_case_7
          solve( !KU( ~nonce_p ) @ #vk.17 )
            case ClientConfirmRequest
            solve( splitEqs(1) )
              case split_case_1
              solve( splitEqs(2) )
                case split
                solve( !KU( x^(~x_c*inv(x.1)) ) @ #vk.16 )
                  case ClientCommitRequest
                  solve( !KU( ~pass ) @ #vk.21 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_c ) @ #vk.23 )
                qed
              qed
            next
              case split_case_2
              solve( splitEqs(2) )
                case split_case_1
                solve( !KU( x^(~x_s*inv(x.1)) ) @ #vk.16 )
                  case ServerCommitResponse
                  solve( !KU( ~pass.1 ) @ #vk.21 )
                    case RevealPassword
                    solve( !KU( senc(<'1', nonce_s>, 'g'^(~x_s*inv(x))) ) @ #vk.9 )
                      case ServerCommitResponse
                      solve( splitEqs(8) )
                        case split_case_1
                        solve( !KU( wsenc('g'^(~x_s*inv((x*~x_c.1))), ~pass.2) ) @ #vk.19 )
                          case c_wsenc
                          solve( !KU( ~pass.2 ) @ #vk.24 )
                            case RevealPassword
                            solve( !KU( 'g'^(~x_s*inv((x*~x_c.1))) ) @ #vk.24 )
                              case ServerCommitResponse
                              by solve( !KU( ~x_c.1 ) @ #vk.27 )
                            next
                              case c_exp
                              by solve( !KU( ~x_s ) @ #vk.28 )
                            qed
                          qed
                        qed
                      next
                        case split_case_2
                        solve( !KU( wsenc('g'^(~x_s*inv((x*~x_c.1))), ~pass.2) ) @ #vk.20 )
                          case c_wsenc
                          solve( !KU( ~pass.2 ) @ #vk.28 )
                            case RevealPassword
                            solve( !KU( 'g'^(~x_s*inv((x*~x_c.1))) ) @ #vk.28 )
                              case ServerCommitResponse
                              by solve( !KU( ~x_c.1 ) @ #vk.31 )
                            next
                              case c_exp
                              by solve( !KU( ~x_s ) @ #vk.32 )
                            qed
                          qed
                        qed
                      qed
                    next
                      case c_senc
                      solve( !KU( wsenc('g'^(~x_s*inv((x*~x_c.1))), ~pass.2) ) @ #vk.19 )
                        case c_wsenc
                        solve( !KU( ~pass.2 ) @ #vk.28 )
                          case RevealPassword
                          solve( !KU( 'g'^(~x_s*inv((x*~x_c.1))) ) @ #vk.28 )
                            case ServerCommitResponse
                            by solve( !KU( ~x_c.1 ) @ #vk.31 )
                          next
                            case c_exp
                            by solve( !KU( ~x_s ) @ #vk.32 )
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_s ) @ #vk.23 )
                qed
              next
                case split_case_2
                solve( !KU( wsenc(x^(x.1*inv((~x_c.1*x.2))), ~pass.2) ) @ #vk.18 )
                  case c_wsenc
                  solve( !KU( ~pass.2 ) @ #vk.22 )
                    case RevealPassword
                    solve( !KU( x^(x.1*inv((~x_c.1*x.2))) ) @ #vk.22 )
                      case ClientCommitRequest_case_1
                      solve( !KU( ~pass.3 ) @ #vk.25 )
                        case RevealPassword
                        by solve( !KU( ~x_c.1 ) @ #vk.28 )
                      qed
                    next
                      case ClientCommitRequest_case_2
                      solve( !KU( ~pass.3 ) @ #vk.25 )
                        case RevealPassword
                        by solve( !KU( ~x_c.2 ) @ #vk.30 )
                      qed
                    next
                      case ServerCommitResponse_case_1
                      solve( !KU( ~pass.3 ) @ #vk.25 )
                        case RevealPassword
                        by solve( !KU( ~x_c.1 ) @ #vk.29 )
                      qed
                    next
                      case ServerCommitResponse_case_2
                      solve( !KU( ~pass.3 ) @ #vk.25 )
                        case RevealPassword
                        by solve( !KU( ~x_c.1 ) @ #vk.31 )
                      qed
                    next
                      case c_exp
                      by solve( !KU( ~x_c.1 ) @ #vk.28 )
                    qed
                  qed
                qed
              next
                case split_case_3
                solve( !KU( x^(~x_s*x.1*inv(x.2)) ) @ #vk.16 )
                  case ClientCommitRequest_case_1
                  solve( !KU( ~pass.3 ) @ #vk.23 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.25 )
                  qed
                next
                  case ClientCommitRequest_case_2
                  solve( !KU( ~pass.3 ) @ #vk.23 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.25 )
                  qed
                next
                  case ServerCommitResponse_case_1
                  solve( !KU( ~pass.3 ) @ #vk.23 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.26 )
                  qed
                next
                  case ServerCommitResponse_case_2
                  solve( !KU( ~pass.3 ) @ #vk.23 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.26 )
                  qed
                next
                  case ServerCommitResponse_case_3
                  solve( !KU( ~pass.1 ) @ #vk.21 )
                    case RevealPassword
                    solve( !KU( senc(<'1', nonce_s>, 'g'^(~x_s*x*inv(x.1))) ) @ #vk.9 )
                      case ServerCommitResponse
                      solve( !KU( wsenc('g'^(~x_s*x*inv((~x_c.1*x.1))), ~pass.2) ) @ #vk.20 )
                        case c_wsenc
                        solve( !KU( ~pass.2 ) @ #vk.30 )
                          case RevealPassword
                          solve( !KU( 'g'^(~x_s*x*inv((~x_c.1*x.1))) ) @ #vk.30 )
                            case ClientCommitRequest_case_1
                            solve( !KU( ~pass.4 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.37 )
                            qed
                          next
                            case ClientCommitRequest_case_2
                            solve( !KU( ~pass.4 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.37 )
                            qed
                          next
                            case ServerCommitResponse_case_1
                            solve( !KU( ~pass.4 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.38 )
                            qed
                          next
                            case ServerCommitResponse_case_2
                            solve( !KU( ~pass.4 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.38 )
                            qed
                          next
                            case ServerCommitResponse_case_3
                            by solve( !KU( ~x_c.1 ) @ #vk.34 )
                          next
                            case c_exp
                            by solve( !KU( ~x_s ) @ #vk.34 )
                          qed
                        qed
                      qed
                    next
                      case c_senc
                      solve( !KU( wsenc('g'^(~x_s*x*inv((~x_c.1*x.1))), ~pass.2) ) @ #vk.19 )
                        case c_wsenc
                        solve( !KU( ~pass.2 ) @ #vk.30 )
                          case RevealPassword
                          solve( !KU( 'g'^(~x_s*x*inv((~x_c.1*x.1))) ) @ #vk.30 )
                            case ClientCommitRequest_case_1
                            solve( !KU( ~pass.3 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.37 )
                            qed
                          next
                            case ClientCommitRequest_case_2
                            solve( !KU( ~pass.3 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.37 )
                            qed
                          next
                            case ServerCommitResponse_case_1
                            solve( !KU( ~pass.3 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.38 )
                            qed
                          next
                            case ServerCommitResponse_case_2
                            solve( !KU( ~pass.3 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.38 )
                            qed
                          next
                            case ServerCommitResponse_case_3
                            by solve( !KU( ~x_c.1 ) @ #vk.34 )
                          next
                            case c_exp
                            by solve( !KU( ~x_s ) @ #vk.34 )
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_s ) @ #vk.23 )
                qed
              qed
            next
              case split_case_3
              solve( !KU( x^(~x_c*x.1*inv(x.2)) ) @ #vk.16 )
                case ClientCommitRequest_case_1
                solve( !KU( ~pass.3 ) @ #vk.23 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.25 )
                qed
              next
                case ClientCommitRequest_case_2
                solve( !KU( ~pass.3 ) @ #vk.23 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.25 )
                qed
              next
                case ClientCommitRequest_case_3
                solve( !KU( ~pass ) @ #vk.21 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              next
                case ServerCommitResponse_case_1
                solve( !KU( ~pass.3 ) @ #vk.23 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.26 )
                qed
              next
                case ServerCommitResponse_case_2
                solve( !KU( ~pass.3 ) @ #vk.23 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.26 )
                qed
              next
                case c_exp
                by solve( !KU( ~x_c ) @ #vk.23 )
              qed
            qed
          next
            case ServerConfirmResponse_case_1
            solve( splitEqs(1) )
              case split_case_1
              solve( splitEqs(2) )
                case split_case_1
                by contradiction /* cyclic */
              next
                case split_case_2
                by solve( splitEqs(4) )
              next
                case split_case_3
                solve( splitEqs(6) )
                  case split_case_1
                  by contradiction /* cyclic */
                next
                  case split_case_2
                  by contradiction /* cyclic */
                next
                  case split_case_3
                  by contradiction /* cyclic */
                qed
              qed
            next
              case split_case_2
              solve( splitEqs(6) )
                case split_case_1
                by contradiction /* cyclic */
              next
                case split_case_2
                by contradiction /* cyclic */
              qed
            qed
          next
            case ServerConfirmResponse_case_2
            by contradiction /* cyclic */
          qed
        next
          case ServerCommitResponse
          solve( !KU( ~nonce_p ) @ #vk.16 )
            case ClientConfirmRequest
            solve( splitEqs(1) )
              case split_case_1
              solve( !KU( wsenc(key^inv(~x_c), ~pass) ) @ #vk.6 )
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.18 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_2
              solve( splitEqs(2) )
                case split
                solve( !KU( senc(<'1', nonce_s>, y_s^~x_c) ) @ #vk.7 )
                  case ServerCommitResponse
                  solve( splitEqs(7) )
                    case split
                    solve( !KU( wsenc(y_s, ~pass) ) @ #vk.7 )
                      case ClientCommitRequest
                      by contradiction /* non-normal terms */
                    next
                      case c_wsenc
                      solve( !KU( ~pass ) @ #vk.21 )
                        case RevealPassword
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( wsenc(y_s, ~pass) ) @ #vk.7 )
                    case ClientCommitRequest
                    by contradiction /* non-normal terms */
                  next
                    case c_wsenc
                    solve( !KU( ~pass ) @ #vk.21 )
                      case RevealPassword
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case split_case_3
              solve( splitEqs(2) )
                case split
                solve( !KU( senc(<'1', nonce_s>, wsdec(scr_0, ~pass)^~x_c) ) @ #vk.7 )
                  case ServerCommitResponse
                  solve( splitEqs(7) )
                    case split
                    solve( !KU( wsdec(scr_0, ~pass)^~x_c ) @ #vk.16 )
                      case c_exp
                      by solve( !KU( ~x_c ) @ #vk.21 )
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( wsdec(scr_0, ~pass)^~x_c ) @ #vk.15 )
                    case c_exp
                    by solve( !KU( ~x_c ) @ #vk.21 )
                  qed
                qed
              qed
            next
              case split_case_4
              solve( !KU( wsenc(x^(x.1*inv(~x_c)), ~pass) ) @ #vk.6 )
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.18 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_5
              solve( !KU( x^(~x_c*x.1) ) @ #vk.15 )
                case ClientCommitRequest_case_1
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.20 )
                qed
              next
                case ClientCommitRequest_case_2
                solve( !KU( ~pass ) @ #vk.17 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              next
                case ClientCommitRequest_case_3
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.21 )
                qed
              next
                case ServerCommitResponse_case_1
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.20 )
                qed
              next
                case ServerCommitResponse_case_2
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.22 )
                qed
              next
                case c_exp
                by solve( !KU( ~x_c ) @ #vk.19 )
              qed
            next
              case split_case_6
              solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass) ) @ #vk.6 )
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.18 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_7
              solve( splitEqs(2) )
                case split_case_1
                solve( !KU( x^(~x_s*inv(x.1)) ) @ #vk.15 )
                  case ServerCommitResponse
                  solve( !KU( ~pass.1 ) @ #vk.17 )
                    case RevealPassword
                    solve( !KU( senc(<'1', nonce_s>, 'g'^(~x_s*inv(x))) ) @ #vk.9 )
                      case ServerCommitResponse
                      solve( splitEqs(8) )
                        case split_case_1
                        solve( !KU( wsenc('g'^(~x_s*inv((~x_c*x))), ~pass) ) @ #vk.9 )
                          case c_wsenc
                          solve( !KU( ~pass ) @ #vk.21 )
                            case RevealPassword
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case split_case_2
                        solve( !KU( wsenc('g'^(~x_s*inv((~x_c*x))), ~pass) ) @ #vk.9 )
                          case c_wsenc
                          solve( !KU( ~pass ) @ #vk.24 )
                            case RevealPassword
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    next
                      case c_senc
                      solve( !KU( wsenc('g'^(~x_s*inv((~x_c*x))), ~pass) ) @ #vk.9 )
                        case c_wsenc
                        solve( !KU( ~pass ) @ #vk.24 )
                          case RevealPassword
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_s ) @ #vk.19 )
                qed
              next
                case split_case_2
                solve( !KU( wsenc(x^(x.1*inv((~x_c*x.2))), ~pass) ) @ #vk.6 )
                  case c_wsenc
                  solve( !KU( ~pass ) @ #vk.18 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case split_case_3
                solve( !KU( x^(~x_s*x.1*inv(x.2)) ) @ #vk.15 )
                  case ClientCommitRequest_case_1
                  solve( !KU( ~pass.2 ) @ #vk.19 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.21 )
                  qed
                next
                  case ClientCommitRequest_case_2
                  solve( !KU( ~pass.2 ) @ #vk.19 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.21 )
                  qed
                next
                  case ServerCommitResponse_case_1
                  solve( !KU( ~pass.2 ) @ #vk.19 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.22 )
                  qed
                next
                  case ServerCommitResponse_case_2
                  solve( !KU( ~pass.2 ) @ #vk.19 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.22 )
                  qed
                next
                  case ServerCommitResponse_case_3
                  solve( !KU( ~pass.1 ) @ #vk.17 )
                    case RevealPassword
                    solve( !KU( senc(<'1', nonce_s>, 'g'^(~x_s*x*inv(x.1))) ) @ #vk.9 )
                      case ServerCommitResponse
                      solve( !KU( wsenc('g'^(~x_s*x*inv((~x_c*x.1))), ~pass) ) @ #vk.9 )
                        case c_wsenc
                        solve( !KU( ~pass ) @ #vk.26 )
                          case RevealPassword
                          by contradiction /* from formulas */
                        qed
                      qed
                    next
                      case c_senc
                      solve( !KU( wsenc('g'^(~x_s*x*inv((~x_c*x.1))), ~pass) ) @ #vk.9 )
                        case c_wsenc
                        solve( !KU( ~pass ) @ #vk.26 )
                          case RevealPassword
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_s ) @ #vk.19 )
                qed
              qed
            qed
          next
            case ServerConfirmResponse_case_1
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_2
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_3
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_4
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_5
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_6
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_7
            by contradiction /* cyclic */
          qed
        qed
      qed
    next
      case c_senc
      solve( !KU( ~nonce_p ) @ #vk.9 )
        case ClientConfirmRequest
        solve( splitEqs(1) )
          case split_case_1
          solve( !KU( wsenc(key^inv(~x_c), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_2
          solve( !KU( senc(<'1', nonce_s>, y_s^~x_c) ) @ #vk.4 )
            case ServerCommitResponse
            solve( splitEqs(4) )
              case split
              solve( !KU( wsenc(y_s, ~pass) ) @ #vk.4 )
                case ClientCommitRequest
                by contradiction /* non-normal terms */
              next
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.15 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case c_senc
            solve( !KU( wsenc(y_s, ~pass) ) @ #vk.4 )
              case ClientCommitRequest
              by contradiction /* non-normal terms */
            next
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.14 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case split_case_3
          solve( !KU( senc(<'1', nonce_s>, wsdec(scr_0, ~pass)^~x_c) ) @ #vk.4 )
            case ServerCommitResponse
            solve( splitEqs(4) )
              case split
              solve( !KU( wsdec(scr_0, ~pass)^~x_c ) @ #vk.8 )
                case c_exp
                by solve( !KU( ~x_c ) @ #vk.15 )
              qed
            qed
          next
            case c_senc
            solve( !KU( wsdec(scr_0, ~pass)^~x_c ) @ #vk.8 )
              case c_exp
              by solve( !KU( ~x_c ) @ #vk.14 )
            qed
          qed
        next
          case split_case_4
          solve( !KU( wsenc(x^(x.1*inv(~x_c)), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_5
          solve( !KU( x^(~x_c*x.1) ) @ #vk.8 )
            case ClientCommitRequest_case_1
            solve( !KU( ~pass.1 ) @ #vk.12 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.13 )
            qed
          next
            case ClientCommitRequest_case_2
            solve( !KU( ~pass ) @ #vk.10 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case ClientCommitRequest_case_3
            solve( !KU( ~pass.1 ) @ #vk.12 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.14 )
            qed
          next
            case ServerCommitResponse_case_1
            solve( !KU( ~pass.1 ) @ #vk.11 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.12 )
            qed
          next
            case ServerCommitResponse_case_2
            solve( !KU( ~pass.1 ) @ #vk.11 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.16 )
            qed
          next
            case c_exp
            by solve( !KU( ~x_c ) @ #vk.12 )
          qed
        next
          case split_case_6
          solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_7
          solve( !KU( wsenc(x^(x.1*inv((~x_c*x.2))), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case ServerConfirmResponse_case_1
        solve( !KU( wsenc(key^inv(~x_s), ~pass.1) ) @ #vk.11 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.16 )
            case RevealPassword
            solve( !KU( wsenc(key^inv(~x_c), ~pass) ) @ #vk.5 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.18 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case ServerConfirmResponse_case_2
        solve( splitEqs(1) )
          case split
          solve( !KU( y_c^~x_s ) @ #vk.8 )
            case ServerCommitResponse
            solve( !KU( ~pass.1 ) @ #vk.15 )
              case RevealPassword
              solve( !KU( wsenc('g', ~pass.1) ) @ #vk.12 )
                case c_wsenc
                solve( !KU( wsenc('g'^(~x_s*inv(~x_c)), ~pass) ) @ #vk.6 )
                  case c_wsenc
                  solve( !KU( ~pass ) @ #vk.18 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          next
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.16 )
          qed
        qed
      next
        case ServerConfirmResponse_case_3
        solve( !KU( x^(~x_s*x.2) ) @ #vk.8 )
          case ClientCommitRequest_case_1
          solve( !KU( ~pass.2 ) @ #vk.17 )
            case RevealPassword
            by solve( !KU( ~x_s ) @ #vk.18 )
          qed
        next
          case ClientCommitRequest_case_2
          solve( !KU( ~pass.2 ) @ #vk.17 )
            case RevealPassword
            by solve( !KU( ~x_s ) @ #vk.19 )
          qed
        next
          case ServerCommitResponse_case_1
          solve( !KU( ~pass.2 ) @ #vk.17 )
            case RevealPassword
            by solve( !KU( ~x_s ) @ #vk.18 )
          qed
        next
          case ServerCommitResponse_case_2
          solve( !KU( ~pass.1 ) @ #vk.15 )
            case RevealPassword
            solve( !KU( wsenc('g'^x.1, ~pass.1) ) @ #vk.12 )
              case ClientCommitRequest
              by solve( !KU( ~x_c.1 ) @ #vk.17 )
            next
              case ServerCommitResponse
              by solve( !KU( ~x_s.1 ) @ #vk.16 )
            next
              case c_wsenc
              solve( !KU( wsenc('g'^x, ~pass) ) @ #vk.6 )
                case ClientCommitRequest
                solve( !KU( ~x ) @ #vk.16 )
                  case ClientConfirmRequest_case_1
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_2
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_3
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_4
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_5
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_6
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_7
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_8
                  by solve( splitEqs(1) )
                next
                  case RevealPassword
                  by solve( splitEqs(1) )
                next
                  case ServerCommitResponse
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_1
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_2
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_3
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_4
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_5
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_6
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_7
                  by solve( splitEqs(1) )
                next
                  case fresh
                  by solve( splitEqs(1) )
                qed
              next
                case ServerCommitResponse
                solve( !KU( ~x ) @ #vk.17 )
                  case ClientConfirmRequest_case_1
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_2
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_3
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_4
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_5
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_6
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_7
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_8
                  by solve( splitEqs(1) )
                next
                  case RevealPassword
                  by solve( splitEqs(1) )
                next
                  case ServerCommitResponse
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_1
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_2
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_3
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_4
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_5
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_6
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_7
                  by solve( splitEqs(1) )
                next
                  case fresh
                  by solve( splitEqs(1) )
                qed
              next
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.19 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case ServerCommitResponse_case_3
          solve( !KU( ~pass.2 ) @ #vk.17 )
            case RevealPassword
            by solve( !KU( ~x_s ) @ #vk.20 )
          qed
        next
          case c_exp
          by solve( !KU( ~x_s ) @ #vk.17 )
        qed
      next
        case ServerConfirmResponse_case_4
        solve( !KU( wsenc(x^(x.1*inv(~x_s)), ~pass.1) ) @ #vk.11 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.16 )
            case RevealPassword
            solve( !KU( x^(x.1*inv(~x_s)) ) @ #vk.16 )
              case ClientCommitRequest_case_1
              solve( !KU( ~pass.2 ) @ #vk.19 )
                case RevealPassword
                by solve( !KU( ~x_s ) @ #vk.21 )
              qed
            next
              case ClientCommitRequest_case_2
              solve( !KU( ~pass.2 ) @ #vk.19 )
                case RevealPassword
                by solve( !KU( ~x_s ) @ #vk.23 )
              qed
            next
              case ServerCommitResponse_case_1
              solve( !KU( ~pass.2 ) @ #vk.19 )
                case RevealPassword
                by solve( !KU( ~x_s ) @ #vk.22 )
              qed
            next
              case ServerCommitResponse_case_2
              solve( !KU( ~pass.2 ) @ #vk.19 )
                case RevealPassword
                by solve( !KU( ~x_s.1 ) @ #vk.24 )
              qed
            next
              case c_exp
              by solve( !KU( ~x_s ) @ #vk.21 )
            qed
          qed
        qed
      next
        case ServerConfirmResponse_case_5
        solve( !KU( wsenc(x^inv((~x_s*x.1)), ~pass.1) ) @ #vk.11 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.16 )
            case RevealPassword
            solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass) ) @ #vk.5 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.18 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case ServerConfirmResponse_case_6
        solve( splitEqs(1) )
          case split_case_1
          solve( !KU( x^(~x_c*inv(x.1)) ) @ #vk.8 )
            case ClientCommitRequest
            solve( !KU( ~pass ) @ #vk.15 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case c_exp
            by solve( !KU( ~x_c ) @ #vk.17 )
          qed
        next
          case split_case_2
          solve( !KU( wsenc(x^(x.1*inv((~x_s*x.2))), ~pass.1) ) @ #vk.11 )
            case c_wsenc
            solve( !KU( ~pass.1 ) @ #vk.16 )
              case RevealPassword
              solve( !KU( x^(x.1*inv((~x_s*x.2))) ) @ #vk.16 )
                case ClientCommitRequest_case_1
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_s ) @ #vk.22 )
                qed
              next
                case ClientCommitRequest_case_2
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_s ) @ #vk.24 )
                qed
              next
                case ServerCommitResponse_case_1
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_s ) @ #vk.23 )
                qed
              next
                case ServerCommitResponse_case_2
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_s.1 ) @ #vk.25 )
                qed
              next
                case c_exp
                by solve( !KU( ~x_s ) @ #vk.22 )
              qed
            qed
          qed
        next
          case split_case_3
          solve( !KU( x^(~x_c*x.1*inv(x.2)) ) @ #vk.8 )
            case ClientCommitRequest_case_1
            solve( !KU( ~pass.2 ) @ #vk.17 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.19 )
            qed
          next
            case ClientCommitRequest_case_2
            solve( !KU( ~pass.2 ) @ #vk.17 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.19 )
            qed
          next
            case ClientCommitRequest_case_3
            solve( !KU( ~pass ) @ #vk.15 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case ServerCommitResponse_case_1
            solve( !KU( ~pass.2 ) @ #vk.17 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.20 )
            qed
          next
            case ServerCommitResponse_case_2
            solve( !KU( ~pass.2 ) @ #vk.17 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.20 )
            qed
          next
            case c_exp
            by solve( !KU( ~x_c ) @ #vk.17 )
          qed
        qed
      next
        case ServerConfirmResponse_case_7
        solve( splitEqs(1) )
          case split
          solve( !KU( wsdec(client_commit_request, ~pass.1)^~x_s ) @ #vk.8 )
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.16 )
          qed
        qed
      qed
    qed
  qed
next
  case ServerConfirmResponse
  solve( StateServerCommitResponse( tid, A, B, pass, x_s, y_s, nonce_s,
                                    key, y_c
         ) ▶₀ #i )
    case ServerCommitResponse
    solve( !KU( senc(<'2', ~nonce_s, nonce_p>, key) ) @ #vk )
      case ClientConfirmRequest
      solve( splitEqs(1) )
        case split_case_1
        solve( splitEqs(2) )
          case split
          solve( !KU( wsenc(wsdec(client_commit_request, ~pass)^(~x_s*inv(~x_c)),
                            ~pass.1)
                 ) @ #vk.5 )
            case c_wsenc
            solve( !KU( ~pass.1 ) @ #vk.11 )
              case RevealPassword
              solve( !KU( wsdec(client_commit_request, ~pass)^(~x_s*inv(~x_c))
                     ) @ #vk.11 )
                case c_exp
                by solve( !KU( ~x_s ) @ #vk.14 )
              qed
            qed
          qed
        qed
      next
        case split_case_2
        solve( splitEqs(2) )
          case split
          solve( !KU( wsenc(y_c, ~pass) ) @ #vk.1 )
            case ClientCommitRequest
            by contradiction /* non-normal terms */
          next
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case split_case_3
        solve( !KU( wsenc(key^inv(~x_s), ~pass) ) @ #vk.1 )
          case c_wsenc
          solve( !KU( ~pass ) @ #vk.11 )
            case RevealPassword
            by contradiction /* from formulas */
          qed
        qed
      next
        case split_case_4
        solve( !KU( wsenc(x^x.1, ~pass) ) @ #vk.1 )
          case ClientCommitRequest
          solve( splitEqs(2) )
            case split_case_1
            by contradiction /* from formulas */
          next
            case split_case_2
            solve( !KU( wsenc('g'^(~x_c*~x_s*inv(~x_c.1)), ~pass.1) ) @ #vk.5 )
              case c_wsenc
              solve( !KU( ~pass.1 ) @ #vk.13 )
                case RevealPassword
                solve( !KU( 'g'^(~x_c*~x_s*inv(~x_c.1)) ) @ #vk.13 )
                  case ClientCommitRequest
                  solve( !KU( ~pass ) @ #vk.14 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                next
                  case ServerCommitResponse
                  solve( !KU( ~pass ) @ #vk.14 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_c ) @ #vk.16 )
                qed
              qed
            qed
          qed
        next
          case ServerCommitResponse
          solve( splitEqs(2) )
            case split
            solve( !KU( wsenc('g'^(~x_s*~x_s.1*inv(~x_c)), ~pass.1) ) @ #vk.5 )
              case c_wsenc
              solve( !KU( ~pass.1 ) @ #vk.12 )
                case RevealPassword
                solve( !KU( 'g'^(~x_s*~x_s.1*inv(~x_c)) ) @ #vk.12 )
                  case ServerCommitResponse_case_1
                  solve( !KU( ~pass ) @ #vk.13 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                next
                  case ServerCommitResponse_case_2
                  solve( !KU( ~pass ) @ #vk.13 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_s ) @ #vk.15 )
                qed
              qed
            qed
          qed
        next
          case c_wsenc
          solve( !KU( ~pass ) @ #vk.11 )
            case RevealPassword
            by contradiction /* from formulas */
          qed
        qed
      next
        case split_case_5
        solve( !KU( wsenc(x^inv((~x_s*x.1)), ~pass) ) @ #vk.1 )
          case c_wsenc
          solve( !KU( ~pass ) @ #vk.11 )
            case RevealPassword
            by contradiction /* from formulas */
          qed
        qed
      next
        case split_case_6
        solve( !KU( wsenc(x^(x.1*inv(~x_s)), ~pass) ) @ #vk.1 )
          case c_wsenc
          solve( !KU( ~pass ) @ #vk.11 )
            case RevealPassword
            by contradiction /* from formulas */
          qed
        qed
      next
        case split_case_7
        solve( splitEqs(2) )
          case split_case_1
          solve( !KU( wsenc(x^(~x_c*inv((~x_s*x.1))), ~pass) ) @ #vk.1 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_2
          solve( !KU( wsenc(x^(x.1*inv((~x_s*x.2))), ~pass) ) @ #vk.1 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_3
          solve( !KU( wsenc(x^(~x_c*x.1*inv((~x_s*x.2))), ~pass) ) @ #vk.1 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    next
      case c_senc
      solve( !KU( ~nonce_s ) @ #vk.9 )
        case ClientConfirmRequest_case_1
        solve( splitEqs(1) )
          case split
          solve( !KU( wsdec(scr_0, ~pass.1)^~x_c ) @ #vk.8 )
            case c_exp
            by solve( !KU( ~x_c ) @ #vk.17 )
          qed
        qed
      next
        case ClientConfirmRequest_case_2
        solve( splitEqs(1) )
          case split
          solve( !KU( wsenc(z, ~pass.1) ) @ #vk.11 )
            case ClientCommitRequest
            by contradiction /* non-normal terms */
          next
            case c_wsenc
            solve( !KU( ~pass.1 ) @ #vk.17 )
              case RevealPassword
              solve( !KU( z^~x_c ) @ #vk.10 )
                case ClientCommitRequest
                solve( !KU( wsenc('g'^(~x_c*inv(~x_s)), ~pass) ) @ #vk.7 )
                  case c_wsenc
                  solve( !KU( ~pass ) @ #vk.19 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case c_exp
                by solve( !KU( ~x_c ) @ #vk.18 )
              qed
            qed
          qed
        qed
      next
        case ClientConfirmRequest_case_3
        solve( !KU( wsenc(key^inv(~x_c), ~pass.1) ) @ #vk.11 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.17 )
            case RevealPassword
            solve( !KU( wsenc(key^inv(~x_s), ~pass) ) @ #vk.6 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.19 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case ClientConfirmRequest_case_4
        solve( !KU( x^(~x_c*x.1) ) @ #vk.7 )
          case ClientCommitRequest_case_1
          solve( !KU( ~pass.2 ) @ #vk.18 )
            case RevealPassword
            by solve( !KU( ~x_c ) @ #vk.19 )
          qed
        next
          case ClientCommitRequest_case_2
          solve( !KU( ~pass.1 ) @ #vk.16 )
            case RevealPassword
            solve( !KU( wsenc('g'^x, ~pass.1) ) @ #vk.12 )
              case ClientCommitRequest
              by solve( !KU( ~x_c.1 ) @ #vk.17 )
            next
              case ServerCommitResponse
              by solve( !KU( ~x_s.1 ) @ #vk.18 )
            next
              case c_wsenc
              solve( !KU( wsenc('g'^x.1, ~pass) ) @ #vk.7 )
                case ClientCommitRequest
                solve( !KU( ~x ) @ #vk.18 )
                  case ClientConfirmRequest_case_1
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_2
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_3
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_4
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_5
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_6
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_7
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_8
                  by solve( splitEqs(1) )
                next
                  case RevealPassword
                  by solve( splitEqs(1) )
                next
                  case ServerCommitResponse
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_1
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_2
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_3
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_4
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_5
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_6
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_7
                  by solve( splitEqs(1) )
                next
                  case fresh
                  by solve( splitEqs(1) )
                qed
              next
                case ServerCommitResponse
                solve( !KU( ~x ) @ #vk.17 )
                  case ClientConfirmRequest_case_1
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_2
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_3
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_4
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_5
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_6
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_7
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_8
                  by solve( splitEqs(1) )
                next
                  case RevealPassword
                  by solve( splitEqs(1) )
                next
                  case ServerCommitResponse
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_1
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_2
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_3
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_4
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_5
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_6
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_7
                  by solve( splitEqs(1) )
                next
                  case fresh
                  by solve( splitEqs(1) )
                qed
              next
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.20 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case ClientCommitRequest_case_3
          solve( !KU( ~pass.2 ) @ #vk.18 )
            case RevealPassword
            by solve( !KU( ~x_c ) @ #vk.20 )
          qed
        next
          case ServerCommitResponse_case_1
          solve( !KU( ~pass.2 ) @ #vk.18 )
            case RevealPassword
            by solve( !KU( ~x_c ) @ #vk.19 )
          qed
        next
          case ServerCommitResponse_case_2
          solve( !KU( ~pass.2 ) @ #vk.18 )
            case RevealPassword
            by solve( !KU( ~x_c ) @ #vk.21 )
          qed
        next
          case c_exp
          by solve( !KU( ~x_c ) @ #vk.18 )
        qed
      next
        case ClientConfirmRequest_case_5
        solve( !KU( wsenc(x^(x.1*inv(~x_c)), ~pass.1) ) @ #vk.11 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.17 )
            case RevealPassword
            solve( !KU( x^(x.1*inv(~x_c)) ) @ #vk.17 )
              case ClientCommitRequest_case_1
              solve( !KU( ~pass.2 ) @ #vk.20 )
                case RevealPassword
                by solve( !KU( ~x_c ) @ #vk.22 )
              qed
            next
              case ClientCommitRequest_case_2
              solve( !KU( ~pass.2 ) @ #vk.20 )
                case RevealPassword
                by solve( !KU( ~x_c.1 ) @ #vk.24 )
              qed
            next
              case ServerCommitResponse_case_1
              solve( !KU( ~pass.2 ) @ #vk.20 )
                case RevealPassword
                by solve( !KU( ~x_c ) @ #vk.23 )
              qed
            next
              case ServerCommitResponse_case_2
              solve( !KU( ~pass.2 ) @ #vk.20 )
                case RevealPassword
                by solve( !KU( ~x_c ) @ #vk.25 )
              qed
            next
              case c_exp
              by solve( !KU( ~x_c ) @ #vk.22 )
            qed
          qed
        qed
      next
        case ClientConfirmRequest_case_6
        solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass.1) ) @ #vk.11 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.17 )
            case RevealPassword
            solve( !KU( wsenc(x^inv((~x_s*x.1)), ~pass) ) @ #vk.6 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.19 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case ClientConfirmRequest_case_7
        solve( splitEqs(1) )
          case split_case_1
          solve( !KU( x^(~x_s*inv(x.1)) ) @ #vk.8 )
            case ServerCommitResponse
            solve( !KU( ~pass ) @ #vk.16 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.18 )
          qed
        next
          case split_case_2
          solve( !KU( wsenc(x^(x.1*inv((~x_c*x.2))), ~pass.1) ) @ #vk.11 )
            case c_wsenc
            solve( !KU( ~pass.1 ) @ #vk.17 )
              case RevealPassword
              solve( !KU( x^(x.1*inv((~x_c*x.2))) ) @ #vk.17 )
                case ClientCommitRequest_case_1
                solve( !KU( ~pass.2 ) @ #vk.20 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.23 )
                qed
              next
                case ClientCommitRequest_case_2
                solve( !KU( ~pass.2 ) @ #vk.20 )
                  case RevealPassword
                  by solve( !KU( ~x_c.1 ) @ #vk.25 )
                qed
              next
                case ServerCommitResponse_case_1
                solve( !KU( ~pass.2 ) @ #vk.20 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.24 )
                qed
              next
                case ServerCommitResponse_case_2
                solve( !KU( ~pass.2 ) @ #vk.20 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.26 )
                qed
              next
                case c_exp
                by solve( !KU( ~x_c ) @ #vk.23 )
              qed
            qed
          qed
        next
          case split_case_3
          solve( !KU( x^(~x_s*x.1*inv(x.2)) ) @ #vk.8 )
            case ClientCommitRequest_case_1
            solve( !KU( ~pass.2 ) @ #vk.18 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.20 )
            qed
          next
            case ClientCommitRequest_case_2
            solve( !KU( ~pass.2 ) @ #vk.18 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.20 )
            qed
          next
            case ServerCommitResponse_case_1
            solve( !KU( ~pass.2 ) @ #vk.18 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.21 )
            qed
          next
            case ServerCommitResponse_case_2
            solve( !KU( ~pass.2 ) @ #vk.18 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.21 )
            qed
          next
            case ServerCommitResponse_case_3
            solve( !KU( ~pass ) @ #vk.16 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.18 )
          qed
        qed
      next
        case ServerCommitResponse
        solve( splitEqs(1) )
          case split_case_1
          solve( !KU( wsdec(client_commit_request, ~pass)^~x_s ) @ #vk.8 )
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.12 )
          qed
        next
          case split_case_2
          solve( !KU( wsenc(y_c, ~pass) ) @ #vk.3 )
            case ClientCommitRequest
            by contradiction /* non-normal terms */
          next
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_3
          solve( !KU( wsenc(key^inv(~x_s), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_4
          solve( !KU( x^(~x_s*x.1) ) @ #vk.8 )
            case ClientCommitRequest_case_1
            solve( !KU( ~pass.1 ) @ #vk.14 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.15 )
            qed
          next
            case ClientCommitRequest_case_2
            solve( !KU( ~pass.1 ) @ #vk.14 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.16 )
            qed
          next
            case ServerCommitResponse_case_1
            solve( !KU( ~pass.1 ) @ #vk.13 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.14 )
            qed
          next
            case ServerCommitResponse_case_2
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case ServerCommitResponse_case_3
            solve( !KU( ~pass.1 ) @ #vk.13 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.16 )
            qed
          next
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.13 )
          qed
        next
          case split_case_5
          solve( !KU( wsenc(x^inv((~x_s*x.1)), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_6
          solve( !KU( wsenc(x^(x.1*inv(~x_s)), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_7
          solve( !KU( wsenc(x^(x.1*inv((~x_s*x.2))), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma InjectiveAgreement:
  all-traces
  "∀ A B t #i.
    (Commit( A, B, t ) @ #i) ⇒
    (((∃ #j.
        ((Running( A, B, t ) @ #j) ∧ (#j < #i)) ∧
        (∀ A1 B1 #k. (Commit( A1, B1, t ) @ #k) ⇒ (#k = #i))) ∨
      (∃ #j. RevAgentPass( A ) @ #j)) ∨
     (∃ #j. RevAgentPass( B ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ A B t #i.
  (Commit( A, B, t ) @ #i)
 ∧
  (∀ #j.
    (Running( A, B, t ) @ #j)
   ⇒
    ((¬(#j < #i)) ∨ (∃ A1 B1 #k. (Commit( A1, B1, t ) @ #k) ∧ ¬(#k = #i)))) ∧
  (∀ #j. (RevAgentPass( A ) @ #j) ⇒ ⊥) ∧
  (∀ #j. (RevAgentPass( B ) @ #j) ⇒ ⊥)"
*/
simplify
solve( Commit( A, B, t ) @ #i )
  case ClientSessionEstablishment
  solve( StateClientConfirmRequest_1( tid, A, B, pass, x_c, y_c, scr_0,
                                      y_s, key, nonce_p, nonce_s, scr_1
         ) ▶₀ #i )
    case ClientConfirmRequest
    solve( !KU( senc(<'3', ~nonce_p>, key) ) @ #vk )
      case ServerConfirmResponse
      solve( !KU( senc(<'2', ~nonce_s.1, ~nonce_p>, key) ) @ #vk.6 )
        case ClientConfirmRequest
        solve( splitEqs(1) )
          case split_case_1
          solve( !KU( wsenc(key^inv(~x_c), ~pass) ) @ #vk.2 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_2
          solve( splitEqs(2) )
            case split
            solve( !KU( wsenc(y_s, ~pass) ) @ #vk.2 )
              case ClientCommitRequest
              by contradiction /* non-normal terms */
            next
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.12 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case split_case_3
          solve( splitEqs(2) )
            case split
            solve( !KU( wsenc(wsdec(scr_0, ~pass)^(~x_c*inv(~x_s)), ~pass.1)
                   ) @ #vk.7 )
              case c_wsenc
              solve( !KU( ~pass.1 ) @ #vk.12 )
                case RevealPassword
                solve( !KU( wsdec(scr_0, ~pass)^(~x_c*inv(~x_s)) ) @ #vk.12 )
                  case c_exp
                  by solve( !KU( ~x_c ) @ #vk.15 )
                qed
              qed
            qed
          qed
        next
          case split_case_4
          solve( !KU( wsenc(x^(x.1*inv(~x_c)), ~pass) ) @ #vk.2 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_5
          solve( !KU( wsenc(x^x.1, ~pass) ) @ #vk.2 )
            case ClientCommitRequest
            solve( splitEqs(2) )
              case split
              solve( !KU( wsenc('g'^(~x_c*~x_c.1*inv(~x_s)), ~pass.1) ) @ #vk.7 )
                case c_wsenc
                solve( !KU( ~pass.1 ) @ #vk.12 )
                  case RevealPassword
                  solve( !KU( 'g'^(~x_c*~x_c.1*inv(~x_s)) ) @ #vk.12 )
                    case ClientCommitRequest_case_1
                    solve( !KU( ~pass ) @ #vk.13 )
                      case RevealPassword
                      by contradiction /* from formulas */
                    qed
                  next
                    case ClientCommitRequest_case_2
                    solve( !KU( ~pass ) @ #vk.13 )
                      case RevealPassword
                      by contradiction /* from formulas */
                    qed
                  next
                    case c_exp
                    by solve( !KU( ~x_c ) @ #vk.15 )
                  qed
                qed
              qed
            qed
          next
            case ServerCommitResponse
            solve( splitEqs(2) )
              case split_case_1
              solve( (#k < #i)  ∥ (#i < #k) )
                case case_1
                solve( Commit( A1, B1, <'initiator', ~nonce_p, ~nonce_s> ) @ #k )
                  case ClientSessionEstablishment
                  solve( StateClientConfirmRequest_1( tid.1, A1, B1, pass.1, x_c.1, y_c,
                                                      scr_0, y_s, key, ~nonce_p, ~nonce_s, scr_1
                         ) ▶₀ #k )
                    case ClientConfirmRequest
                    by contradiction /* cyclic */
                  qed
                qed
              next
                case case_2
                solve( Commit( A1, B1, <'initiator', ~nonce_p, ~nonce_s> ) @ #k )
                  case ClientSessionEstablishment
                  solve( StateClientConfirmRequest_1( tid.1, A1, B1, pass.1, x_c.1, y_c,
                                                      scr_0, y_s, key, ~nonce_p, ~nonce_s, scr_1
                         ) ▶₀ #k )
                    case ClientConfirmRequest
                    by contradiction /* cyclic */
                  qed
                qed
              qed
            next
              case split_case_2
              solve( !KU( wsenc('g'^(~x_c*~x_s*inv(~x_s.1)), ~pass.1) ) @ #vk.7 )
                case c_wsenc
                solve( !KU( ~pass.1 ) @ #vk.15 )
                  case RevealPassword
                  solve( !KU( 'g'^(~x_c*~x_s*inv(~x_s.1)) ) @ #vk.15 )
                    case ClientCommitRequest
                    solve( !KU( ~pass ) @ #vk.16 )
                      case RevealPassword
                      by contradiction /* from formulas */
                    qed
                  next
                    case ServerCommitResponse
                    solve( !KU( ~pass ) @ #vk.16 )
                      case RevealPassword
                      by contradiction /* from formulas */
                    qed
                  next
                    case c_exp
                    by solve( !KU( ~x_c ) @ #vk.18 )
                  qed
                qed
              qed
            qed
          next
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_6
          solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass) ) @ #vk.2 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_7
          solve( splitEqs(2) )
            case split_case_1
            solve( !KU( wsenc(x^(~x_s*inv((~x_c*x.1))), ~pass) ) @ #vk.2 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.12 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_2
            solve( !KU( wsenc(x^(x.1*inv((~x_c*x.2))), ~pass) ) @ #vk.2 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.12 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_3
            solve( !KU( wsenc(x^(~x_s*x.1*inv((~x_c*x.2))), ~pass) ) @ #vk.2 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.12 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case c_senc
        solve( !KU( ~nonce_s.1 ) @ #vk.15 )
          case ClientConfirmRequest_case_1
          solve( !KU( ~nonce_p ) @ #vk.17 )
            case ClientConfirmRequest
            solve( splitEqs(1) )
              case split_case_1
              solve( splitEqs(2) )
                case split
                solve( !KU( wsdec(scr_0, ~pass)^~x_c ) @ #vk.15 )
                  case c_exp
                  by solve( !KU( ~x_c ) @ #vk.18 )
                qed
              qed
            next
              case split_case_2
              solve( splitEqs(2) )
                case split
                solve( !KU( senc(<'1', nonce_s>, wsdec(scr_0, ~pass.1)^~x_c.1)
                       ) @ #vk.7 )
                  case ServerCommitResponse
                  solve( splitEqs(7) )
                    case split
                    solve( !KU( wsdec(scr_0, ~pass.1)^~x_c.1 ) @ #vk.17 )
                      case c_exp
                      by solve( !KU( ~x_c.1 ) @ #vk.25 )
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( wsdec(scr_0, ~pass.1)^~x_c.1 ) @ #vk.16 )
                    case c_exp
                    by solve( !KU( ~x_c.1 ) @ #vk.25 )
                  qed
                qed
              qed
            qed
          next
            case ServerConfirmResponse
            by contradiction /* cyclic */
          qed
        next
          case ClientConfirmRequest_case_2
          solve( !KU( ~nonce_p ) @ #vk.17 )
            case ClientConfirmRequest
            solve( splitEqs(1) )
              case split_case_1
              solve( splitEqs(2) )
                case split
                solve( !KU( wsenc(y_s, ~pass) ) @ #vk.6 )
                  case ClientCommitRequest
                  by contradiction /* non-normal terms */
                next
                  case c_wsenc
                  solve( !KU( ~pass ) @ #vk.18 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case split_case_2
              solve( splitEqs(2) )
                case split
                solve( !KU( senc(<'1', nonce_s>, z^~x_c.1) ) @ #vk.7 )
                  case ServerCommitResponse
                  solve( splitEqs(7) )
                    case split
                    solve( !KU( wsenc(z, ~pass.2) ) @ #vk.19 )
                      case ClientCommitRequest
                      by contradiction /* non-normal terms */
                    next
                      case c_wsenc
                      solve( !KU( ~pass.2 ) @ #vk.25 )
                        case RevealPassword
                        solve( !KU( z^~x_c.1 ) @ #vk.19 )
                          case ClientCommitRequest
                          solve( !KU( wsenc('g'^(~x_c.1*inv(~x_c)), ~pass) ) @ #vk.10 )
                            case c_wsenc
                            solve( !KU( ~pass ) @ #vk.27 )
                              case RevealPassword
                              by contradiction /* from formulas */
                            qed
                          qed
                        next
                          case c_exp
                          by solve( !KU( ~x_c.1 ) @ #vk.26 )
                        qed
                      qed
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( wsenc(z, ~pass.2) ) @ #vk.18 )
                    case ClientCommitRequest
                    by contradiction /* non-normal terms */
                  next
                    case c_wsenc
                    solve( !KU( ~pass.2 ) @ #vk.25 )
                      case RevealPassword
                      solve( !KU( z^~x_c.1 ) @ #vk.18 )
                        case ClientCommitRequest
                        solve( !KU( wsenc('g'^(~x_c.1*inv(~x_c)), ~pass) ) @ #vk.10 )
                          case c_wsenc
                          solve( !KU( ~pass ) @ #vk.27 )
                            case RevealPassword
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case c_exp
                        by solve( !KU( ~x_c.1 ) @ #vk.26 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case ServerConfirmResponse
            by contradiction /* cyclic */
          qed
        next
          case ClientConfirmRequest_case_3
          solve( !KU( ~nonce_p ) @ #vk.17 )
            case ClientConfirmRequest
            solve( !KU( wsenc(key^inv(~x_c.1), ~pass.2) ) @ #vk.18 )
              case c_wsenc
              solve( !KU( ~pass.2 ) @ #vk.22 )
                case RevealPassword
                solve( !KU( wsenc(key^inv(~x_s), ~pass.2) ) @ #vk.14 )
                  case c_wsenc
                  solve( !KU( ~pass.2 ) @ #vk.24 )
                    case RevealPassword
                    solve( !KU( wsenc(key^inv(~x_c), ~pass) ) @ #vk.10 )
                      case c_wsenc
                      solve( !KU( ~pass ) @ #vk.26 )
                        case RevealPassword
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case ServerConfirmResponse
            by contradiction /* cyclic */
          qed
        next
          case ClientConfirmRequest_case_4
          solve( !KU( ~nonce_p ) @ #vk.17 )
            case ClientConfirmRequest
            solve( !KU( x^(~x_c.1*x.2) ) @ #vk.16 )
              case ClientCommitRequest_case_1
              solve( !KU( ~pass.3 ) @ #vk.23 )
                case RevealPassword
                by solve( !KU( ~x_c.1 ) @ #vk.24 )
              qed
            next
              case ClientCommitRequest_case_2
              solve( !KU( ~pass.2 ) @ #vk.21 )
                case RevealPassword
                solve( !KU( senc(<'1', nonce_s>, 'g'^(~x_c.1*x.1)) ) @ #vk.9 )
                  case ServerCommitResponse
                  solve( !KU( wsenc('g'^x.1, ~pass.1) ) @ #vk.20 )
                    case ClientCommitRequest
                    by solve( !KU( ~x_c.2 ) @ #vk.23 )
                  next
                    case ServerCommitResponse
                    by solve( !KU( ~x_s ) @ #vk.24 )
                  next
                    case c_wsenc
                    solve( !KU( wsenc('g'^x.2, ~pass.2) ) @ #vk.15 )
                      case ClientCommitRequest
                      solve( !KU( ~x.1 ) @ #vk.24 )
                        case ClientConfirmRequest_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_8
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case RevealPassword
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerCommitResponse
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case fresh
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      qed
                    next
                      case ServerCommitResponse
                      solve( !KU( ~x.1 ) @ #vk.23 )
                        case ClientConfirmRequest_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_8
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case RevealPassword
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerCommitResponse
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case fresh
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      qed
                    next
                      case c_wsenc
                      solve( !KU( ~pass.2 ) @ #vk.28 )
                        case RevealPassword
                        solve( !KU( wsenc('g'^x, ~pass) ) @ #vk.12 )
                          case ClientCommitRequest
                          solve( !KU( ~x ) @ #vk.24 )
                            case ClientConfirmRequest_case_1
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_2
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_3
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_4
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_5
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_6
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_7
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_8
                            by solve( splitEqs(1) )
                          next
                            case RevealPassword
                            by solve( splitEqs(1) )
                          next
                            case ServerCommitResponse
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_1
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_2
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_3
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_4
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_5
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_6
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_7
                            by solve( splitEqs(1) )
                          next
                            case fresh
                            by solve( splitEqs(1) )
                          qed
                        next
                          case ServerCommitResponse
                          solve( !KU( ~x ) @ #vk.25 )
                            case ClientConfirmRequest_case_1
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_2
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_3
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_4
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_5
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_6
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_7
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_8
                            by solve( splitEqs(1) )
                          next
                            case RevealPassword
                            by solve( splitEqs(1) )
                          next
                            case ServerCommitResponse
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_1
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_2
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_3
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_4
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_5
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_6
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_7
                            by solve( splitEqs(1) )
                          next
                            case fresh
                            by solve( splitEqs(1) )
                          qed
                        next
                          case c_wsenc
                          solve( !KU( ~pass ) @ #vk.30 )
                            case RevealPassword
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( wsenc('g'^x.1, ~pass.1) ) @ #vk.19 )
                    case ClientCommitRequest
                    by solve( !KU( ~x_c.2 ) @ #vk.22 )
                  next
                    case ServerCommitResponse
                    by solve( !KU( ~x_s ) @ #vk.23 )
                  next
                    case c_wsenc
                    solve( !KU( wsenc('g'^x.2, ~pass.2) ) @ #vk.15 )
                      case ClientCommitRequest
                      solve( !KU( ~x.1 ) @ #vk.23 )
                        case ClientConfirmRequest_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_8
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case RevealPassword
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerCommitResponse
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case fresh
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      qed
                    next
                      case ServerCommitResponse
                      solve( !KU( ~x.1 ) @ #vk.22 )
                        case ClientConfirmRequest_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_8
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case RevealPassword
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerCommitResponse
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case fresh
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      qed
                    next
                      case c_wsenc
                      solve( !KU( ~pass.2 ) @ #vk.28 )
                        case RevealPassword
                        solve( !KU( wsenc('g'^x, ~pass) ) @ #vk.12 )
                          case ClientCommitRequest
                          solve( !KU( ~x ) @ #vk.23 )
                            case ClientConfirmRequest_case_1
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_2
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_3
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_4
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_5
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_6
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_7
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_8
                            by solve( splitEqs(1) )
                          next
                            case RevealPassword
                            by solve( splitEqs(1) )
                          next
                            case ServerCommitResponse
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_1
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_2
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_3
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_4
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_5
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_6
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_7
                            by solve( splitEqs(1) )
                          next
                            case fresh
                            by solve( splitEqs(1) )
                          qed
                        next
                          case ServerCommitResponse
                          solve( !KU( ~x ) @ #vk.24 )
                            case ClientConfirmRequest_case_1
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_2
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_3
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_4
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_5
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_6
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_7
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_8
                            by solve( splitEqs(1) )
                          next
                            case RevealPassword
                            by solve( splitEqs(1) )
                          next
                            case ServerCommitResponse
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_1
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_2
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_3
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_4
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_5
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_6
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_7
                            by solve( splitEqs(1) )
                          next
                            case fresh
                            by solve( splitEqs(1) )
                          qed
                        next
                          case c_wsenc
                          solve( !KU( ~pass ) @ #vk.30 )
                            case RevealPassword
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case ClientCommitRequest_case_3
              solve( !KU( ~pass.3 ) @ #vk.23 )
                case RevealPassword
                by solve( !KU( ~x_c.1 ) @ #vk.25 )
              qed
            next
              case ServerCommitResponse_case_1
              solve( !KU( ~pass.3 ) @ #vk.23 )
                case RevealPassword
                by solve( !KU( ~x_c.1 ) @ #vk.24 )
              qed
            next
              case ServerCommitResponse_case_2
              solve( !KU( ~pass.3 ) @ #vk.23 )
                case RevealPassword
                by solve( !KU( ~x_c.1 ) @ #vk.26 )
              qed
            next
              case c_exp
              by solve( !KU( ~x_c.1 ) @ #vk.23 )
            qed
          next
            case ServerConfirmResponse_case_1
            solve( splitEqs(5) )
              case split_case_1
              by contradiction /* cyclic */
            next
              case split_case_2
              by contradiction /* cyclic */
            qed
          next
            case ServerConfirmResponse_case_2
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_3
            solve( splitEqs(4) )
              case split_case_1
              by contradiction /* cyclic */
            next
              case split_case_2
              solve( splitEqs(1) )
                case split_case_1
                by contradiction /* cyclic */
              next
                case split_case_2
                by contradiction /* cyclic */
              qed
            next
              case split_case_3
              solve( splitEqs(6) )
                case split_case_1
                by contradiction /* cyclic */
              next
                case split_case_2
                by contradiction /* cyclic */
              next
                case split_case_3
                by contradiction /* cyclic */
              qed
            qed
          qed
        next
          case ClientConfirmRequest_case_5
          solve( !KU( ~nonce_p ) @ #vk.17 )
            case ClientConfirmRequest
            solve( !KU( wsenc(x^(x.1*inv(~x_c.1)), ~pass.2) ) @ #vk.18 )
              case c_wsenc
              solve( !KU( ~pass.2 ) @ #vk.22 )
                case RevealPassword
                solve( !KU( x^(x.1*inv(~x_c.1)) ) @ #vk.22 )
                  case ClientCommitRequest_case_1
                  solve( !KU( ~pass.3 ) @ #vk.25 )
                    case RevealPassword
                    by solve( !KU( ~x_c.1 ) @ #vk.27 )
                  qed
                next
                  case ClientCommitRequest_case_2
                  solve( !KU( ~pass.3 ) @ #vk.25 )
                    case RevealPassword
                    by solve( !KU( ~x_c.2 ) @ #vk.29 )
                  qed
                next
                  case ServerCommitResponse_case_1
                  solve( !KU( ~pass.3 ) @ #vk.25 )
                    case RevealPassword
                    by solve( !KU( ~x_c.1 ) @ #vk.28 )
                  qed
                next
                  case ServerCommitResponse_case_2
                  solve( !KU( ~pass.3 ) @ #vk.25 )
                    case RevealPassword
                    by solve( !KU( ~x_c.1 ) @ #vk.30 )
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_c.1 ) @ #vk.27 )
                qed
              qed
            qed
          next
            case ServerConfirmResponse_case_1
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_2
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_3
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_4
            by contradiction /* cyclic */
          qed
        next
          case ClientConfirmRequest_case_6
          solve( !KU( ~nonce_p ) @ #vk.17 )
            case ClientConfirmRequest
            solve( !KU( wsenc(x^inv((~x_c.1*x.1)), ~pass.2) ) @ #vk.18 )
              case c_wsenc
              solve( !KU( ~pass.2 ) @ #vk.22 )
                case RevealPassword
                solve( !KU( wsenc(x^inv((~x_s*x.1)), ~pass.2) ) @ #vk.14 )
                  case c_wsenc
                  solve( !KU( ~pass.2 ) @ #vk.24 )
                    case RevealPassword
                    solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass) ) @ #vk.10 )
                      case c_wsenc
                      solve( !KU( ~pass ) @ #vk.26 )
                        case RevealPassword
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case ServerConfirmResponse
            by contradiction /* cyclic */
          qed
        next
          case ClientConfirmRequest_case_7
          solve( !KU( ~nonce_p ) @ #vk.17 )
            case ClientConfirmRequest
            solve( splitEqs(1) )
              case split_case_1
              solve( splitEqs(2) )
                case split
                solve( !KU( x^(~x_c*inv(x.1)) ) @ #vk.16 )
                  case ClientCommitRequest
                  solve( !KU( ~pass ) @ #vk.21 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_c ) @ #vk.23 )
                qed
              qed
            next
              case split_case_2
              solve( splitEqs(2) )
                case split_case_1
                solve( !KU( x^(~x_s*inv(x.1)) ) @ #vk.16 )
                  case ServerCommitResponse
                  solve( !KU( ~pass.1 ) @ #vk.21 )
                    case RevealPassword
                    solve( !KU( senc(<'1', nonce_s>, 'g'^(~x_s*inv(x))) ) @ #vk.9 )
                      case ServerCommitResponse
                      solve( splitEqs(8) )
                        case split_case_1
                        solve( !KU( wsenc('g'^(~x_s*inv((x*~x_c.1))), ~pass.2) ) @ #vk.19 )
                          case c_wsenc
                          solve( !KU( ~pass.2 ) @ #vk.24 )
                            case RevealPassword
                            solve( !KU( 'g'^(~x_s*inv((x*~x_c.1))) ) @ #vk.24 )
                              case ServerCommitResponse
                              by solve( !KU( ~x_c.1 ) @ #vk.27 )
                            next
                              case c_exp
                              by solve( !KU( ~x_s ) @ #vk.28 )
                            qed
                          qed
                        qed
                      next
                        case split_case_2
                        solve( !KU( wsenc('g'^(~x_s*inv((x*~x_c.1))), ~pass.2) ) @ #vk.20 )
                          case c_wsenc
                          solve( !KU( ~pass.2 ) @ #vk.28 )
                            case RevealPassword
                            solve( !KU( 'g'^(~x_s*inv((x*~x_c.1))) ) @ #vk.28 )
                              case ServerCommitResponse
                              by solve( !KU( ~x_c.1 ) @ #vk.31 )
                            next
                              case c_exp
                              by solve( !KU( ~x_s ) @ #vk.32 )
                            qed
                          qed
                        qed
                      qed
                    next
                      case c_senc
                      solve( !KU( wsenc('g'^(~x_s*inv((x*~x_c.1))), ~pass.2) ) @ #vk.19 )
                        case c_wsenc
                        solve( !KU( ~pass.2 ) @ #vk.28 )
                          case RevealPassword
                          solve( !KU( 'g'^(~x_s*inv((x*~x_c.1))) ) @ #vk.28 )
                            case ServerCommitResponse
                            by solve( !KU( ~x_c.1 ) @ #vk.31 )
                          next
                            case c_exp
                            by solve( !KU( ~x_s ) @ #vk.32 )
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_s ) @ #vk.23 )
                qed
              next
                case split_case_2
                solve( !KU( wsenc(x^(x.1*inv((~x_c.1*x.2))), ~pass.2) ) @ #vk.18 )
                  case c_wsenc
                  solve( !KU( ~pass.2 ) @ #vk.22 )
                    case RevealPassword
                    solve( !KU( x^(x.1*inv((~x_c.1*x.2))) ) @ #vk.22 )
                      case ClientCommitRequest_case_1
                      solve( !KU( ~pass.3 ) @ #vk.25 )
                        case RevealPassword
                        by solve( !KU( ~x_c.1 ) @ #vk.28 )
                      qed
                    next
                      case ClientCommitRequest_case_2
                      solve( !KU( ~pass.3 ) @ #vk.25 )
                        case RevealPassword
                        by solve( !KU( ~x_c.2 ) @ #vk.30 )
                      qed
                    next
                      case ServerCommitResponse_case_1
                      solve( !KU( ~pass.3 ) @ #vk.25 )
                        case RevealPassword
                        by solve( !KU( ~x_c.1 ) @ #vk.29 )
                      qed
                    next
                      case ServerCommitResponse_case_2
                      solve( !KU( ~pass.3 ) @ #vk.25 )
                        case RevealPassword
                        by solve( !KU( ~x_c.1 ) @ #vk.31 )
                      qed
                    next
                      case c_exp
                      by solve( !KU( ~x_c.1 ) @ #vk.28 )
                    qed
                  qed
                qed
              next
                case split_case_3
                solve( !KU( x^(~x_s*x.1*inv(x.2)) ) @ #vk.16 )
                  case ClientCommitRequest_case_1
                  solve( !KU( ~pass.3 ) @ #vk.23 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.25 )
                  qed
                next
                  case ClientCommitRequest_case_2
                  solve( !KU( ~pass.3 ) @ #vk.23 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.25 )
                  qed
                next
                  case ServerCommitResponse_case_1
                  solve( !KU( ~pass.3 ) @ #vk.23 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.26 )
                  qed
                next
                  case ServerCommitResponse_case_2
                  solve( !KU( ~pass.3 ) @ #vk.23 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.26 )
                  qed
                next
                  case ServerCommitResponse_case_3
                  solve( !KU( ~pass.1 ) @ #vk.21 )
                    case RevealPassword
                    solve( !KU( senc(<'1', nonce_s>, 'g'^(~x_s*x*inv(x.1))) ) @ #vk.9 )
                      case ServerCommitResponse
                      solve( !KU( wsenc('g'^(~x_s*x*inv((~x_c.1*x.1))), ~pass.2) ) @ #vk.20 )
                        case c_wsenc
                        solve( !KU( ~pass.2 ) @ #vk.30 )
                          case RevealPassword
                          solve( !KU( 'g'^(~x_s*x*inv((~x_c.1*x.1))) ) @ #vk.30 )
                            case ClientCommitRequest_case_1
                            solve( !KU( ~pass.4 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.37 )
                            qed
                          next
                            case ClientCommitRequest_case_2
                            solve( !KU( ~pass.4 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.37 )
                            qed
                          next
                            case ServerCommitResponse_case_1
                            solve( !KU( ~pass.4 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.38 )
                            qed
                          next
                            case ServerCommitResponse_case_2
                            solve( !KU( ~pass.4 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.38 )
                            qed
                          next
                            case ServerCommitResponse_case_3
                            by solve( !KU( ~x_c.1 ) @ #vk.34 )
                          next
                            case c_exp
                            by solve( !KU( ~x_s ) @ #vk.34 )
                          qed
                        qed
                      qed
                    next
                      case c_senc
                      solve( !KU( wsenc('g'^(~x_s*x*inv((~x_c.1*x.1))), ~pass.2) ) @ #vk.19 )
                        case c_wsenc
                        solve( !KU( ~pass.2 ) @ #vk.30 )
                          case RevealPassword
                          solve( !KU( 'g'^(~x_s*x*inv((~x_c.1*x.1))) ) @ #vk.30 )
                            case ClientCommitRequest_case_1
                            solve( !KU( ~pass.3 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.37 )
                            qed
                          next
                            case ClientCommitRequest_case_2
                            solve( !KU( ~pass.3 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.37 )
                            qed
                          next
                            case ServerCommitResponse_case_1
                            solve( !KU( ~pass.3 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.38 )
                            qed
                          next
                            case ServerCommitResponse_case_2
                            solve( !KU( ~pass.3 ) @ #vk.34 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.38 )
                            qed
                          next
                            case ServerCommitResponse_case_3
                            by solve( !KU( ~x_c.1 ) @ #vk.34 )
                          next
                            case c_exp
                            by solve( !KU( ~x_s ) @ #vk.34 )
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_s ) @ #vk.23 )
                qed
              qed
            next
              case split_case_3
              solve( !KU( x^(~x_c*x.1*inv(x.2)) ) @ #vk.16 )
                case ClientCommitRequest_case_1
                solve( !KU( ~pass.3 ) @ #vk.23 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.25 )
                qed
              next
                case ClientCommitRequest_case_2
                solve( !KU( ~pass.3 ) @ #vk.23 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.25 )
                qed
              next
                case ClientCommitRequest_case_3
                solve( !KU( ~pass ) @ #vk.21 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              next
                case ServerCommitResponse_case_1
                solve( !KU( ~pass.3 ) @ #vk.23 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.26 )
                qed
              next
                case ServerCommitResponse_case_2
                solve( !KU( ~pass.3 ) @ #vk.23 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.26 )
                qed
              next
                case c_exp
                by solve( !KU( ~x_c ) @ #vk.23 )
              qed
            qed
          next
            case ServerConfirmResponse_case_1
            solve( splitEqs(1) )
              case split_case_1
              solve( splitEqs(2) )
                case split_case_1
                by contradiction /* cyclic */
              next
                case split_case_2
                by solve( splitEqs(4) )
              next
                case split_case_3
                solve( splitEqs(6) )
                  case split_case_1
                  by contradiction /* cyclic */
                next
                  case split_case_2
                  by contradiction /* cyclic */
                next
                  case split_case_3
                  by contradiction /* cyclic */
                qed
              qed
            next
              case split_case_2
              solve( splitEqs(6) )
                case split_case_1
                by contradiction /* cyclic */
              next
                case split_case_2
                by contradiction /* cyclic */
              qed
            qed
          next
            case ServerConfirmResponse_case_2
            by contradiction /* cyclic */
          qed
        next
          case ServerCommitResponse
          solve( !KU( ~nonce_p ) @ #vk.16 )
            case ClientConfirmRequest
            solve( splitEqs(1) )
              case split_case_1
              solve( !KU( wsenc(key^inv(~x_c), ~pass) ) @ #vk.6 )
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.18 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_2
              solve( splitEqs(2) )
                case split
                solve( !KU( senc(<'1', nonce_s>, y_s^~x_c) ) @ #vk.7 )
                  case ServerCommitResponse
                  solve( splitEqs(7) )
                    case split
                    solve( !KU( wsenc(y_s, ~pass) ) @ #vk.7 )
                      case ClientCommitRequest
                      by contradiction /* non-normal terms */
                    next
                      case c_wsenc
                      solve( !KU( ~pass ) @ #vk.21 )
                        case RevealPassword
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( wsenc(y_s, ~pass) ) @ #vk.7 )
                    case ClientCommitRequest
                    by contradiction /* non-normal terms */
                  next
                    case c_wsenc
                    solve( !KU( ~pass ) @ #vk.21 )
                      case RevealPassword
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case split_case_3
              solve( splitEqs(2) )
                case split
                solve( !KU( senc(<'1', nonce_s>, wsdec(scr_0, ~pass)^~x_c) ) @ #vk.7 )
                  case ServerCommitResponse
                  solve( splitEqs(7) )
                    case split
                    solve( !KU( wsdec(scr_0, ~pass)^~x_c ) @ #vk.16 )
                      case c_exp
                      by solve( !KU( ~x_c ) @ #vk.21 )
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( wsdec(scr_0, ~pass)^~x_c ) @ #vk.15 )
                    case c_exp
                    by solve( !KU( ~x_c ) @ #vk.21 )
                  qed
                qed
              qed
            next
              case split_case_4
              solve( !KU( wsenc(x^(x.1*inv(~x_c)), ~pass) ) @ #vk.6 )
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.18 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_5
              solve( !KU( x^(~x_c*x.1) ) @ #vk.15 )
                case ClientCommitRequest_case_1
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.20 )
                qed
              next
                case ClientCommitRequest_case_2
                solve( !KU( ~pass ) @ #vk.17 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              next
                case ClientCommitRequest_case_3
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.21 )
                qed
              next
                case ServerCommitResponse_case_1
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.20 )
                qed
              next
                case ServerCommitResponse_case_2
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.22 )
                qed
              next
                case c_exp
                by solve( !KU( ~x_c ) @ #vk.19 )
              qed
            next
              case split_case_6
              solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass) ) @ #vk.6 )
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.18 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_7
              solve( splitEqs(2) )
                case split_case_1
                solve( !KU( x^(~x_s*inv(x.1)) ) @ #vk.15 )
                  case ServerCommitResponse
                  solve( !KU( ~pass.1 ) @ #vk.17 )
                    case RevealPassword
                    solve( !KU( senc(<'1', nonce_s>, 'g'^(~x_s*inv(x))) ) @ #vk.9 )
                      case ServerCommitResponse
                      solve( splitEqs(8) )
                        case split_case_1
                        solve( !KU( wsenc('g'^(~x_s*inv((~x_c*x))), ~pass) ) @ #vk.9 )
                          case c_wsenc
                          solve( !KU( ~pass ) @ #vk.21 )
                            case RevealPassword
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case split_case_2
                        solve( !KU( wsenc('g'^(~x_s*inv((~x_c*x))), ~pass) ) @ #vk.9 )
                          case c_wsenc
                          solve( !KU( ~pass ) @ #vk.24 )
                            case RevealPassword
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    next
                      case c_senc
                      solve( !KU( wsenc('g'^(~x_s*inv((~x_c*x))), ~pass) ) @ #vk.9 )
                        case c_wsenc
                        solve( !KU( ~pass ) @ #vk.24 )
                          case RevealPassword
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_s ) @ #vk.19 )
                qed
              next
                case split_case_2
                solve( !KU( wsenc(x^(x.1*inv((~x_c*x.2))), ~pass) ) @ #vk.6 )
                  case c_wsenc
                  solve( !KU( ~pass ) @ #vk.18 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case split_case_3
                solve( !KU( x^(~x_s*x.1*inv(x.2)) ) @ #vk.15 )
                  case ClientCommitRequest_case_1
                  solve( !KU( ~pass.2 ) @ #vk.19 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.21 )
                  qed
                next
                  case ClientCommitRequest_case_2
                  solve( !KU( ~pass.2 ) @ #vk.19 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.21 )
                  qed
                next
                  case ServerCommitResponse_case_1
                  solve( !KU( ~pass.2 ) @ #vk.19 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.22 )
                  qed
                next
                  case ServerCommitResponse_case_2
                  solve( !KU( ~pass.2 ) @ #vk.19 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.22 )
                  qed
                next
                  case ServerCommitResponse_case_3
                  solve( !KU( ~pass.1 ) @ #vk.17 )
                    case RevealPassword
                    solve( !KU( senc(<'1', nonce_s>, 'g'^(~x_s*x*inv(x.1))) ) @ #vk.9 )
                      case ServerCommitResponse
                      solve( !KU( wsenc('g'^(~x_s*x*inv((~x_c*x.1))), ~pass) ) @ #vk.9 )
                        case c_wsenc
                        solve( !KU( ~pass ) @ #vk.26 )
                          case RevealPassword
                          by contradiction /* from formulas */
                        qed
                      qed
                    next
                      case c_senc
                      solve( !KU( wsenc('g'^(~x_s*x*inv((~x_c*x.1))), ~pass) ) @ #vk.9 )
                        case c_wsenc
                        solve( !KU( ~pass ) @ #vk.26 )
                          case RevealPassword
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_s ) @ #vk.19 )
                qed
              qed
            qed
          next
            case ServerConfirmResponse_case_1
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_2
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_3
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_4
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_5
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_6
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_7
            by contradiction /* cyclic */
          qed
        qed
      qed
    next
      case c_senc
      solve( !KU( ~nonce_p ) @ #vk.9 )
        case ClientConfirmRequest
        solve( splitEqs(1) )
          case split_case_1
          solve( !KU( wsenc(key^inv(~x_c), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_2
          solve( !KU( senc(<'1', nonce_s>, y_s^~x_c) ) @ #vk.4 )
            case ServerCommitResponse
            solve( splitEqs(4) )
              case split
              solve( !KU( wsenc(y_s, ~pass) ) @ #vk.4 )
                case ClientCommitRequest
                by contradiction /* non-normal terms */
              next
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.15 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case c_senc
            solve( !KU( wsenc(y_s, ~pass) ) @ #vk.4 )
              case ClientCommitRequest
              by contradiction /* non-normal terms */
            next
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.14 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case split_case_3
          solve( !KU( senc(<'1', nonce_s>, wsdec(scr_0, ~pass)^~x_c) ) @ #vk.4 )
            case ServerCommitResponse
            solve( splitEqs(4) )
              case split
              solve( !KU( wsdec(scr_0, ~pass)^~x_c ) @ #vk.8 )
                case c_exp
                by solve( !KU( ~x_c ) @ #vk.15 )
              qed
            qed
          next
            case c_senc
            solve( !KU( wsdec(scr_0, ~pass)^~x_c ) @ #vk.8 )
              case c_exp
              by solve( !KU( ~x_c ) @ #vk.14 )
            qed
          qed
        next
          case split_case_4
          solve( !KU( wsenc(x^(x.1*inv(~x_c)), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_5
          solve( !KU( x^(~x_c*x.1) ) @ #vk.8 )
            case ClientCommitRequest_case_1
            solve( !KU( ~pass.1 ) @ #vk.12 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.13 )
            qed
          next
            case ClientCommitRequest_case_2
            solve( !KU( ~pass ) @ #vk.10 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case ClientCommitRequest_case_3
            solve( !KU( ~pass.1 ) @ #vk.12 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.14 )
            qed
          next
            case ServerCommitResponse_case_1
            solve( !KU( ~pass.1 ) @ #vk.11 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.12 )
            qed
          next
            case ServerCommitResponse_case_2
            solve( !KU( ~pass.1 ) @ #vk.11 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.16 )
            qed
          next
            case c_exp
            by solve( !KU( ~x_c ) @ #vk.12 )
          qed
        next
          case split_case_6
          solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_7
          solve( !KU( wsenc(x^(x.1*inv((~x_c*x.2))), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case ServerConfirmResponse_case_1
        solve( !KU( wsenc(key^inv(~x_s), ~pass.1) ) @ #vk.11 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.16 )
            case RevealPassword
            solve( !KU( wsenc(key^inv(~x_c), ~pass) ) @ #vk.5 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.18 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case ServerConfirmResponse_case_2
        solve( splitEqs(1) )
          case split
          solve( !KU( y_c^~x_s ) @ #vk.8 )
            case ServerCommitResponse
            solve( !KU( ~pass.1 ) @ #vk.15 )
              case RevealPassword
              solve( !KU( wsenc('g', ~pass.1) ) @ #vk.12 )
                case c_wsenc
                solve( !KU( wsenc('g'^(~x_s*inv(~x_c)), ~pass) ) @ #vk.6 )
                  case c_wsenc
                  solve( !KU( ~pass ) @ #vk.18 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          next
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.16 )
          qed
        qed
      next
        case ServerConfirmResponse_case_3
        solve( !KU( x^(~x_s*x.2) ) @ #vk.8 )
          case ClientCommitRequest_case_1
          solve( !KU( ~pass.2 ) @ #vk.17 )
            case RevealPassword
            by solve( !KU( ~x_s ) @ #vk.18 )
          qed
        next
          case ClientCommitRequest_case_2
          solve( !KU( ~pass.2 ) @ #vk.17 )
            case RevealPassword
            by solve( !KU( ~x_s ) @ #vk.19 )
          qed
        next
          case ServerCommitResponse_case_1
          solve( !KU( ~pass.2 ) @ #vk.17 )
            case RevealPassword
            by solve( !KU( ~x_s ) @ #vk.18 )
          qed
        next
          case ServerCommitResponse_case_2
          solve( !KU( ~pass.1 ) @ #vk.15 )
            case RevealPassword
            solve( !KU( wsenc('g'^x.1, ~pass.1) ) @ #vk.12 )
              case ClientCommitRequest
              by solve( !KU( ~x_c.1 ) @ #vk.17 )
            next
              case ServerCommitResponse
              by solve( !KU( ~x_s.1 ) @ #vk.16 )
            next
              case c_wsenc
              solve( !KU( wsenc('g'^x, ~pass) ) @ #vk.6 )
                case ClientCommitRequest
                solve( !KU( ~x ) @ #vk.16 )
                  case ClientConfirmRequest_case_1
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_2
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_3
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_4
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_5
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_6
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_7
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_8
                  by solve( splitEqs(1) )
                next
                  case RevealPassword
                  by solve( splitEqs(1) )
                next
                  case ServerCommitResponse
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_1
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_2
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_3
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_4
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_5
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_6
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_7
                  by solve( splitEqs(1) )
                next
                  case fresh
                  by solve( splitEqs(1) )
                qed
              next
                case ServerCommitResponse
                solve( !KU( ~x ) @ #vk.17 )
                  case ClientConfirmRequest_case_1
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_2
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_3
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_4
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_5
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_6
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_7
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_8
                  by solve( splitEqs(1) )
                next
                  case RevealPassword
                  by solve( splitEqs(1) )
                next
                  case ServerCommitResponse
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_1
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_2
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_3
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_4
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_5
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_6
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_7
                  by solve( splitEqs(1) )
                next
                  case fresh
                  by solve( splitEqs(1) )
                qed
              next
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.19 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case ServerCommitResponse_case_3
          solve( !KU( ~pass.2 ) @ #vk.17 )
            case RevealPassword
            by solve( !KU( ~x_s ) @ #vk.20 )
          qed
        next
          case c_exp
          by solve( !KU( ~x_s ) @ #vk.17 )
        qed
      next
        case ServerConfirmResponse_case_4
        solve( !KU( wsenc(x^(x.1*inv(~x_s)), ~pass.1) ) @ #vk.11 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.16 )
            case RevealPassword
            solve( !KU( x^(x.1*inv(~x_s)) ) @ #vk.16 )
              case ClientCommitRequest_case_1
              solve( !KU( ~pass.2 ) @ #vk.19 )
                case RevealPassword
                by solve( !KU( ~x_s ) @ #vk.21 )
              qed
            next
              case ClientCommitRequest_case_2
              solve( !KU( ~pass.2 ) @ #vk.19 )
                case RevealPassword
                by solve( !KU( ~x_s ) @ #vk.23 )
              qed
            next
              case ServerCommitResponse_case_1
              solve( !KU( ~pass.2 ) @ #vk.19 )
                case RevealPassword
                by solve( !KU( ~x_s ) @ #vk.22 )
              qed
            next
              case ServerCommitResponse_case_2
              solve( !KU( ~pass.2 ) @ #vk.19 )
                case RevealPassword
                by solve( !KU( ~x_s.1 ) @ #vk.24 )
              qed
            next
              case c_exp
              by solve( !KU( ~x_s ) @ #vk.21 )
            qed
          qed
        qed
      next
        case ServerConfirmResponse_case_5
        solve( !KU( wsenc(x^inv((~x_s*x.1)), ~pass.1) ) @ #vk.11 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.16 )
            case RevealPassword
            solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass) ) @ #vk.5 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.18 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case ServerConfirmResponse_case_6
        solve( splitEqs(1) )
          case split_case_1
          solve( !KU( x^(~x_c*inv(x.1)) ) @ #vk.8 )
            case ClientCommitRequest
            solve( !KU( ~pass ) @ #vk.15 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case c_exp
            by solve( !KU( ~x_c ) @ #vk.17 )
          qed
        next
          case split_case_2
          solve( !KU( wsenc(x^(x.1*inv((~x_s*x.2))), ~pass.1) ) @ #vk.11 )
            case c_wsenc
            solve( !KU( ~pass.1 ) @ #vk.16 )
              case RevealPassword
              solve( !KU( x^(x.1*inv((~x_s*x.2))) ) @ #vk.16 )
                case ClientCommitRequest_case_1
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_s ) @ #vk.22 )
                qed
              next
                case ClientCommitRequest_case_2
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_s ) @ #vk.24 )
                qed
              next
                case ServerCommitResponse_case_1
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_s ) @ #vk.23 )
                qed
              next
                case ServerCommitResponse_case_2
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_s.1 ) @ #vk.25 )
                qed
              next
                case c_exp
                by solve( !KU( ~x_s ) @ #vk.22 )
              qed
            qed
          qed
        next
          case split_case_3
          solve( !KU( x^(~x_c*x.1*inv(x.2)) ) @ #vk.8 )
            case ClientCommitRequest_case_1
            solve( !KU( ~pass.2 ) @ #vk.17 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.19 )
            qed
          next
            case ClientCommitRequest_case_2
            solve( !KU( ~pass.2 ) @ #vk.17 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.19 )
            qed
          next
            case ClientCommitRequest_case_3
            solve( !KU( ~pass ) @ #vk.15 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case ServerCommitResponse_case_1
            solve( !KU( ~pass.2 ) @ #vk.17 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.20 )
            qed
          next
            case ServerCommitResponse_case_2
            solve( !KU( ~pass.2 ) @ #vk.17 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.20 )
            qed
          next
            case c_exp
            by solve( !KU( ~x_c ) @ #vk.17 )
          qed
        qed
      next
        case ServerConfirmResponse_case_7
        solve( splitEqs(1) )
          case split
          solve( !KU( wsdec(client_commit_request, ~pass.1)^~x_s ) @ #vk.8 )
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.16 )
          qed
        qed
      qed
    qed
  qed
next
  case ServerConfirmResponse
  solve( StateServerCommitResponse( tid, A, B, pass, x_s, y_s, nonce_s,
                                    key, y_c
         ) ▶₀ #i )
    case ServerCommitResponse
    solve( !KU( senc(<'2', ~nonce_s, nonce_p>, key) ) @ #vk )
      case ClientConfirmRequest
      solve( splitEqs(1) )
        case split_case_1
        solve( splitEqs(2) )
          case split
          solve( !KU( wsenc(wsdec(client_commit_request, ~pass)^(~x_s*inv(~x_c)),
                            ~pass.1)
                 ) @ #vk.5 )
            case c_wsenc
            solve( !KU( ~pass.1 ) @ #vk.11 )
              case RevealPassword
              solve( !KU( wsdec(client_commit_request, ~pass)^(~x_s*inv(~x_c))
                     ) @ #vk.11 )
                case c_exp
                by solve( !KU( ~x_s ) @ #vk.14 )
              qed
            qed
          qed
        qed
      next
        case split_case_2
        solve( splitEqs(2) )
          case split
          solve( !KU( wsenc(y_c, ~pass) ) @ #vk.1 )
            case ClientCommitRequest
            by contradiction /* non-normal terms */
          next
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case split_case_3
        solve( !KU( wsenc(key^inv(~x_s), ~pass) ) @ #vk.1 )
          case c_wsenc
          solve( !KU( ~pass ) @ #vk.11 )
            case RevealPassword
            by contradiction /* from formulas */
          qed
        qed
      next
        case split_case_4
        solve( !KU( wsenc(x^x.1, ~pass) ) @ #vk.1 )
          case ClientCommitRequest
          solve( splitEqs(2) )
            case split_case_1
            solve( (#k < #i)  ∥ (#i < #k) )
              case case_1
              solve( Commit( A1, B1, <'responder', ~nonce_p, ~nonce_s> ) @ #k )
                case ServerConfirmResponse
                solve( StateServerCommitResponse( tid.1, A1, B1, pass.1, x_s.1, y_s,
                                                  ~nonce_s, key, y_c
                       ) ▶₀ #k )
                  case ServerCommitResponse
                  by contradiction /* cyclic */
                qed
              qed
            next
              case case_2
              solve( Commit( A1, B1, <'responder', ~nonce_p, ~nonce_s> ) @ #k )
                case ServerConfirmResponse
                solve( StateServerCommitResponse( tid.1, A1, B1, pass.1, x_s.1, y_s,
                                                  ~nonce_s, key, y_c
                       ) ▶₀ #k )
                  case ServerCommitResponse
                  by contradiction /* cyclic */
                qed
              qed
            qed
          next
            case split_case_2
            solve( !KU( wsenc('g'^(~x_c*~x_s*inv(~x_c.1)), ~pass.1) ) @ #vk.5 )
              case c_wsenc
              solve( !KU( ~pass.1 ) @ #vk.13 )
                case RevealPassword
                solve( !KU( 'g'^(~x_c*~x_s*inv(~x_c.1)) ) @ #vk.13 )
                  case ClientCommitRequest
                  solve( !KU( ~pass ) @ #vk.14 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                next
                  case ServerCommitResponse
                  solve( !KU( ~pass ) @ #vk.14 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_c ) @ #vk.16 )
                qed
              qed
            qed
          qed
        next
          case ServerCommitResponse
          solve( splitEqs(2) )
            case split
            solve( !KU( wsenc('g'^(~x_s*~x_s.1*inv(~x_c)), ~pass.1) ) @ #vk.5 )
              case c_wsenc
              solve( !KU( ~pass.1 ) @ #vk.12 )
                case RevealPassword
                solve( !KU( 'g'^(~x_s*~x_s.1*inv(~x_c)) ) @ #vk.12 )
                  case ServerCommitResponse_case_1
                  solve( !KU( ~pass ) @ #vk.13 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                next
                  case ServerCommitResponse_case_2
                  solve( !KU( ~pass ) @ #vk.13 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_s ) @ #vk.15 )
                qed
              qed
            qed
          qed
        next
          case c_wsenc
          solve( !KU( ~pass ) @ #vk.11 )
            case RevealPassword
            by contradiction /* from formulas */
          qed
        qed
      next
        case split_case_5
        solve( !KU( wsenc(x^inv((~x_s*x.1)), ~pass) ) @ #vk.1 )
          case c_wsenc
          solve( !KU( ~pass ) @ #vk.11 )
            case RevealPassword
            by contradiction /* from formulas */
          qed
        qed
      next
        case split_case_6
        solve( !KU( wsenc(x^(x.1*inv(~x_s)), ~pass) ) @ #vk.1 )
          case c_wsenc
          solve( !KU( ~pass ) @ #vk.11 )
            case RevealPassword
            by contradiction /* from formulas */
          qed
        qed
      next
        case split_case_7
        solve( splitEqs(2) )
          case split_case_1
          solve( !KU( wsenc(x^(~x_c*inv((~x_s*x.1))), ~pass) ) @ #vk.1 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_2
          solve( !KU( wsenc(x^(x.1*inv((~x_s*x.2))), ~pass) ) @ #vk.1 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_3
          solve( !KU( wsenc(x^(~x_c*x.1*inv((~x_s*x.2))), ~pass) ) @ #vk.1 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    next
      case c_senc
      solve( !KU( ~nonce_s ) @ #vk.9 )
        case ClientConfirmRequest_case_1
        solve( splitEqs(1) )
          case split
          solve( !KU( wsdec(scr_0, ~pass.1)^~x_c ) @ #vk.8 )
            case c_exp
            by solve( !KU( ~x_c ) @ #vk.17 )
          qed
        qed
      next
        case ClientConfirmRequest_case_2
        solve( splitEqs(1) )
          case split
          solve( !KU( wsenc(z, ~pass.1) ) @ #vk.11 )
            case ClientCommitRequest
            by contradiction /* non-normal terms */
          next
            case c_wsenc
            solve( !KU( ~pass.1 ) @ #vk.17 )
              case RevealPassword
              solve( !KU( z^~x_c ) @ #vk.10 )
                case ClientCommitRequest
                solve( !KU( wsenc('g'^(~x_c*inv(~x_s)), ~pass) ) @ #vk.7 )
                  case c_wsenc
                  solve( !KU( ~pass ) @ #vk.19 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case c_exp
                by solve( !KU( ~x_c ) @ #vk.18 )
              qed
            qed
          qed
        qed
      next
        case ClientConfirmRequest_case_3
        solve( !KU( wsenc(key^inv(~x_c), ~pass.1) ) @ #vk.11 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.17 )
            case RevealPassword
            solve( !KU( wsenc(key^inv(~x_s), ~pass) ) @ #vk.6 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.19 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case ClientConfirmRequest_case_4
        solve( !KU( x^(~x_c*x.1) ) @ #vk.7 )
          case ClientCommitRequest_case_1
          solve( !KU( ~pass.2 ) @ #vk.18 )
            case RevealPassword
            by solve( !KU( ~x_c ) @ #vk.19 )
          qed
        next
          case ClientCommitRequest_case_2
          solve( !KU( ~pass.1 ) @ #vk.16 )
            case RevealPassword
            solve( !KU( wsenc('g'^x, ~pass.1) ) @ #vk.12 )
              case ClientCommitRequest
              by solve( !KU( ~x_c.1 ) @ #vk.17 )
            next
              case ServerCommitResponse
              by solve( !KU( ~x_s.1 ) @ #vk.18 )
            next
              case c_wsenc
              solve( !KU( wsenc('g'^x.1, ~pass) ) @ #vk.7 )
                case ClientCommitRequest
                solve( !KU( ~x ) @ #vk.18 )
                  case ClientConfirmRequest_case_1
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_2
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_3
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_4
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_5
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_6
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_7
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_8
                  by solve( splitEqs(1) )
                next
                  case RevealPassword
                  by solve( splitEqs(1) )
                next
                  case ServerCommitResponse
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_1
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_2
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_3
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_4
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_5
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_6
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_7
                  by solve( splitEqs(1) )
                next
                  case fresh
                  by solve( splitEqs(1) )
                qed
              next
                case ServerCommitResponse
                solve( !KU( ~x ) @ #vk.17 )
                  case ClientConfirmRequest_case_1
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_2
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_3
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_4
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_5
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_6
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_7
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_8
                  by solve( splitEqs(1) )
                next
                  case RevealPassword
                  by solve( splitEqs(1) )
                next
                  case ServerCommitResponse
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_1
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_2
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_3
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_4
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_5
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_6
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_7
                  by solve( splitEqs(1) )
                next
                  case fresh
                  by solve( splitEqs(1) )
                qed
              next
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.20 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case ClientCommitRequest_case_3
          solve( !KU( ~pass.2 ) @ #vk.18 )
            case RevealPassword
            by solve( !KU( ~x_c ) @ #vk.20 )
          qed
        next
          case ServerCommitResponse_case_1
          solve( !KU( ~pass.2 ) @ #vk.18 )
            case RevealPassword
            by solve( !KU( ~x_c ) @ #vk.19 )
          qed
        next
          case ServerCommitResponse_case_2
          solve( !KU( ~pass.2 ) @ #vk.18 )
            case RevealPassword
            by solve( !KU( ~x_c ) @ #vk.21 )
          qed
        next
          case c_exp
          by solve( !KU( ~x_c ) @ #vk.18 )
        qed
      next
        case ClientConfirmRequest_case_5
        solve( !KU( wsenc(x^(x.1*inv(~x_c)), ~pass.1) ) @ #vk.11 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.17 )
            case RevealPassword
            solve( !KU( x^(x.1*inv(~x_c)) ) @ #vk.17 )
              case ClientCommitRequest_case_1
              solve( !KU( ~pass.2 ) @ #vk.20 )
                case RevealPassword
                by solve( !KU( ~x_c ) @ #vk.22 )
              qed
            next
              case ClientCommitRequest_case_2
              solve( !KU( ~pass.2 ) @ #vk.20 )
                case RevealPassword
                by solve( !KU( ~x_c.1 ) @ #vk.24 )
              qed
            next
              case ServerCommitResponse_case_1
              solve( !KU( ~pass.2 ) @ #vk.20 )
                case RevealPassword
                by solve( !KU( ~x_c ) @ #vk.23 )
              qed
            next
              case ServerCommitResponse_case_2
              solve( !KU( ~pass.2 ) @ #vk.20 )
                case RevealPassword
                by solve( !KU( ~x_c ) @ #vk.25 )
              qed
            next
              case c_exp
              by solve( !KU( ~x_c ) @ #vk.22 )
            qed
          qed
        qed
      next
        case ClientConfirmRequest_case_6
        solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass.1) ) @ #vk.11 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.17 )
            case RevealPassword
            solve( !KU( wsenc(x^inv((~x_s*x.1)), ~pass) ) @ #vk.6 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.19 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case ClientConfirmRequest_case_7
        solve( splitEqs(1) )
          case split_case_1
          solve( !KU( x^(~x_s*inv(x.1)) ) @ #vk.8 )
            case ServerCommitResponse
            solve( !KU( ~pass ) @ #vk.16 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.18 )
          qed
        next
          case split_case_2
          solve( !KU( wsenc(x^(x.1*inv((~x_c*x.2))), ~pass.1) ) @ #vk.11 )
            case c_wsenc
            solve( !KU( ~pass.1 ) @ #vk.17 )
              case RevealPassword
              solve( !KU( x^(x.1*inv((~x_c*x.2))) ) @ #vk.17 )
                case ClientCommitRequest_case_1
                solve( !KU( ~pass.2 ) @ #vk.20 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.23 )
                qed
              next
                case ClientCommitRequest_case_2
                solve( !KU( ~pass.2 ) @ #vk.20 )
                  case RevealPassword
                  by solve( !KU( ~x_c.1 ) @ #vk.25 )
                qed
              next
                case ServerCommitResponse_case_1
                solve( !KU( ~pass.2 ) @ #vk.20 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.24 )
                qed
              next
                case ServerCommitResponse_case_2
                solve( !KU( ~pass.2 ) @ #vk.20 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.26 )
                qed
              next
                case c_exp
                by solve( !KU( ~x_c ) @ #vk.23 )
              qed
            qed
          qed
        next
          case split_case_3
          solve( !KU( x^(~x_s*x.1*inv(x.2)) ) @ #vk.8 )
            case ClientCommitRequest_case_1
            solve( !KU( ~pass.2 ) @ #vk.18 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.20 )
            qed
          next
            case ClientCommitRequest_case_2
            solve( !KU( ~pass.2 ) @ #vk.18 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.20 )
            qed
          next
            case ServerCommitResponse_case_1
            solve( !KU( ~pass.2 ) @ #vk.18 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.21 )
            qed
          next
            case ServerCommitResponse_case_2
            solve( !KU( ~pass.2 ) @ #vk.18 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.21 )
            qed
          next
            case ServerCommitResponse_case_3
            solve( !KU( ~pass ) @ #vk.16 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.18 )
          qed
        qed
      next
        case ServerCommitResponse
        solve( splitEqs(1) )
          case split_case_1
          solve( !KU( wsdec(client_commit_request, ~pass)^~x_s ) @ #vk.8 )
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.12 )
          qed
        next
          case split_case_2
          solve( !KU( wsenc(y_c, ~pass) ) @ #vk.3 )
            case ClientCommitRequest
            by contradiction /* non-normal terms */
          next
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_3
          solve( !KU( wsenc(key^inv(~x_s), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_4
          solve( !KU( x^(~x_s*x.1) ) @ #vk.8 )
            case ClientCommitRequest_case_1
            solve( !KU( ~pass.1 ) @ #vk.14 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.15 )
            qed
          next
            case ClientCommitRequest_case_2
            solve( !KU( ~pass.1 ) @ #vk.14 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.16 )
            qed
          next
            case ServerCommitResponse_case_1
            solve( !KU( ~pass.1 ) @ #vk.13 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.14 )
            qed
          next
            case ServerCommitResponse_case_2
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case ServerCommitResponse_case_3
            solve( !KU( ~pass.1 ) @ #vk.13 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.16 )
            qed
          next
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.13 )
          qed
        next
          case split_case_5
          solve( !KU( wsenc(x^inv((~x_s*x.1)), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_6
          solve( !KU( wsenc(x^(x.1*inv(~x_s)), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_7
          solve( !KU( wsenc(x^(x.1*inv((~x_s*x.2))), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma PerfectForwardSecrecy:
  all-traces
  "∀ key #i.
    (Secret( key ) @ #i) ⇒
    ((¬(∃ #j. !KU( key ) @ #j)) ∨
     (∃ A #k. ((RevAgentPass( A ) @ #k) ∧ (Honest( A ) @ #i)) ∧ (#k < #i)))"
/*
guarded formula characterizing all counter-examples:
"∃ key #i.
  (Secret( key ) @ #i)
 ∧
  (∃ #j. (!KU( key ) @ #j)) ∧
  (∀ A #k. (RevAgentPass( A ) @ #k) ∧ (Honest( A ) @ #i) ⇒ ¬(#k < #i))"
*/
simplify
solve( Secret( key ) @ #i )
  case ClientSessionEstablishment
  solve( StateClientConfirmRequest_1( tid, C, S, pass, x_c, y_c, scr_0,
                                      y_s, key, nonce_p, nonce_s, scr_1
         ) ▶₀ #i )
    case ClientConfirmRequest
    solve( !KU( senc(<'3', ~nonce_p>, key) ) @ #vk )
      case ServerConfirmResponse
      solve( !KU( senc(<'2', ~nonce_s.1, ~nonce_p>, key) ) @ #vk.6 )
        case ClientConfirmRequest
        solve( splitEqs(1) )
          case split_case_1
          solve( !KU( wsenc(key^inv(~x_c), ~pass) ) @ #vk.2 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_2
          solve( splitEqs(2) )
            case split
            solve( !KU( y_s^~x_c ) @ #j )
              case ClientCommitRequest
              solve( !KU( ~pass ) @ #vk.11 )
                case RevealPassword
                solve( !KU( wsenc('g', ~pass) ) @ #vk.3 )
                  case c_wsenc
                  by contradiction /* cyclic */
                qed
              qed
            next
              case c_exp
              by solve( !KU( ~x_c ) @ #vk.12 )
            qed
          qed
        next
          case split_case_3
          solve( splitEqs(2) )
            case split
            solve( !KU( wsdec(scr_0, ~pass)^~x_c ) @ #j )
              case c_exp
              by solve( !KU( ~x_c ) @ #vk.12 )
            qed
          qed
        next
          case split_case_4
          solve( !KU( wsenc(x^(x.1*inv(~x_c)), ~pass) ) @ #vk.2 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_5
          solve( !KU( x^(~x_c*x.1) ) @ #j )
            case ClientCommitRequest_case_1
            solve( !KU( ~pass.2 ) @ #vk.13 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.14 )
            qed
          next
            case ClientCommitRequest_case_2
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              solve( !KU( wsenc('g'^x, ~pass) ) @ #vk.3 )
                case ClientCommitRequest
                by solve( !KU( ~x_c.1 ) @ #vk.12 )
              next
                case ServerCommitResponse
                by solve( !KU( ~x_s ) @ #vk.13 )
              next
                case c_wsenc
                by contradiction /* cyclic */
              qed
            qed
          next
            case ClientCommitRequest_case_3
            solve( !KU( ~pass.2 ) @ #vk.13 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.15 )
            qed
          next
            case ServerCommitResponse_case_1
            solve( !KU( ~pass.2 ) @ #vk.13 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.14 )
            qed
          next
            case ServerCommitResponse_case_2
            solve( !KU( ~pass.2 ) @ #vk.13 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.16 )
            qed
          next
            case c_exp
            by solve( !KU( ~x_c ) @ #vk.13 )
          qed
        next
          case split_case_6
          solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass) ) @ #vk.2 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.12 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_7
          solve( splitEqs(2) )
            case split_case_1
            solve( !KU( x^(~x_s*inv(x.1)) ) @ #j )
              case ServerCommitResponse
              solve( !KU( ~pass.1 ) @ #vk.11 )
                case RevealPassword
                solve( !KU( wsenc('g'^(~x_s*inv((~x_c*x))), ~pass) ) @ #vk.3 )
                  case c_wsenc
                  solve( !KU( ~pass ) @ #vk.15 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case c_exp
              by solve( !KU( ~x_s ) @ #vk.13 )
            qed
          next
            case split_case_2
            solve( !KU( wsenc(x^(x.1*inv((~x_c*x.2))), ~pass) ) @ #vk.2 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.12 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          next
            case split_case_3
            solve( !KU( x^(~x_s*x.1*inv(x.2)) ) @ #j )
              case ClientCommitRequest_case_1
              solve( !KU( ~pass.2 ) @ #vk.13 )
                case RevealPassword
                by solve( !KU( ~x_s ) @ #vk.15 )
              qed
            next
              case ClientCommitRequest_case_2
              solve( !KU( ~pass.2 ) @ #vk.13 )
                case RevealPassword
                by solve( !KU( ~x_s ) @ #vk.15 )
              qed
            next
              case ServerCommitResponse_case_1
              solve( !KU( ~pass.2 ) @ #vk.13 )
                case RevealPassword
                by solve( !KU( ~x_s ) @ #vk.16 )
              qed
            next
              case ServerCommitResponse_case_2
              solve( !KU( ~pass.2 ) @ #vk.13 )
                case RevealPassword
                by solve( !KU( ~x_s ) @ #vk.16 )
              qed
            next
              case ServerCommitResponse_case_3
              solve( !KU( ~pass.1 ) @ #vk.11 )
                case RevealPassword
                solve( !KU( wsenc('g'^(~x_s*x*inv((~x_c*x.1))), ~pass) ) @ #vk.3 )
                  case c_wsenc
                  solve( !KU( ~pass ) @ #vk.17 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case c_exp
              by solve( !KU( ~x_s ) @ #vk.13 )
            qed
          qed
        qed
      next
        case c_senc
        solve( !KU( ~nonce_s.1 ) @ #vk.14 )
          case ClientConfirmRequest_case_1
          solve( !KU( ~nonce_p ) @ #vk.16 )
            case ClientConfirmRequest
            solve( splitEqs(1) )
              case split_case_1
              solve( splitEqs(2) )
                case split
                solve( !KU( wsdec(scr_0, ~pass)^~x_c ) @ #j )
                  case c_exp
                  by solve( !KU( ~x_c ) @ #vk.17 )
                qed
              qed
            next
              case split_case_2
              solve( splitEqs(2) )
                case split
                solve( !KU( senc(<'1', nonce_s>, wsdec(scr_0, ~pass.1)^~x_c.1)
                       ) @ #vk.7 )
                  case ServerCommitResponse
                  solve( splitEqs(7) )
                    case split
                    solve( !KU( wsdec(scr_0, ~pass.1)^~x_c.1 ) @ #j )
                      case c_exp
                      by solve( !KU( ~x_c.1 ) @ #vk.24 )
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( wsdec(scr_0, ~pass.1)^~x_c.1 ) @ #j )
                    case c_exp
                    by solve( !KU( ~x_c.1 ) @ #vk.24 )
                  qed
                qed
              qed
            qed
          next
            case ServerConfirmResponse
            by contradiction /* cyclic */
          qed
        next
          case ClientConfirmRequest_case_2
          solve( !KU( ~nonce_p ) @ #vk.16 )
            case ClientConfirmRequest
            solve( splitEqs(1) )
              case split_case_1
              solve( splitEqs(2) )
                case split
                solve( !KU( wsenc(y_s, ~pass) ) @ #vk.6 )
                  case ClientCommitRequest
                  by contradiction /* non-normal terms */
                next
                  case c_wsenc
                  solve( !KU( ~pass ) @ #vk.17 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case split_case_2
              solve( splitEqs(2) )
                case split
                solve( !KU( senc(<'1', nonce_s>, z^~x_c.1) ) @ #vk.7 )
                  case ServerCommitResponse
                  solve( splitEqs(7) )
                    case split
                    solve( !KU( wsenc(z, ~pass.2) ) @ #vk.18 )
                      case ClientCommitRequest
                      by contradiction /* non-normal terms */
                    next
                      case c_wsenc
                      solve( !KU( ~pass.2 ) @ #vk.24 )
                        case RevealPassword
                        solve( !KU( z^~x_c.1 ) @ #j )
                          case ClientCommitRequest
                          solve( !KU( wsenc('g'^(~x_c.1*inv(~x_c)), ~pass) ) @ #vk.9 )
                            case c_wsenc
                            solve( !KU( ~pass ) @ #vk.26 )
                              case RevealPassword
                              by contradiction /* from formulas */
                            qed
                          qed
                        next
                          case c_exp
                          by solve( !KU( ~x_c.1 ) @ #vk.25 )
                        qed
                      qed
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( wsenc(z, ~pass.2) ) @ #vk.17 )
                    case ClientCommitRequest
                    by contradiction /* non-normal terms */
                  next
                    case c_wsenc
                    solve( !KU( ~pass.2 ) @ #vk.24 )
                      case RevealPassword
                      solve( !KU( z^~x_c.1 ) @ #j )
                        case ClientCommitRequest
                        solve( !KU( wsenc('g'^(~x_c.1*inv(~x_c)), ~pass) ) @ #vk.9 )
                          case c_wsenc
                          solve( !KU( ~pass ) @ #vk.26 )
                            case RevealPassword
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case c_exp
                        by solve( !KU( ~x_c.1 ) @ #vk.25 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case ServerConfirmResponse
            by contradiction /* cyclic */
          qed
        next
          case ClientConfirmRequest_case_3
          solve( !KU( ~nonce_p ) @ #vk.16 )
            case ClientConfirmRequest
            solve( !KU( wsenc(key^inv(~x_c.1), ~pass.2) ) @ #vk.17 )
              case c_wsenc
              solve( !KU( ~pass.2 ) @ #vk.21 )
                case RevealPassword
                solve( !KU( wsenc(key^inv(~x_s), ~pass.2) ) @ #vk.14 )
                  case c_wsenc
                  solve( !KU( ~pass.2 ) @ #vk.23 )
                    case RevealPassword
                    solve( !KU( wsenc(key^inv(~x_c), ~pass) ) @ #vk.10 )
                      case c_wsenc
                      solve( !KU( ~pass ) @ #vk.25 )
                        case RevealPassword
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case ServerConfirmResponse
            by contradiction /* cyclic */
          qed
        next
          case ClientConfirmRequest_case_4
          solve( !KU( ~nonce_p ) @ #vk.16 )
            case ClientConfirmRequest
            solve( !KU( x^(~x_c.1*x.2) ) @ #j )
              case ClientCommitRequest_case_1
              solve( !KU( ~pass.3 ) @ #vk.22 )
                case RevealPassword
                by solve( !KU( ~x_c.1 ) @ #vk.23 )
              qed
            next
              case ClientCommitRequest_case_2
              solve( !KU( ~pass.2 ) @ #vk.20 )
                case RevealPassword
                solve( !KU( senc(<'1', nonce_s>, 'g'^(~x_c.1*x.1)) ) @ #vk.8 )
                  case ServerCommitResponse
                  solve( !KU( wsenc('g'^x.1, ~pass.1) ) @ #vk.19 )
                    case ClientCommitRequest
                    by solve( !KU( ~x_c.2 ) @ #vk.22 )
                  next
                    case ServerCommitResponse
                    by solve( !KU( ~x_s ) @ #vk.23 )
                  next
                    case c_wsenc
                    solve( !KU( wsenc('g'^x.2, ~pass.2) ) @ #vk.14 )
                      case ClientCommitRequest
                      solve( !KU( ~x.1 ) @ #vk.23 )
                        case ClientConfirmRequest_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_8
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case RevealPassword
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerCommitResponse
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case fresh
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      qed
                    next
                      case ServerCommitResponse
                      solve( !KU( ~x.1 ) @ #vk.22 )
                        case ClientConfirmRequest_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_8
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case RevealPassword
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerCommitResponse
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case fresh
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* from formulas */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      qed
                    next
                      case c_wsenc
                      solve( !KU( ~pass.2 ) @ #vk.27 )
                        case RevealPassword
                        solve( !KU( wsenc('g'^x, ~pass) ) @ #vk.11 )
                          case ClientCommitRequest
                          solve( !KU( ~x ) @ #vk.23 )
                            case ClientConfirmRequest_case_1
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_2
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_3
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_4
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_5
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_6
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_7
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_8
                            by solve( splitEqs(1) )
                          next
                            case RevealPassword
                            by solve( splitEqs(1) )
                          next
                            case ServerCommitResponse
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_1
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_2
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_3
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_4
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_5
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_6
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_7
                            by solve( splitEqs(1) )
                          next
                            case fresh
                            by solve( splitEqs(1) )
                          qed
                        next
                          case ServerCommitResponse
                          solve( !KU( ~x ) @ #vk.24 )
                            case ClientConfirmRequest_case_1
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_2
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_3
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_4
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_5
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_6
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_7
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_8
                            by solve( splitEqs(1) )
                          next
                            case RevealPassword
                            by solve( splitEqs(1) )
                          next
                            case ServerCommitResponse
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_1
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_2
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_3
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_4
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_5
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_6
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_7
                            by solve( splitEqs(1) )
                          next
                            case fresh
                            by solve( splitEqs(1) )
                          qed
                        next
                          case c_wsenc
                          solve( !KU( ~pass ) @ #vk.29 )
                            case RevealPassword
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( wsenc('g'^x.1, ~pass.1) ) @ #vk.18 )
                    case ClientCommitRequest
                    by solve( !KU( ~x_c.2 ) @ #vk.21 )
                  next
                    case ServerCommitResponse
                    by solve( !KU( ~x_s ) @ #vk.22 )
                  next
                    case c_wsenc
                    solve( !KU( wsenc('g'^x.2, ~pass.2) ) @ #vk.14 )
                      case ClientCommitRequest
                      solve( !KU( ~x.1 ) @ #vk.22 )
                        case ClientConfirmRequest_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_8
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case RevealPassword
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerCommitResponse
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case fresh
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      qed
                    next
                      case ServerCommitResponse
                      solve( !KU( ~x.1 ) @ #vk.21 )
                        case ClientConfirmRequest_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ClientConfirmRequest_case_8
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case RevealPassword
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerCommitResponse
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_1
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_2
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_3
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_4
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_5
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_6
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case ServerConfirmResponse_case_7
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      next
                        case fresh
                        solve( splitEqs(1) )
                          case split_case_1
                          by contradiction /* cyclic */
                        next
                          case split_case_2
                          by solve( splitEqs(2) )
                        qed
                      qed
                    next
                      case c_wsenc
                      solve( !KU( ~pass.2 ) @ #vk.27 )
                        case RevealPassword
                        solve( !KU( wsenc('g'^x, ~pass) ) @ #vk.11 )
                          case ClientCommitRequest
                          solve( !KU( ~x ) @ #vk.22 )
                            case ClientConfirmRequest_case_1
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_2
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_3
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_4
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_5
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_6
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_7
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_8
                            by solve( splitEqs(1) )
                          next
                            case RevealPassword
                            by solve( splitEqs(1) )
                          next
                            case ServerCommitResponse
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_1
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_2
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_3
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_4
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_5
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_6
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_7
                            by solve( splitEqs(1) )
                          next
                            case fresh
                            by solve( splitEqs(1) )
                          qed
                        next
                          case ServerCommitResponse
                          solve( !KU( ~x ) @ #vk.23 )
                            case ClientConfirmRequest_case_1
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_2
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_3
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_4
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_5
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_6
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_7
                            by solve( splitEqs(1) )
                          next
                            case ClientConfirmRequest_case_8
                            by solve( splitEqs(1) )
                          next
                            case RevealPassword
                            by solve( splitEqs(1) )
                          next
                            case ServerCommitResponse
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_1
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_2
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_3
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_4
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_5
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_6
                            by solve( splitEqs(1) )
                          next
                            case ServerConfirmResponse_case_7
                            by solve( splitEqs(1) )
                          next
                            case fresh
                            by solve( splitEqs(1) )
                          qed
                        next
                          case c_wsenc
                          solve( !KU( ~pass ) @ #vk.29 )
                            case RevealPassword
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case ClientCommitRequest_case_3
              solve( !KU( ~pass.3 ) @ #vk.22 )
                case RevealPassword
                by solve( !KU( ~x_c.1 ) @ #vk.24 )
              qed
            next
              case ServerCommitResponse_case_1
              solve( !KU( ~pass.3 ) @ #vk.22 )
                case RevealPassword
                by solve( !KU( ~x_c.1 ) @ #vk.23 )
              qed
            next
              case ServerCommitResponse_case_2
              solve( !KU( ~pass.3 ) @ #vk.22 )
                case RevealPassword
                by solve( !KU( ~x_c.1 ) @ #vk.25 )
              qed
            next
              case c_exp
              by solve( !KU( ~x_c.1 ) @ #vk.22 )
            qed
          next
            case ServerConfirmResponse_case_1
            solve( splitEqs(5) )
              case split_case_1
              by contradiction /* cyclic */
            next
              case split_case_2
              by contradiction /* cyclic */
            qed
          next
            case ServerConfirmResponse_case_2
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_3
            solve( splitEqs(4) )
              case split_case_1
              by contradiction /* cyclic */
            next
              case split_case_2
              solve( splitEqs(1) )
                case split_case_1
                by contradiction /* cyclic */
              next
                case split_case_2
                by contradiction /* cyclic */
              qed
            next
              case split_case_3
              solve( splitEqs(6) )
                case split_case_1
                by contradiction /* cyclic */
              next
                case split_case_2
                by contradiction /* cyclic */
              next
                case split_case_3
                by contradiction /* cyclic */
              qed
            qed
          qed
        next
          case ClientConfirmRequest_case_5
          solve( !KU( ~nonce_p ) @ #vk.16 )
            case ClientConfirmRequest
            solve( !KU( wsenc(x^(x.1*inv(~x_c.1)), ~pass.2) ) @ #vk.17 )
              case c_wsenc
              solve( !KU( ~pass.2 ) @ #vk.21 )
                case RevealPassword
                solve( !KU( x^(x.1*inv(~x_c.1)) ) @ #vk.21 )
                  case ClientCommitRequest_case_1
                  solve( !KU( ~pass.3 ) @ #vk.24 )
                    case RevealPassword
                    by solve( !KU( ~x_c.1 ) @ #vk.26 )
                  qed
                next
                  case ClientCommitRequest_case_2
                  solve( !KU( ~pass.3 ) @ #vk.24 )
                    case RevealPassword
                    by solve( !KU( ~x_c.2 ) @ #vk.28 )
                  qed
                next
                  case ServerCommitResponse_case_1
                  solve( !KU( ~pass.3 ) @ #vk.24 )
                    case RevealPassword
                    by solve( !KU( ~x_c.1 ) @ #vk.27 )
                  qed
                next
                  case ServerCommitResponse_case_2
                  solve( !KU( ~pass.3 ) @ #vk.24 )
                    case RevealPassword
                    by solve( !KU( ~x_c.1 ) @ #vk.29 )
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_c.1 ) @ #vk.26 )
                qed
              qed
            qed
          next
            case ServerConfirmResponse_case_1
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_2
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_3
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_4
            by contradiction /* cyclic */
          qed
        next
          case ClientConfirmRequest_case_6
          solve( !KU( ~nonce_p ) @ #vk.16 )
            case ClientConfirmRequest
            solve( !KU( wsenc(x^inv((~x_c.1*x.1)), ~pass.2) ) @ #vk.17 )
              case c_wsenc
              solve( !KU( ~pass.2 ) @ #vk.21 )
                case RevealPassword
                solve( !KU( wsenc(x^inv((~x_s*x.1)), ~pass.2) ) @ #vk.14 )
                  case c_wsenc
                  solve( !KU( ~pass.2 ) @ #vk.23 )
                    case RevealPassword
                    solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass) ) @ #vk.10 )
                      case c_wsenc
                      solve( !KU( ~pass ) @ #vk.25 )
                        case RevealPassword
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case ServerConfirmResponse
            by contradiction /* cyclic */
          qed
        next
          case ClientConfirmRequest_case_7
          solve( !KU( ~nonce_p ) @ #vk.16 )
            case ClientConfirmRequest
            solve( splitEqs(1) )
              case split_case_1
              solve( splitEqs(2) )
                case split
                solve( !KU( x^(~x_c*inv(x.1)) ) @ #j )
                  case ClientCommitRequest
                  solve( !KU( ~pass ) @ #vk.20 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_c ) @ #vk.22 )
                qed
              qed
            next
              case split_case_2
              solve( splitEqs(2) )
                case split_case_1
                solve( !KU( x^(~x_s*inv(x.1)) ) @ #j )
                  case ServerCommitResponse
                  solve( !KU( ~pass.1 ) @ #vk.20 )
                    case RevealPassword
                    solve( !KU( senc(<'1', nonce_s>, 'g'^(~x_s*inv(x))) ) @ #vk.8 )
                      case ServerCommitResponse
                      solve( splitEqs(8) )
                        case split_case_1
                        solve( !KU( wsenc('g'^(~x_s*inv((x*~x_c.1))), ~pass.2) ) @ #vk.18 )
                          case c_wsenc
                          solve( !KU( ~pass.2 ) @ #vk.23 )
                            case RevealPassword
                            solve( !KU( 'g'^(~x_s*inv((x*~x_c.1))) ) @ #vk.23 )
                              case ServerCommitResponse
                              by solve( !KU( ~x_c.1 ) @ #vk.26 )
                            next
                              case c_exp
                              by solve( !KU( ~x_s ) @ #vk.27 )
                            qed
                          qed
                        qed
                      next
                        case split_case_2
                        solve( !KU( wsenc('g'^(~x_s*inv((x*~x_c.1))), ~pass.2) ) @ #vk.19 )
                          case c_wsenc
                          solve( !KU( ~pass.2 ) @ #vk.27 )
                            case RevealPassword
                            solve( !KU( 'g'^(~x_s*inv((x*~x_c.1))) ) @ #vk.27 )
                              case ServerCommitResponse
                              by solve( !KU( ~x_c.1 ) @ #vk.30 )
                            next
                              case c_exp
                              by solve( !KU( ~x_s ) @ #vk.31 )
                            qed
                          qed
                        qed
                      qed
                    next
                      case c_senc
                      solve( !KU( wsenc('g'^(~x_s*inv((x*~x_c.1))), ~pass.2) ) @ #vk.18 )
                        case c_wsenc
                        solve( !KU( ~pass.2 ) @ #vk.27 )
                          case RevealPassword
                          solve( !KU( 'g'^(~x_s*inv((x*~x_c.1))) ) @ #vk.27 )
                            case ServerCommitResponse
                            by solve( !KU( ~x_c.1 ) @ #vk.30 )
                          next
                            case c_exp
                            by solve( !KU( ~x_s ) @ #vk.31 )
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_s ) @ #vk.22 )
                qed
              next
                case split_case_2
                solve( !KU( wsenc(x^(x.1*inv((~x_c.1*x.2))), ~pass.2) ) @ #vk.17 )
                  case c_wsenc
                  solve( !KU( ~pass.2 ) @ #vk.21 )
                    case RevealPassword
                    solve( !KU( x^(x.1*inv((~x_c.1*x.2))) ) @ #vk.21 )
                      case ClientCommitRequest_case_1
                      solve( !KU( ~pass.3 ) @ #vk.24 )
                        case RevealPassword
                        by solve( !KU( ~x_c.1 ) @ #vk.27 )
                      qed
                    next
                      case ClientCommitRequest_case_2
                      solve( !KU( ~pass.3 ) @ #vk.24 )
                        case RevealPassword
                        by solve( !KU( ~x_c.2 ) @ #vk.29 )
                      qed
                    next
                      case ServerCommitResponse_case_1
                      solve( !KU( ~pass.3 ) @ #vk.24 )
                        case RevealPassword
                        by solve( !KU( ~x_c.1 ) @ #vk.28 )
                      qed
                    next
                      case ServerCommitResponse_case_2
                      solve( !KU( ~pass.3 ) @ #vk.24 )
                        case RevealPassword
                        by solve( !KU( ~x_c.1 ) @ #vk.30 )
                      qed
                    next
                      case c_exp
                      by solve( !KU( ~x_c.1 ) @ #vk.27 )
                    qed
                  qed
                qed
              next
                case split_case_3
                solve( !KU( x^(~x_s*x.1*inv(x.2)) ) @ #j )
                  case ClientCommitRequest_case_1
                  solve( !KU( ~pass.3 ) @ #vk.22 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.24 )
                  qed
                next
                  case ClientCommitRequest_case_2
                  solve( !KU( ~pass.3 ) @ #vk.22 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.24 )
                  qed
                next
                  case ServerCommitResponse_case_1
                  solve( !KU( ~pass.3 ) @ #vk.22 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.25 )
                  qed
                next
                  case ServerCommitResponse_case_2
                  solve( !KU( ~pass.3 ) @ #vk.22 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.25 )
                  qed
                next
                  case ServerCommitResponse_case_3
                  solve( !KU( ~pass.1 ) @ #vk.20 )
                    case RevealPassword
                    solve( !KU( senc(<'1', nonce_s>, 'g'^(~x_s*x*inv(x.1))) ) @ #vk.8 )
                      case ServerCommitResponse
                      solve( !KU( wsenc('g'^(~x_s*x*inv((~x_c.1*x.1))), ~pass.2) ) @ #vk.19 )
                        case c_wsenc
                        solve( !KU( ~pass.2 ) @ #vk.29 )
                          case RevealPassword
                          solve( !KU( 'g'^(~x_s*x*inv((~x_c.1*x.1))) ) @ #vk.29 )
                            case ClientCommitRequest_case_1
                            solve( !KU( ~pass.4 ) @ #vk.33 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.36 )
                            qed
                          next
                            case ClientCommitRequest_case_2
                            solve( !KU( ~pass.4 ) @ #vk.33 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.36 )
                            qed
                          next
                            case ServerCommitResponse_case_1
                            solve( !KU( ~pass.4 ) @ #vk.33 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.37 )
                            qed
                          next
                            case ServerCommitResponse_case_2
                            solve( !KU( ~pass.4 ) @ #vk.33 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.37 )
                            qed
                          next
                            case ServerCommitResponse_case_3
                            by solve( !KU( ~x_c.1 ) @ #vk.33 )
                          next
                            case c_exp
                            by solve( !KU( ~x_s ) @ #vk.33 )
                          qed
                        qed
                      qed
                    next
                      case c_senc
                      solve( !KU( wsenc('g'^(~x_s*x*inv((~x_c.1*x.1))), ~pass.2) ) @ #vk.18 )
                        case c_wsenc
                        solve( !KU( ~pass.2 ) @ #vk.29 )
                          case RevealPassword
                          solve( !KU( 'g'^(~x_s*x*inv((~x_c.1*x.1))) ) @ #vk.29 )
                            case ClientCommitRequest_case_1
                            solve( !KU( ~pass.3 ) @ #vk.33 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.36 )
                            qed
                          next
                            case ClientCommitRequest_case_2
                            solve( !KU( ~pass.3 ) @ #vk.33 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.36 )
                            qed
                          next
                            case ServerCommitResponse_case_1
                            solve( !KU( ~pass.3 ) @ #vk.33 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.37 )
                            qed
                          next
                            case ServerCommitResponse_case_2
                            solve( !KU( ~pass.3 ) @ #vk.33 )
                              case RevealPassword
                              by solve( !KU( ~x_s ) @ #vk.37 )
                            qed
                          next
                            case ServerCommitResponse_case_3
                            by solve( !KU( ~x_c.1 ) @ #vk.33 )
                          next
                            case c_exp
                            by solve( !KU( ~x_s ) @ #vk.33 )
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_s ) @ #vk.22 )
                qed
              qed
            next
              case split_case_3
              solve( !KU( x^(~x_c*x.1*inv(x.2)) ) @ #j )
                case ClientCommitRequest_case_1
                solve( !KU( ~pass.3 ) @ #vk.22 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.24 )
                qed
              next
                case ClientCommitRequest_case_2
                solve( !KU( ~pass.3 ) @ #vk.22 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.24 )
                qed
              next
                case ClientCommitRequest_case_3
                solve( !KU( ~pass ) @ #vk.20 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              next
                case ServerCommitResponse_case_1
                solve( !KU( ~pass.3 ) @ #vk.22 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.25 )
                qed
              next
                case ServerCommitResponse_case_2
                solve( !KU( ~pass.3 ) @ #vk.22 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.25 )
                qed
              next
                case c_exp
                by solve( !KU( ~x_c ) @ #vk.22 )
              qed
            qed
          next
            case ServerConfirmResponse_case_1
            solve( splitEqs(1) )
              case split_case_1
              solve( splitEqs(2) )
                case split_case_1
                by contradiction /* cyclic */
              next
                case split_case_2
                by solve( splitEqs(4) )
              next
                case split_case_3
                solve( splitEqs(6) )
                  case split_case_1
                  by contradiction /* cyclic */
                next
                  case split_case_2
                  by contradiction /* cyclic */
                next
                  case split_case_3
                  by contradiction /* cyclic */
                qed
              qed
            next
              case split_case_2
              solve( splitEqs(6) )
                case split_case_1
                by contradiction /* cyclic */
              next
                case split_case_2
                by contradiction /* cyclic */
              qed
            qed
          next
            case ServerConfirmResponse_case_2
            by contradiction /* cyclic */
          qed
        next
          case ServerCommitResponse
          solve( !KU( ~nonce_p ) @ #vk.15 )
            case ClientConfirmRequest
            solve( splitEqs(1) )
              case split_case_1
              solve( !KU( wsenc(key^inv(~x_c), ~pass) ) @ #vk.6 )
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.17 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_2
              solve( splitEqs(2) )
                case split
                solve( !KU( senc(<'1', nonce_s>, y_s^~x_c) ) @ #vk.7 )
                  case ServerCommitResponse
                  solve( splitEqs(7) )
                    case split
                    solve( !KU( y_s^~x_c ) @ #j )
                      case ClientCommitRequest
                      solve( !KU( ~pass ) @ #vk.19 )
                        case RevealPassword
                        by contradiction /* from formulas */
                      qed
                    next
                      case c_exp
                      by solve( !KU( ~x_c ) @ #vk.20 )
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( y_s^~x_c ) @ #j )
                    case ClientCommitRequest
                    solve( !KU( ~pass ) @ #vk.19 )
                      case RevealPassword
                      by contradiction /* from formulas */
                    qed
                  next
                    case c_exp
                    by solve( !KU( ~x_c ) @ #vk.20 )
                  qed
                qed
              qed
            next
              case split_case_3
              solve( splitEqs(2) )
                case split
                solve( !KU( senc(<'1', nonce_s>, wsdec(scr_0, ~pass)^~x_c) ) @ #vk.7 )
                  case ServerCommitResponse
                  solve( splitEqs(7) )
                    case split
                    solve( !KU( wsdec(scr_0, ~pass)^~x_c ) @ #j )
                      case c_exp
                      by solve( !KU( ~x_c ) @ #vk.20 )
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( wsdec(scr_0, ~pass)^~x_c ) @ #j )
                    case c_exp
                    by solve( !KU( ~x_c ) @ #vk.20 )
                  qed
                qed
              qed
            next
              case split_case_4
              solve( !KU( wsenc(x^(x.1*inv(~x_c)), ~pass) ) @ #vk.6 )
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.17 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_5
              solve( !KU( x^(~x_c*x.1) ) @ #j )
                case ClientCommitRequest_case_1
                solve( !KU( ~pass.2 ) @ #vk.18 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.19 )
                qed
              next
                case ClientCommitRequest_case_2
                solve( !KU( ~pass ) @ #vk.16 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              next
                case ClientCommitRequest_case_3
                solve( !KU( ~pass.2 ) @ #vk.18 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.20 )
                qed
              next
                case ServerCommitResponse_case_1
                solve( !KU( ~pass.2 ) @ #vk.18 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.19 )
                qed
              next
                case ServerCommitResponse_case_2
                solve( !KU( ~pass.2 ) @ #vk.18 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.21 )
                qed
              next
                case c_exp
                by solve( !KU( ~x_c ) @ #vk.18 )
              qed
            next
              case split_case_6
              solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass) ) @ #vk.6 )
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.17 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            next
              case split_case_7
              solve( splitEqs(2) )
                case split_case_1
                solve( !KU( x^(~x_s*inv(x.1)) ) @ #j )
                  case ServerCommitResponse
                  solve( !KU( ~pass.1 ) @ #vk.16 )
                    case RevealPassword
                    solve( !KU( senc(<'1', nonce_s>, 'g'^(~x_s*inv(x))) ) @ #vk.8 )
                      case ServerCommitResponse
                      solve( splitEqs(8) )
                        case split_case_1
                        solve( !KU( wsenc('g'^(~x_s*inv((~x_c*x))), ~pass) ) @ #vk.8 )
                          case c_wsenc
                          solve( !KU( ~pass ) @ #vk.20 )
                            case RevealPassword
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case split_case_2
                        solve( !KU( wsenc('g'^(~x_s*inv((~x_c*x))), ~pass) ) @ #vk.8 )
                          case c_wsenc
                          solve( !KU( ~pass ) @ #vk.23 )
                            case RevealPassword
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    next
                      case c_senc
                      solve( !KU( wsenc('g'^(~x_s*inv((~x_c*x))), ~pass) ) @ #vk.8 )
                        case c_wsenc
                        solve( !KU( ~pass ) @ #vk.23 )
                          case RevealPassword
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_s ) @ #vk.18 )
                qed
              next
                case split_case_2
                solve( !KU( wsenc(x^(x.1*inv((~x_c*x.2))), ~pass) ) @ #vk.6 )
                  case c_wsenc
                  solve( !KU( ~pass ) @ #vk.17 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case split_case_3
                solve( !KU( x^(~x_s*x.1*inv(x.2)) ) @ #j )
                  case ClientCommitRequest_case_1
                  solve( !KU( ~pass.2 ) @ #vk.18 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.20 )
                  qed
                next
                  case ClientCommitRequest_case_2
                  solve( !KU( ~pass.2 ) @ #vk.18 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.20 )
                  qed
                next
                  case ServerCommitResponse_case_1
                  solve( !KU( ~pass.2 ) @ #vk.18 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.21 )
                  qed
                next
                  case ServerCommitResponse_case_2
                  solve( !KU( ~pass.2 ) @ #vk.18 )
                    case RevealPassword
                    by solve( !KU( ~x_s ) @ #vk.21 )
                  qed
                next
                  case ServerCommitResponse_case_3
                  solve( !KU( ~pass.1 ) @ #vk.16 )
                    case RevealPassword
                    solve( !KU( senc(<'1', nonce_s>, 'g'^(~x_s*x*inv(x.1))) ) @ #vk.8 )
                      case ServerCommitResponse
                      solve( !KU( wsenc('g'^(~x_s*x*inv((~x_c*x.1))), ~pass) ) @ #vk.8 )
                        case c_wsenc
                        solve( !KU( ~pass ) @ #vk.25 )
                          case RevealPassword
                          by contradiction /* from formulas */
                        qed
                      qed
                    next
                      case c_senc
                      solve( !KU( wsenc('g'^(~x_s*x*inv((~x_c*x.1))), ~pass) ) @ #vk.8 )
                        case c_wsenc
                        solve( !KU( ~pass ) @ #vk.25 )
                          case RevealPassword
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case c_exp
                  by solve( !KU( ~x_s ) @ #vk.18 )
                qed
              qed
            qed
          next
            case ServerConfirmResponse_case_1
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_2
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_3
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_4
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_5
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_6
            by contradiction /* cyclic */
          next
            case ServerConfirmResponse_case_7
            by contradiction /* cyclic */
          qed
        qed
      qed
    next
      case c_senc
      solve( !KU( ~nonce_p ) @ #vk.8 )
        case ClientConfirmRequest
        solve( splitEqs(1) )
          case split_case_1
          solve( !KU( wsenc(key^inv(~x_c), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.10 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_2
          solve( !KU( senc(<'1', nonce_s>, y_s^~x_c) ) @ #vk.4 )
            case ServerCommitResponse
            solve( splitEqs(4) )
              case split
              solve( !KU( y_s^~x_c ) @ #j )
                case ClientCommitRequest
                solve( !KU( ~pass ) @ #vk.13 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              next
                case c_exp
                by solve( !KU( ~x_c ) @ #vk.14 )
              qed
            qed
          next
            case c_senc
            solve( !KU( y_s^~x_c ) @ #j )
              case ClientCommitRequest
              solve( !KU( ~pass ) @ #vk.12 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            next
              case c_exp
              by solve( !KU( ~x_c ) @ #vk.13 )
            qed
          qed
        next
          case split_case_3
          solve( !KU( senc(<'1', nonce_s>, wsdec(scr_0, ~pass)^~x_c) ) @ #vk.4 )
            case ServerCommitResponse
            solve( splitEqs(4) )
              case split
              solve( !KU( wsdec(scr_0, ~pass)^~x_c ) @ #j )
                case c_exp
                by solve( !KU( ~x_c ) @ #vk.14 )
              qed
            qed
          next
            case c_senc
            solve( !KU( wsdec(scr_0, ~pass)^~x_c ) @ #j )
              case c_exp
              by solve( !KU( ~x_c ) @ #vk.13 )
            qed
          qed
        next
          case split_case_4
          solve( !KU( wsenc(x^(x.1*inv(~x_c)), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.10 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_5
          solve( !KU( x^(~x_c*x.1) ) @ #j )
            case ClientCommitRequest_case_1
            solve( !KU( ~pass.1 ) @ #vk.11 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.12 )
            qed
          next
            case ClientCommitRequest_case_2
            solve( !KU( ~pass ) @ #vk.9 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case ClientCommitRequest_case_3
            solve( !KU( ~pass.1 ) @ #vk.11 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.13 )
            qed
          next
            case ServerCommitResponse_case_1
            solve( !KU( ~pass.1 ) @ #vk.10 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.11 )
            qed
          next
            case ServerCommitResponse_case_2
            solve( !KU( ~pass.1 ) @ #vk.10 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.15 )
            qed
          next
            case c_exp
            by solve( !KU( ~x_c ) @ #vk.11 )
          qed
        next
          case split_case_6
          solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.10 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_7
          solve( !KU( wsenc(x^(x.1*inv((~x_c*x.2))), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.10 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case ServerConfirmResponse_case_1
        solve( !KU( wsenc(key^inv(~x_s), ~pass.1) ) @ #vk.10 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.15 )
            case RevealPassword
            solve( !KU( wsenc(key^inv(~x_c), ~pass) ) @ #vk.5 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.17 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case ServerConfirmResponse_case_2
        solve( splitEqs(1) )
          case split
          solve( !KU( y_c^~x_s ) @ #j )
            case ServerCommitResponse
            solve( !KU( ~pass.1 ) @ #vk.14 )
              case RevealPassword
              solve( !KU( wsenc('g', ~pass.1) ) @ #vk.11 )
                case c_wsenc
                solve( !KU( wsenc('g'^(~x_s*inv(~x_c)), ~pass) ) @ #vk.5 )
                  case c_wsenc
                  solve( !KU( ~pass ) @ #vk.17 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          next
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.15 )
          qed
        qed
      next
        case ServerConfirmResponse_case_3
        solve( !KU( x^(~x_s*x.2) ) @ #j )
          case ClientCommitRequest_case_1
          solve( !KU( ~pass.2 ) @ #vk.16 )
            case RevealPassword
            by solve( !KU( ~x_s ) @ #vk.17 )
          qed
        next
          case ClientCommitRequest_case_2
          solve( !KU( ~pass.2 ) @ #vk.16 )
            case RevealPassword
            by solve( !KU( ~x_s ) @ #vk.18 )
          qed
        next
          case ServerCommitResponse_case_1
          solve( !KU( ~pass.2 ) @ #vk.16 )
            case RevealPassword
            by solve( !KU( ~x_s ) @ #vk.17 )
          qed
        next
          case ServerCommitResponse_case_2
          solve( !KU( ~pass.1 ) @ #vk.14 )
            case RevealPassword
            solve( !KU( wsenc('g'^x.1, ~pass.1) ) @ #vk.11 )
              case ClientCommitRequest
              by solve( !KU( ~x_c.1 ) @ #vk.16 )
            next
              case ServerCommitResponse
              by solve( !KU( ~x_s.1 ) @ #vk.15 )
            next
              case c_wsenc
              solve( !KU( wsenc('g'^x, ~pass) ) @ #vk.5 )
                case ClientCommitRequest
                solve( !KU( ~x ) @ #vk.15 )
                  case ClientConfirmRequest_case_1
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_2
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_3
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_4
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_5
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_6
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_7
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_8
                  by solve( splitEqs(1) )
                next
                  case RevealPassword
                  by solve( splitEqs(1) )
                next
                  case ServerCommitResponse
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_1
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_2
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_3
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_4
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_5
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_6
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_7
                  by solve( splitEqs(1) )
                next
                  case fresh
                  by solve( splitEqs(1) )
                qed
              next
                case ServerCommitResponse
                solve( !KU( ~x ) @ #vk.16 )
                  case ClientConfirmRequest_case_1
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_2
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_3
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_4
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_5
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_6
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_7
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_8
                  by solve( splitEqs(1) )
                next
                  case RevealPassword
                  by solve( splitEqs(1) )
                next
                  case ServerCommitResponse
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_1
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_2
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_3
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_4
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_5
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_6
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_7
                  by solve( splitEqs(1) )
                next
                  case fresh
                  by solve( splitEqs(1) )
                qed
              next
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.18 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case ServerCommitResponse_case_3
          solve( !KU( ~pass.2 ) @ #vk.16 )
            case RevealPassword
            by solve( !KU( ~x_s ) @ #vk.19 )
          qed
        next
          case c_exp
          by solve( !KU( ~x_s ) @ #vk.16 )
        qed
      next
        case ServerConfirmResponse_case_4
        solve( !KU( wsenc(x^(x.1*inv(~x_s)), ~pass.1) ) @ #vk.10 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.15 )
            case RevealPassword
            solve( !KU( x^(x.1*inv(~x_s)) ) @ #vk.15 )
              case ClientCommitRequest_case_1
              solve( !KU( ~pass.2 ) @ #vk.18 )
                case RevealPassword
                by solve( !KU( ~x_s ) @ #vk.20 )
              qed
            next
              case ClientCommitRequest_case_2
              solve( !KU( ~pass.2 ) @ #vk.18 )
                case RevealPassword
                by solve( !KU( ~x_s ) @ #vk.22 )
              qed
            next
              case ServerCommitResponse_case_1
              solve( !KU( ~pass.2 ) @ #vk.18 )
                case RevealPassword
                by solve( !KU( ~x_s ) @ #vk.21 )
              qed
            next
              case ServerCommitResponse_case_2
              solve( !KU( ~pass.2 ) @ #vk.18 )
                case RevealPassword
                by solve( !KU( ~x_s.1 ) @ #vk.23 )
              qed
            next
              case c_exp
              by solve( !KU( ~x_s ) @ #vk.20 )
            qed
          qed
        qed
      next
        case ServerConfirmResponse_case_5
        solve( !KU( wsenc(x^inv((~x_s*x.1)), ~pass.1) ) @ #vk.10 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.15 )
            case RevealPassword
            solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass) ) @ #vk.5 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.17 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case ServerConfirmResponse_case_6
        solve( splitEqs(1) )
          case split_case_1
          solve( !KU( x^(~x_c*inv(x.1)) ) @ #j )
            case ClientCommitRequest
            solve( !KU( ~pass ) @ #vk.14 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case c_exp
            by solve( !KU( ~x_c ) @ #vk.16 )
          qed
        next
          case split_case_2
          solve( !KU( wsenc(x^(x.1*inv((~x_s*x.2))), ~pass.1) ) @ #vk.10 )
            case c_wsenc
            solve( !KU( ~pass.1 ) @ #vk.15 )
              case RevealPassword
              solve( !KU( x^(x.1*inv((~x_s*x.2))) ) @ #vk.15 )
                case ClientCommitRequest_case_1
                solve( !KU( ~pass.2 ) @ #vk.18 )
                  case RevealPassword
                  by solve( !KU( ~x_s ) @ #vk.21 )
                qed
              next
                case ClientCommitRequest_case_2
                solve( !KU( ~pass.2 ) @ #vk.18 )
                  case RevealPassword
                  by solve( !KU( ~x_s ) @ #vk.23 )
                qed
              next
                case ServerCommitResponse_case_1
                solve( !KU( ~pass.2 ) @ #vk.18 )
                  case RevealPassword
                  by solve( !KU( ~x_s ) @ #vk.22 )
                qed
              next
                case ServerCommitResponse_case_2
                solve( !KU( ~pass.2 ) @ #vk.18 )
                  case RevealPassword
                  by solve( !KU( ~x_s.1 ) @ #vk.24 )
                qed
              next
                case c_exp
                by solve( !KU( ~x_s ) @ #vk.21 )
              qed
            qed
          qed
        next
          case split_case_3
          solve( !KU( x^(~x_c*x.1*inv(x.2)) ) @ #j )
            case ClientCommitRequest_case_1
            solve( !KU( ~pass.2 ) @ #vk.16 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.18 )
            qed
          next
            case ClientCommitRequest_case_2
            solve( !KU( ~pass.2 ) @ #vk.16 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.18 )
            qed
          next
            case ClientCommitRequest_case_3
            solve( !KU( ~pass ) @ #vk.14 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case ServerCommitResponse_case_1
            solve( !KU( ~pass.2 ) @ #vk.16 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.19 )
            qed
          next
            case ServerCommitResponse_case_2
            solve( !KU( ~pass.2 ) @ #vk.16 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.19 )
            qed
          next
            case c_exp
            by solve( !KU( ~x_c ) @ #vk.16 )
          qed
        qed
      next
        case ServerConfirmResponse_case_7
        solve( splitEqs(1) )
          case split
          solve( !KU( wsdec(client_commit_request, ~pass.1)^~x_s ) @ #j )
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.15 )
          qed
        qed
      qed
    qed
  qed
next
  case ServerConfirmResponse
  solve( StateServerCommitResponse( tid, S, C, pass, x_s, y_s, nonce_s,
                                    key, y_c
         ) ▶₀ #i )
    case ServerCommitResponse
    solve( !KU( senc(<'2', ~nonce_s, nonce_p>, key) ) @ #vk )
      case ClientConfirmRequest
      solve( splitEqs(1) )
        case split_case_1
        solve( splitEqs(2) )
          case split
          solve( !KU( wsdec(client_commit_request, ~pass)^~x_s ) @ #j )
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.11 )
          qed
        qed
      next
        case split_case_2
        solve( splitEqs(2) )
          case split
          solve( !KU( y_c^~x_s ) @ #j )
            case ServerCommitResponse
            solve( !KU( ~pass ) @ #vk.10 )
              case RevealPassword
              solve( !KU( wsenc('g', ~pass) ) @ #vk.2 )
                case c_wsenc
                by contradiction /* cyclic */
              qed
            qed
          next
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.11 )
          qed
        qed
      next
        case split_case_3
        solve( !KU( wsenc(key^inv(~x_s), ~pass) ) @ #vk.1 )
          case c_wsenc
          solve( !KU( ~pass ) @ #vk.11 )
            case RevealPassword
            by contradiction /* from formulas */
          qed
        qed
      next
        case split_case_4
        solve( !KU( x^(~x_s*x.1) ) @ #j )
          case ClientCommitRequest_case_1
          solve( !KU( ~pass.2 ) @ #vk.12 )
            case RevealPassword
            by solve( !KU( ~x_s ) @ #vk.13 )
          qed
        next
          case ClientCommitRequest_case_2
          solve( !KU( ~pass.2 ) @ #vk.12 )
            case RevealPassword
            by solve( !KU( ~x_s ) @ #vk.14 )
          qed
        next
          case ServerCommitResponse_case_1
          solve( !KU( ~pass.2 ) @ #vk.12 )
            case RevealPassword
            by solve( !KU( ~x_s ) @ #vk.13 )
          qed
        next
          case ServerCommitResponse_case_2
          solve( !KU( ~pass ) @ #vk.10 )
            case RevealPassword
            solve( !KU( wsenc('g'^x, ~pass) ) @ #vk.2 )
              case ClientCommitRequest
              by solve( !KU( ~x_c ) @ #vk.12 )
            next
              case ServerCommitResponse
              by solve( !KU( ~x_s.1 ) @ #vk.11 )
            next
              case c_wsenc
              by contradiction /* cyclic */
            qed
          qed
        next
          case ServerCommitResponse_case_3
          solve( !KU( ~pass.2 ) @ #vk.12 )
            case RevealPassword
            by solve( !KU( ~x_s ) @ #vk.15 )
          qed
        next
          case c_exp
          by solve( !KU( ~x_s ) @ #vk.12 )
        qed
      next
        case split_case_5
        solve( !KU( wsenc(x^inv((~x_s*x.1)), ~pass) ) @ #vk.1 )
          case c_wsenc
          solve( !KU( ~pass ) @ #vk.11 )
            case RevealPassword
            by contradiction /* from formulas */
          qed
        qed
      next
        case split_case_6
        solve( !KU( wsenc(x^(x.1*inv(~x_s)), ~pass) ) @ #vk.1 )
          case c_wsenc
          solve( !KU( ~pass ) @ #vk.11 )
            case RevealPassword
            by contradiction /* from formulas */
          qed
        qed
      next
        case split_case_7
        solve( splitEqs(2) )
          case split_case_1
          solve( !KU( x^(~x_c*inv(x.1)) ) @ #j )
            case ClientCommitRequest
            solve( !KU( ~pass.1 ) @ #vk.10 )
              case RevealPassword
              solve( !KU( wsenc('g'^(~x_c*inv((~x_s*x))), ~pass) ) @ #vk.2 )
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.14 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case c_exp
            by solve( !KU( ~x_c ) @ #vk.12 )
          qed
        next
          case split_case_2
          solve( !KU( wsenc(x^(x.1*inv((~x_s*x.2))), ~pass) ) @ #vk.1 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_3
          solve( !KU( x^(~x_c*x.1*inv(x.2)) ) @ #j )
            case ClientCommitRequest_case_1
            solve( !KU( ~pass.2 ) @ #vk.12 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.14 )
            qed
          next
            case ClientCommitRequest_case_2
            solve( !KU( ~pass.2 ) @ #vk.12 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.14 )
            qed
          next
            case ClientCommitRequest_case_3
            solve( !KU( ~pass.1 ) @ #vk.10 )
              case RevealPassword
              solve( !KU( wsenc('g'^(~x_c*x*inv((~x_s*x.1))), ~pass) ) @ #vk.2 )
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.16 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case ServerCommitResponse_case_1
            solve( !KU( ~pass.2 ) @ #vk.12 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.15 )
            qed
          next
            case ServerCommitResponse_case_2
            solve( !KU( ~pass.2 ) @ #vk.12 )
              case RevealPassword
              by solve( !KU( ~x_c ) @ #vk.15 )
            qed
          next
            case c_exp
            by solve( !KU( ~x_c ) @ #vk.12 )
          qed
        qed
      qed
    next
      case c_senc
      solve( !KU( ~nonce_s ) @ #vk.8 )
        case ClientConfirmRequest_case_1
        solve( splitEqs(1) )
          case split
          solve( !KU( wsdec(scr_0, ~pass.1)^~x_c ) @ #j )
            case c_exp
            by solve( !KU( ~x_c ) @ #vk.16 )
          qed
        qed
      next
        case ClientConfirmRequest_case_2
        solve( splitEqs(1) )
          case split
          solve( !KU( wsenc(z, ~pass.1) ) @ #vk.10 )
            case ClientCommitRequest
            by contradiction /* non-normal terms */
          next
            case c_wsenc
            solve( !KU( ~pass.1 ) @ #vk.16 )
              case RevealPassword
              solve( !KU( z^~x_c ) @ #j )
                case ClientCommitRequest
                solve( !KU( wsenc('g'^(~x_c*inv(~x_s)), ~pass) ) @ #vk.6 )
                  case c_wsenc
                  solve( !KU( ~pass ) @ #vk.18 )
                    case RevealPassword
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case c_exp
                by solve( !KU( ~x_c ) @ #vk.17 )
              qed
            qed
          qed
        qed
      next
        case ClientConfirmRequest_case_3
        solve( !KU( wsenc(key^inv(~x_c), ~pass.1) ) @ #vk.10 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.16 )
            case RevealPassword
            solve( !KU( wsenc(key^inv(~x_s), ~pass) ) @ #vk.6 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.18 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case ClientConfirmRequest_case_4
        solve( !KU( x^(~x_c*x.1) ) @ #j )
          case ClientCommitRequest_case_1
          solve( !KU( ~pass.2 ) @ #vk.17 )
            case RevealPassword
            by solve( !KU( ~x_c ) @ #vk.18 )
          qed
        next
          case ClientCommitRequest_case_2
          solve( !KU( ~pass.1 ) @ #vk.15 )
            case RevealPassword
            solve( !KU( wsenc('g'^x, ~pass.1) ) @ #vk.11 )
              case ClientCommitRequest
              by solve( !KU( ~x_c.1 ) @ #vk.16 )
            next
              case ServerCommitResponse
              by solve( !KU( ~x_s.1 ) @ #vk.17 )
            next
              case c_wsenc
              solve( !KU( wsenc('g'^x.1, ~pass) ) @ #vk.6 )
                case ClientCommitRequest
                solve( !KU( ~x ) @ #vk.17 )
                  case ClientConfirmRequest_case_1
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_2
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_3
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_4
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_5
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_6
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_7
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_8
                  by solve( splitEqs(1) )
                next
                  case RevealPassword
                  by solve( splitEqs(1) )
                next
                  case ServerCommitResponse
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_1
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_2
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_3
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_4
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_5
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_6
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_7
                  by solve( splitEqs(1) )
                next
                  case fresh
                  by solve( splitEqs(1) )
                qed
              next
                case ServerCommitResponse
                solve( !KU( ~x ) @ #vk.16 )
                  case ClientConfirmRequest_case_1
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_2
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_3
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_4
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_5
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_6
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_7
                  by solve( splitEqs(1) )
                next
                  case ClientConfirmRequest_case_8
                  by solve( splitEqs(1) )
                next
                  case RevealPassword
                  by solve( splitEqs(1) )
                next
                  case ServerCommitResponse
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_1
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_2
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_3
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_4
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_5
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_6
                  by solve( splitEqs(1) )
                next
                  case ServerConfirmResponse_case_7
                  by solve( splitEqs(1) )
                next
                  case fresh
                  by solve( splitEqs(1) )
                qed
              next
                case c_wsenc
                solve( !KU( ~pass ) @ #vk.19 )
                  case RevealPassword
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case ClientCommitRequest_case_3
          solve( !KU( ~pass.2 ) @ #vk.17 )
            case RevealPassword
            by solve( !KU( ~x_c ) @ #vk.19 )
          qed
        next
          case ServerCommitResponse_case_1
          solve( !KU( ~pass.2 ) @ #vk.17 )
            case RevealPassword
            by solve( !KU( ~x_c ) @ #vk.18 )
          qed
        next
          case ServerCommitResponse_case_2
          solve( !KU( ~pass.2 ) @ #vk.17 )
            case RevealPassword
            by solve( !KU( ~x_c ) @ #vk.20 )
          qed
        next
          case c_exp
          by solve( !KU( ~x_c ) @ #vk.17 )
        qed
      next
        case ClientConfirmRequest_case_5
        solve( !KU( wsenc(x^(x.1*inv(~x_c)), ~pass.1) ) @ #vk.10 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.16 )
            case RevealPassword
            solve( !KU( x^(x.1*inv(~x_c)) ) @ #vk.16 )
              case ClientCommitRequest_case_1
              solve( !KU( ~pass.2 ) @ #vk.19 )
                case RevealPassword
                by solve( !KU( ~x_c ) @ #vk.21 )
              qed
            next
              case ClientCommitRequest_case_2
              solve( !KU( ~pass.2 ) @ #vk.19 )
                case RevealPassword
                by solve( !KU( ~x_c.1 ) @ #vk.23 )
              qed
            next
              case ServerCommitResponse_case_1
              solve( !KU( ~pass.2 ) @ #vk.19 )
                case RevealPassword
                by solve( !KU( ~x_c ) @ #vk.22 )
              qed
            next
              case ServerCommitResponse_case_2
              solve( !KU( ~pass.2 ) @ #vk.19 )
                case RevealPassword
                by solve( !KU( ~x_c ) @ #vk.24 )
              qed
            next
              case c_exp
              by solve( !KU( ~x_c ) @ #vk.21 )
            qed
          qed
        qed
      next
        case ClientConfirmRequest_case_6
        solve( !KU( wsenc(x^inv((~x_c*x.1)), ~pass.1) ) @ #vk.10 )
          case c_wsenc
          solve( !KU( ~pass.1 ) @ #vk.16 )
            case RevealPassword
            solve( !KU( wsenc(x^inv((~x_s*x.1)), ~pass) ) @ #vk.6 )
              case c_wsenc
              solve( !KU( ~pass ) @ #vk.18 )
                case RevealPassword
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case ClientConfirmRequest_case_7
        solve( splitEqs(1) )
          case split_case_1
          solve( !KU( x^(~x_s*inv(x.1)) ) @ #j )
            case ServerCommitResponse
            solve( !KU( ~pass ) @ #vk.15 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.17 )
          qed
        next
          case split_case_2
          solve( !KU( wsenc(x^(x.1*inv((~x_c*x.2))), ~pass.1) ) @ #vk.10 )
            case c_wsenc
            solve( !KU( ~pass.1 ) @ #vk.16 )
              case RevealPassword
              solve( !KU( x^(x.1*inv((~x_c*x.2))) ) @ #vk.16 )
                case ClientCommitRequest_case_1
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.22 )
                qed
              next
                case ClientCommitRequest_case_2
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_c.1 ) @ #vk.24 )
                qed
              next
                case ServerCommitResponse_case_1
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.23 )
                qed
              next
                case ServerCommitResponse_case_2
                solve( !KU( ~pass.2 ) @ #vk.19 )
                  case RevealPassword
                  by solve( !KU( ~x_c ) @ #vk.25 )
                qed
              next
                case c_exp
                by solve( !KU( ~x_c ) @ #vk.22 )
              qed
            qed
          qed
        next
          case split_case_3
          solve( !KU( x^(~x_s*x.1*inv(x.2)) ) @ #j )
            case ClientCommitRequest_case_1
            solve( !KU( ~pass.2 ) @ #vk.17 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.19 )
            qed
          next
            case ClientCommitRequest_case_2
            solve( !KU( ~pass.2 ) @ #vk.17 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.19 )
            qed
          next
            case ServerCommitResponse_case_1
            solve( !KU( ~pass.2 ) @ #vk.17 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.20 )
            qed
          next
            case ServerCommitResponse_case_2
            solve( !KU( ~pass.2 ) @ #vk.17 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.20 )
            qed
          next
            case ServerCommitResponse_case_3
            solve( !KU( ~pass ) @ #vk.15 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.17 )
          qed
        qed
      next
        case ServerCommitResponse
        solve( splitEqs(1) )
          case split_case_1
          solve( !KU( wsdec(client_commit_request, ~pass)^~x_s ) @ #j )
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.11 )
          qed
        next
          case split_case_2
          solve( !KU( y_c^~x_s ) @ #j )
            case ServerCommitResponse
            solve( !KU( ~pass ) @ #vk.10 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.11 )
          qed
        next
          case split_case_3
          solve( !KU( wsenc(key^inv(~x_s), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_4
          solve( !KU( x^(~x_s*x.1) ) @ #j )
            case ClientCommitRequest_case_1
            solve( !KU( ~pass.1 ) @ #vk.13 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.14 )
            qed
          next
            case ClientCommitRequest_case_2
            solve( !KU( ~pass.1 ) @ #vk.13 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.15 )
            qed
          next
            case ServerCommitResponse_case_1
            solve( !KU( ~pass.1 ) @ #vk.12 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.13 )
            qed
          next
            case ServerCommitResponse_case_2
            solve( !KU( ~pass ) @ #vk.10 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          next
            case ServerCommitResponse_case_3
            solve( !KU( ~pass.1 ) @ #vk.12 )
              case RevealPassword
              by solve( !KU( ~x_s ) @ #vk.15 )
            qed
          next
            case c_exp
            by solve( !KU( ~x_s ) @ #vk.12 )
          qed
        next
          case split_case_5
          solve( !KU( wsenc(x^inv((~x_s*x.1)), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_6
          solve( !KU( wsenc(x^(x.1*inv(~x_s)), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        next
          case split_case_7
          solve( !KU( wsenc(x^(x.1*inv((~x_s*x.2))), ~pass) ) @ #vk.3 )
            case c_wsenc
            solve( !KU( ~pass ) @ #vk.11 )
              case RevealPassword
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma Executable:
  exists-trace
  "∃ #i C S nc ns #j.
    ((CommitClient( C, S, 'initiator', nc, ns ) @ #i) ∧
     (CommitServer( S, C, 'responder', nc, ns ) @ #j)) ∧
    (¬(∃ #k. RevPass( C, S ) @ #k))"
/*
guarded formula characterizing all satisfying traces:
"∃ #i C S nc ns #j.
  (CommitClient( C, S, 'initiator', nc, ns ) @ #i) ∧
  (CommitServer( S, C, 'responder', nc, ns ) @ #j)
 ∧
  ∀ #k. (RevPass( C, S ) @ #k) ⇒ ⊥"
*/
simplify
solve( StateClientConfirmRequest_1( tid, C, S, pass, x_c, y_c, scr_0,
                                    y_s, key, nc, ns, scr_1
       ) ▶₀ #i )
  case ClientConfirmRequest
  solve( StateServerCommitResponse( tid.1, $S, $C, pass.1, x_s, y_s.1, ns,
                                    key.1, y_c
         ) ▶₀ #j )
    case ServerCommitResponse
    solve( !KU( senc(<'3', ~nonce_p>, key) ) @ #vk )
      case ServerConfirmResponse
      solve( !KU( senc(<'2', ~nonce_s, ~nonce_p>, key.1) ) @ #vk.1 )
        case ClientConfirmRequest
        solve( !KU( senc(<'2', ~nonce_s.1, ~nonce_p>, key) ) @ #vk.12 )
          case ClientConfirmRequest
          solve( splitEqs(2) )
            case split_case_5
            solve( !KU( wsenc(x^x.1, ~pass) ) @ #vk.2 )
              case ServerCommitResponse
              solve( splitEqs(3) )
                case split_case_1
                solve( !KU( senc(<'1', ~nonce_s>, 'g'^(~x_c*~x_s)) ) @ #vk.3 )
                  case ServerCommitResponse
                  solve( !KU( wsenc('g'^~x_c, ~pass) ) @ #vk.7 )
                    case ClientCommitRequest
                    SOLVED // trace found
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

/* All well-formedness checks were successful. */

end

==============================================================================
summary of summaries:

analyzed: trace/eap-eke-trace-tagged.spthy

  SrcNonces (all-traces): verified (102 steps)
  Aliveness (all-traces): verified (930 steps)
  WeakAgreement (all-traces): verified (1020 steps)
  NonInjectiveAgreement (all-traces): verified (1020 steps)
  InjectiveAgreement (all-traces): verified (1032 steps)
  PerfectForwardSecrecy (all-traces): verified (1032 steps)
  Executable (exists-trace): verified (12 steps)

==============================================================================

real 143.95
user 1048.52
sys 449.59
